{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"RetroAchievements Documentation retroachievements.org . Welcome to RADocs!","title":"Home"},{"location":"about/","text":"Big Ol' History Lesson \u00b6 Teams \u00b6 Administrative Teams \u00b6 Root Admin Moderation Tech Team Web Team Developer Compliance \u00b6 Developer Compliance Claims Manager Quality Assurance \u00b6 QA Maintainer Entry Manager Hub Manager Set Repair Ticket Hound Writer Cleanup Crew PlayTester Compatibility Tester Code Reviewer RADocs Team Contributors \u00b6 Developer Event Management \u00b6 DevQuest","title":"About Us"},{"location":"about/#big-ol-history-lesson","text":"","title":"Big Ol' History Lesson"},{"location":"about/#teams","text":"","title":"Teams"},{"location":"about/#administrative-teams","text":"Root Admin Moderation Tech Team Web Team","title":"Administrative Teams"},{"location":"about/#developer-compliance","text":"Developer Compliance Claims Manager","title":"Developer Compliance"},{"location":"about/#quality-assurance","text":"QA Maintainer Entry Manager Hub Manager Set Repair Ticket Hound Writer Cleanup Crew PlayTester Compatibility Tester Code Reviewer RADocs Team","title":"Quality Assurance"},{"location":"about/#contributors","text":"Developer","title":"Contributors"},{"location":"about/#event-management","text":"DevQuest","title":"Event Management"},{"location":"ranews/","text":"RANews \u00b6 RetroAchievements Documentation retroachievements.org .","title":"RANews"},{"location":"ranews/#ranews","text":"RetroAchievements Documentation retroachievements.org .","title":"RANews"},{"location":"artists/arthome/","text":"Howdy \u00b6 Hey there!","title":"Artists Home"},{"location":"artists/arthome/#howdy","text":"Hey there!","title":"Howdy"},{"location":"artists/badges/","text":"How to Art \u00b6 96x95!","title":"Badge Guildelines"},{"location":"artists/badges/#how-to-art","text":"96x95!","title":"How to Art"},{"location":"community/discord/","text":"Big Ol' History Lesson \u00b6 Teams \u00b6 Administrative Teams \u00b6 Root Admin Moderation Tech Team Web Team Developer Compliance \u00b6 Developer Compliance Claims Manager Quality Assurance \u00b6 QA Maintainer Entry Manager Hub Manager Set Repair Ticket Hound Writer Cleanup Crew PlayTester Compatibility Tester Code Reviewer RADocs Team Contributors \u00b6 Developer Event Management \u00b6 DevQuest","title":"Discord"},{"location":"community/discord/#big-ol-history-lesson","text":"","title":"Big Ol' History Lesson"},{"location":"community/discord/#teams","text":"","title":"Teams"},{"location":"community/discord/#administrative-teams","text":"Root Admin Moderation Tech Team Web Team","title":"Administrative Teams"},{"location":"community/discord/#developer-compliance","text":"Developer Compliance Claims Manager","title":"Developer Compliance"},{"location":"community/discord/#quality-assurance","text":"QA Maintainer Entry Manager Hub Manager Set Repair Ticket Hound Writer Cleanup Crew PlayTester Compatibility Tester Code Reviewer RADocs Team","title":"Quality Assurance"},{"location":"community/discord/#contributors","text":"Developer","title":"Contributors"},{"location":"community/discord/#event-management","text":"DevQuest","title":"Event Management"},{"location":"create/achievement-creation-tutorials/","text":"Intro Basics Achievement Editor - Flags - Types - Sizes - General Comparisons - Flag Specific Comparisons - Other Toolkit Features Protections Logic Tips and Tricks Lesser-Known Features Workflow Tips Things To Avoid and Why See Also Intro \u00b6 Page is heavily WIP, but the goal is to provide extensive documentation to cover every aspect of set development from start to finish. Will probably end up merging the \"Real Examples\" into this section somehow. Each flag, type, size, comparison, etc. will have its own page. Will also include several tips n' tricks, case studies, etc. Basics \u00b6 Adding Games to the Database Everything you ever wanted to know (but were too scared to ask) about hashes Patch Guide RAM digging Utilizing Game Genie, Game Shark, Codebreaker, Action Replay, etc. codes Code Notes Formatting conventions Achievement Editor \u00b6 Flags \u00b6 Pause If Reset If Reset Next If Add Source Sub Source Add Hits Sub Hits Add Address Indirect Pointers Direct Pointers And Next Multi-Condition Counters and Checkpoints Multi-Condition Resets and Pauses Or Next Measured Measured If Trigger Types \u00b6 Mem Value Delta Mem > Delta Comparisons Prior BCD Float Sizes \u00b6 bit0 - bit7 8-Bit 16-Bit 24-Bit 32-Bit Lower4 and Upper4 16-Bit BE 24-Bit BE 32-Bit BE BitCount Float MBF32 General Comparisons \u00b6 = < <= > >= != Flag Specific Comparisons \u00b6 * / & Other Toolkit Features \u00b6 Hit Counts Using with Reset If Using with Pause If Alt Groups Protections \u00b6 Demo Protection Finding and testing demo addresses Save Protection Delta and Prior Using in-game timers Password Protection Cheat Protection Multiplayer Protection Other Dipswitch BIOS (PlayStation and Saturn) Logic Tips and Tricks \u00b6 Checkpoints hits Pause Locks Using Hit Counts as a timer Using Delta Values and Hit Counts to Detect an Increment Circumvent the Problem of a Counter Incrementing Twice in the Same Frame Various types of chains When to use Reset If or Pause If When to use Delta or Prior Using BitCount for collectables Using Add Source with Mem / Mem comparisons Creating a Timer with Reset If hits based on the speed of the game Lesser-Known Features \u00b6 Double-Clicking bitflags while in 8-bit view Right-Clicking addresses in the editor to jump to them in the Memory Inspector (also works with offsets to jump to the current address) Highlighting conditions and holding CTRL while clicking to change a field in multiple conditions at once Workflow Tips \u00b6 Using Google Sheets and Notepad++ Editing local file Things to Avoid and Why \u00b6 Redundant Reset Ifs Single-Condition achievements Text-Based addresses See Also \u00b6 Point Distribution Badge Creation Rich Presence Leaderboards RATools Making Tutorial Videos","title":"Achievement Creation Tutorials"},{"location":"create/achievement-creation-tutorials/#intro","text":"Page is heavily WIP, but the goal is to provide extensive documentation to cover every aspect of set development from start to finish. Will probably end up merging the \"Real Examples\" into this section somehow. Each flag, type, size, comparison, etc. will have its own page. Will also include several tips n' tricks, case studies, etc.","title":"Intro"},{"location":"create/achievement-creation-tutorials/#basics","text":"Adding Games to the Database Everything you ever wanted to know (but were too scared to ask) about hashes Patch Guide RAM digging Utilizing Game Genie, Game Shark, Codebreaker, Action Replay, etc. codes Code Notes Formatting conventions","title":"Basics"},{"location":"create/achievement-creation-tutorials/#achievement-editor","text":"","title":"Achievement Editor"},{"location":"create/achievement-creation-tutorials/#flags","text":"Pause If Reset If Reset Next If Add Source Sub Source Add Hits Sub Hits Add Address Indirect Pointers Direct Pointers And Next Multi-Condition Counters and Checkpoints Multi-Condition Resets and Pauses Or Next Measured Measured If Trigger","title":"Flags"},{"location":"create/achievement-creation-tutorials/#types","text":"Mem Value Delta Mem > Delta Comparisons Prior BCD Float","title":"Types"},{"location":"create/achievement-creation-tutorials/#sizes","text":"bit0 - bit7 8-Bit 16-Bit 24-Bit 32-Bit Lower4 and Upper4 16-Bit BE 24-Bit BE 32-Bit BE BitCount Float MBF32","title":"Sizes"},{"location":"create/achievement-creation-tutorials/#general-comparisons","text":"= < <= > >= !=","title":"General Comparisons"},{"location":"create/achievement-creation-tutorials/#flag-specific-comparisons","text":"* / &","title":"Flag Specific Comparisons"},{"location":"create/achievement-creation-tutorials/#other-toolkit-features","text":"Hit Counts Using with Reset If Using with Pause If Alt Groups","title":"Other Toolkit Features"},{"location":"create/achievement-creation-tutorials/#protections","text":"Demo Protection Finding and testing demo addresses Save Protection Delta and Prior Using in-game timers Password Protection Cheat Protection Multiplayer Protection Other Dipswitch BIOS (PlayStation and Saturn)","title":"Protections"},{"location":"create/achievement-creation-tutorials/#logic-tips-and-tricks","text":"Checkpoints hits Pause Locks Using Hit Counts as a timer Using Delta Values and Hit Counts to Detect an Increment Circumvent the Problem of a Counter Incrementing Twice in the Same Frame Various types of chains When to use Reset If or Pause If When to use Delta or Prior Using BitCount for collectables Using Add Source with Mem / Mem comparisons Creating a Timer with Reset If hits based on the speed of the game","title":"Logic Tips and Tricks"},{"location":"create/achievement-creation-tutorials/#lesser-known-features","text":"Double-Clicking bitflags while in 8-bit view Right-Clicking addresses in the editor to jump to them in the Memory Inspector (also works with offsets to jump to the current address) Highlighting conditions and holding CTRL while clicking to change a field in multiple conditions at once","title":"Lesser-Known Features"},{"location":"create/achievement-creation-tutorials/#workflow-tips","text":"Using Google Sheets and Notepad++ Editing local file","title":"Workflow Tips"},{"location":"create/achievement-creation-tutorials/#things-to-avoid-and-why","text":"Redundant Reset Ifs Single-Condition achievements Text-Based addresses","title":"Things to Avoid and Why"},{"location":"create/achievement-creation-tutorials/#see-also","text":"Point Distribution Badge Creation Rich Presence Leaderboards RATools Making Tutorial Videos","title":"See Also"},{"location":"create/checklist/","text":"Glossary \u00b6 Terms those crazy dev folk use.","title":"New Achievement Set Checklist"},{"location":"create/checklist/#glossary","text":"Terms those crazy dev folk use.","title":"Glossary"},{"location":"create/condition-syntax/","text":"Memory sizes \u00b6 Size Prefix Example Bit0 0xM 0xM01234 Bit1 0xN 0xN01234 Bit2 0xO 0xO01234 Bit3 0xP 0xP01234 Bit4 0xQ 0xQ01234 Bit5 0xR 0xR01234 Bit6 0xS 0xS01234 Bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x 01234 24bit 0xW 0xW01234 32bit 0xX 0xX01234 16bit BE 0xI 0xI01234 24bit BE 0xJ 0xJ01234 32bit BE 0xG 0xG01234 BitCount 0xK 0xK01234 Float fF fF01234 MBF32 fM fM01234 Prefixes \u00b6 Modifier Prefix Example Delta d d0xH1234 Prior p p0xH1234 BCD b b0xH1234 Invert ~ ~0xH1234 Logical Flags \u00b6 Flag Prefix Example ResetIf R: R:0xH1234=1 ResetNextIf Z: Z:0xH1234=1 PauseIf P: P:0xH1234=1 AndNext N: N:0xH1234=1 OrNext O: O:0xH1234=1 AddSource A: A:0xH1234=1 SubSource B: B:0xH1234=1 AddHits C: C:0xH1234=1 SubHits D: D:0xH1234=1 AddAddress I: I:0xH1234=1 Measured M: M:0xH1234=1 Measured% G: G:0xH1234=1 MeasuredIf Q: Q:0xH1234=1 Trigger T: T:0xH1234=1","title":"Condition Syntax"},{"location":"create/condition-syntax/#memory-sizes","text":"Size Prefix Example Bit0 0xM 0xM01234 Bit1 0xN 0xN01234 Bit2 0xO 0xO01234 Bit3 0xP 0xP01234 Bit4 0xQ 0xQ01234 Bit5 0xR 0xR01234 Bit6 0xS 0xS01234 Bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x 01234 24bit 0xW 0xW01234 32bit 0xX 0xX01234 16bit BE 0xI 0xI01234 24bit BE 0xJ 0xJ01234 32bit BE 0xG 0xG01234 BitCount 0xK 0xK01234 Float fF fF01234 MBF32 fM fM01234","title":"Memory sizes"},{"location":"create/condition-syntax/#prefixes","text":"Modifier Prefix Example Delta d d0xH1234 Prior p p0xH1234 BCD b b0xH1234 Invert ~ ~0xH1234","title":"Prefixes"},{"location":"create/condition-syntax/#logical-flags","text":"Flag Prefix Example ResetIf R: R:0xH1234=1 ResetNextIf Z: Z:0xH1234=1 PauseIf P: P:0xH1234=1 AndNext N: N:0xH1234=1 OrNext O: O:0xH1234=1 AddSource A: A:0xH1234=1 SubSource B: B:0xH1234=1 AddHits C: C:0xH1234=1 SubHits D: D:0xH1234=1 AddAddress I: I:0xH1234=1 Measured M: M:0xH1234=1 Measured% G: G:0xH1234=1 MeasuredIf Q: Q:0xH1234=1 Trigger T: T:0xH1234=1","title":"Logical Flags"},{"location":"create/createhome/","text":"Glossary \u00b6 Terms those crazy dev folk use.","title":"Achievement Development Home"},{"location":"create/createhome/#glossary","text":"Terms those crazy dev folk use.","title":"Glossary"},{"location":"create/glossary/","text":"Glossary \u00b6 Terms those crazy dev folk use.","title":"Glossary"},{"location":"create/glossary/#glossary","text":"Terms those crazy dev folk use.","title":"Glossary"},{"location":"create/minimum-required-versions-for-logic-features/","text":"Sometimes it's useful to know when a feature was added/changed and the implications of these changes, specially if you are working on a ticket. Compare the ticket timestamp to the toolkit releases to determine which behavior the player would have been subject to. Feature RA_Integration RetroArch rcheevos Leaderboard Cancel AND 0.073 (31 Aug 2018) 1.7.0 (25 Dec 2017) n/a Full 32-bit value support 0.073 (31 Aug 2018) 1.7.0 (25 Dec 2017) n/a ResetIf/PauseIf HitCount 0.073 (31 Aug 2018) 1.7.4 (30 Aug 2018) n/a Leaderboard OR 0.073 (31 Aug 2018) 1.7.4 (30 Aug 2018) n/a Delay achievement processing for 100 frames on load 0.073 (31 Aug 2018) n/a n/a Replace 100 frame delay with delayed activation logic 0.075 (04 Feb 2019) 1.6.3 (28 Jul 2017) n/a AndNext 0.76 (21 Jun 2019) 1.7.7 (7 May 2019) 8.0 (4 May 2019) Prior 0.76 (21 Jun 2019) 1.7.7 (7 May 2019) 8.0 (4 May 2019) 24-bit read 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.0.1 (18 Jun 2019) AddAddress 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.1 (21 Nov 2019) Measured 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.1 (21 Nov 2019) Measured syntax for leaderboard values 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.1 (21 Nov 2019) Detect and report Unsupported achievements 0.79 (22 May 2021) 1.8.2 (25 Dec 2019) n/a OrNext 0.78 (18 May 2020) 1.8.7 (17 May 2020) 9.0 (9 May 2020) BitCount 0.78 (18 May 2020) 1.8.7 (17 May 2020) 9.0 (9 May 2020) MeasuredIf 0.78 (18 May 2020) 1.8.7 (17 May 2020) 9.0 (9 May 2020) Trigger 0.79 (22 May 2021) 1.8.7 (17 May 2020) 9.0 (9 May 2020) Include hits in save states 0.073 (31 Aug 2018) 1.9.1 (28-Mar 2021) 9.0 (9 May 2020) SubHits 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) ResetNextIf 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) Ranges in rich presence lookups 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) Maxof($) for Measured leaderboard values 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) ResetIf/PauseIf support for Measured leaderboard values 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) Big Endian memory reads 1.0 (29 Jan 2022) 1.9.9 (5 Sep 2021) 10.2 (27 Aug 2021) Measured raw/percent flag 1.0 (29 Jan 2022) 1.9.9 (5 Sep 2021) 10.2 (27 Aug 2021) Floating point memory reads 1.0 (29 Jan 2022) 1.10.1 (6 Mar 2022) 10.3 (14 Jan 2022) Built-in macros for rich presence 1.0 (29 Jan 2022) 1.10.1 (6 Mar 2022) 10.3 (14 Jan 2022)","title":"Minimum Required Versions for Logic Features"},{"location":"developers/contentguidelines/","text":"Howdy \u00b6 Hey there!","title":"Content Guidelines"},{"location":"developers/contentguidelines/#howdy","text":"Hey there!","title":"Howdy"},{"location":"developers/devcoc/","text":"Developers Code of Conduct \u00b6 Hey. Testing.","title":"Developers Code of Conduct"},{"location":"developers/devcoc/#developers-code-of-conduct","text":"Hey. Testing.","title":"Developers Code of Conduct"},{"location":"developers/devhome/","text":"Howdy \u00b6 Hey there!","title":"Developers Home"},{"location":"developers/devhome/#howdy","text":"Hey there!","title":"Howdy"},{"location":"developers/juniordevs/","text":"Junior Developers \u00b6 Stuff about the program","title":"Junior Developers"},{"location":"developers/juniordevs/#junior-developers","text":"Stuff about the program","title":"Junior Developers"},{"location":"developers/supported-and-unsupported/","text":"Supported Consoles \u00b6 Console ID Console Name Standalones Cores RALib Support Notes 1 \u2022 Sega Genesis \u2022 Mega Drive Genesis Plus GX Picodrive Yes 2 Nintendo 64 Project64 ParaLLEl N64 Mupen64Plus-Next Yes 3 \u2022 SNES \u2022 Super Famicom \u2022 Satellaview \u2022 Sufami Turbo RASnes9x Snes9x Mesen-S Yes 4 Game Boy RAVBA Gambatte Gearboy VBA-M Yes \u2022 mGBA crashes when unloading the core because RALibretro doesn't implement the camera interface 5 Game Boy Advance RAVBA mGBA VBA-M Beetle GBA VBA Next Yes 6 Game Boy Color RAVBA Gambatte Gearboy VBA-M Yes 7 \u2022 NES \u2022 Famicom \u2022 Famicom Disk System RANes Mesen FCEUmm QuickNES Yes 8 \u2022 TurboGrafx-16 \u2022 PC Engine \u2022 TurboGrafx-CD \u2022 PC Engine CD \u2022 SuperGrafx Beetle PCE FAST Beetle SuperGrafx Yes \u2022 SuperGrafx games do not work on the Beetle PCE FAST core 9 \u2022 Mega CD \u2022 Sega CD Genesis Plus GX Yes Appears to still have unmapped RAM (Ecco 1+2) 10 Sega 32X PicoDrive Yes \u2022 Several games are problematic 11 \u2022 Master System \u2022 Mark III RAMeka Genesis Plus GX Gearsystem Picodrive Yes 12 PlayStation Beetle PSX Beetle PSX HW PCSX ReARMed SwanStation Yes 13 Atari Lynx Beetle Lynx Handy Yes 14 \u2022 Neo Geo Pocket \u2022 Neo Geo Pocket Color Beetle NeoPop Yes 15 Game Gear RAMeka Genesis Plus GX Gearsystem Yes 17 Atari Jaguar Virtual Jaguar Yes \u2022 No savestate support \u2022 Many issues with the emulation 18 Nintendo DS DeSmuME MelonDS Yes \u2022 Limited Microphone Support \u2022 No DSi support 23 Magnavox Odyssey 2 O2EM Yes 24 Pokemon Mini PokeMini Yes 25 Atari 2600 Stella Yes 27 Arcade FinalBurn Neo Yes \u2022 Needs Updated Board List \u2022 Some boards may not be fully exposed 28 Virtual Boy Beetle VB Yes 29 MSX/MSX2 blueMSX Yes \u2022 Hash relies on dsk file not being modified \u2022 .DSK files appear to be unsupported if they also require a cartridge (typically a \"sound\" cartridge, which was the case with SD Snatcher). There is a core option for this, but it doesn't seem to function properly. 33 SG-1000 RAMeka Genesis Plus GX blueMSX Yes 38 Apple II RAppleWin No 39 Saturn Beetle Saturn Yabause Kronos Yes \u2022 Saving or Loading states in Kronos often locks up the UI in RALibretro 40 Dreamcast flycast Yes \u2022 Must disable threaded rendering to use save states 41 PlayStation Portable PPSSPP Yes \u2022 Loading save states too fast can cause it to crash \u2022 Some games have various graphical issues 43 3DO Interactive Multiplayer Opera Yes 44 ColecoVision RAMeka blueMSX Yes 45 Intellivision FreeIntV Yes \u2022 Controls are much better than they were \u2022 Crashes if game is reset \u2022 Some crashes that might be related to Intellivoice 46 Vectrex VecX Yes 47 \u2022 PC-8001 \u2022 PC-8801 RAQUASI88 QUASI88 No \u2022 QUASI88 crashes RALib when loading core . Core writes over dsk file when emulator writes to dsk - this breaks hashing \u2022 PC-88VA not supported 49 PC-FX Beetle PC-FX Yes 51 Atari 7800 ProSystem Yes 53 \u2022 WonderSwan \u2022 WonderSwan Color Beetle WonderSwan Yes 63 Watara Supervision Potator Yes Supported But Not Validated \u00b6 Console ID Console Name Standalones Cores RALib Support Notes 37 Amstrad CPC Cap32 Needs Work \u2022 Updates seem to have made it fully functional \u2022 Uncertain how core handles writing to disk - may affect hashing 56 Neo Geo CD NeoCD \u2022 Appears fully functional \u2022 Needs hashing method 71 Arduboy Arduous \u2022 Appears fully functional \u2022 Needs hashing method Unsupported Consoles \u00b6 Console ID Console Name Standalones Cores RALib Support Notes 16 GameCube Dolphin Needs work Generates sound but not video in RALibretro 19 Wii Dolphin Needs work Crashes RALib when testing 20 Wii U Untested 21 PlayStation 2 Play! Low compatibility with most commercial games; black screen with stuttering sound 21 PlayStation 2 PCSX2 PCSX2 is still in an alpha state, does not yet expose memory 22 Xbox 26 DOS dosbox-pure Needs work \u2022 Needs a reliable hashing method \u2022 Needs a way to prevent launching with user-specified command-line parameters \u2022 Needs a way to prevent TSRs 30 Commodore 64 vice_x64 Needs Work \u2022 Save disks are generated with a virtual command ( #SAVEDISK: ) in the m3u (how to ignore for hashing?) \u2022 How to handle multi-disk games that come in a zip without an m3u ? 31 ZX81 EightyOne Needs Work \u2022 Memory not exposed. 32 Oric 34 Vic-20 Needs Work Untested with proper BIOS. 35 Amiga P-UAE Needs Work \u2022 Seems to run fine if zips are loaded. Memory is not exposed. 36 Atari ST Hatari Needs Work \u2022 Memory not exposed. Games seem to run fine. 42 Philips CD-I SAME CDi Untested 48 PC-9800 np2kai Needs Work \u2022 Memory is not exposed. It appears to be exposed in some games depending on the RAM size selected, but it seems like it's machine RAM and not actually related to the game(s). Performance wise, all games tested run without issues. 50 Atari 5200 Atari800 Needs Work \u2022 Appears to work fine, but the core itself is a bit of a headache. The BIOS has to be configured within the core (F1 > Emulator Configuration > System ROM settings). \u2022 Couldn't figure out controls - does Joystick also need to be configured within the core? \u2022 Currently allows loading arbitrary files from the internal menu, bypassing hashing. Can't be supported in hardcore unless that can somehow be blocked. 52 Sharp X68K px68k Crashes RALib upon loading a game 54 Cassette Vision 55 Super Cassette Vision Currently only playable in MAME, which cannot be supported 57 Fairchild Channel-F FreeChaF FBNeo FreeChaF exposes memory, but has some control issues FBNeo appears fine 58 FM Towns 59 ZX Spectrum FUSE \u2022 Requires rcheevos memory map to leverage memory descriptors \u2022 Requires ability to map keyboard to port 3 (RALibretro) \u2022 Uncertain about save support; cannot seem to insert save disk 60 Game & Watch gw \u2022 Doesn't expose memory yet 61 Nokia N-Gage 62 Nintendo 3DS Citra \u2022 Only exposes 64MB of memory - documentation suggests there should be 128MB. \u2022 Does not support save states 64 Sharp X1 X1 Millennium \u2022 Does not expose memory \u2022 Crashes RALibretro \u2022 Uncertain how core handles writing to disk/tape - may affect hashing 65 TIC-80 TIC-80 \u2022 Doesn't expose memory correctly (only see 8 bytes) 66 Thomson TO8/TO8D Theodore Seems to work. Uncertain how core handles writing to disk/tape - may affect hashing 67 PC-6001 N/A 68 Sega PICO Picodrive Can't be controlled fully, needs controls related to turning pages in attached books 69 Mega Duck SameDuck \u2022 Shares SameBoy's issue of reinitializing memory 70 Zeebo N/A Does Not Have Console ID \u00b6 Console ID Console Name Standalones Cores RALib Support Notes PocketStation pockystation Core doesn't seem functional even in Retroarch VMU VeMUlator Untested J2ME freej2me Untested","title":"Emulator Support and Issues"},{"location":"developers/supported-and-unsupported/#supported-consoles","text":"Console ID Console Name Standalones Cores RALib Support Notes 1 \u2022 Sega Genesis \u2022 Mega Drive Genesis Plus GX Picodrive Yes 2 Nintendo 64 Project64 ParaLLEl N64 Mupen64Plus-Next Yes 3 \u2022 SNES \u2022 Super Famicom \u2022 Satellaview \u2022 Sufami Turbo RASnes9x Snes9x Mesen-S Yes 4 Game Boy RAVBA Gambatte Gearboy VBA-M Yes \u2022 mGBA crashes when unloading the core because RALibretro doesn't implement the camera interface 5 Game Boy Advance RAVBA mGBA VBA-M Beetle GBA VBA Next Yes 6 Game Boy Color RAVBA Gambatte Gearboy VBA-M Yes 7 \u2022 NES \u2022 Famicom \u2022 Famicom Disk System RANes Mesen FCEUmm QuickNES Yes 8 \u2022 TurboGrafx-16 \u2022 PC Engine \u2022 TurboGrafx-CD \u2022 PC Engine CD \u2022 SuperGrafx Beetle PCE FAST Beetle SuperGrafx Yes \u2022 SuperGrafx games do not work on the Beetle PCE FAST core 9 \u2022 Mega CD \u2022 Sega CD Genesis Plus GX Yes Appears to still have unmapped RAM (Ecco 1+2) 10 Sega 32X PicoDrive Yes \u2022 Several games are problematic 11 \u2022 Master System \u2022 Mark III RAMeka Genesis Plus GX Gearsystem Picodrive Yes 12 PlayStation Beetle PSX Beetle PSX HW PCSX ReARMed SwanStation Yes 13 Atari Lynx Beetle Lynx Handy Yes 14 \u2022 Neo Geo Pocket \u2022 Neo Geo Pocket Color Beetle NeoPop Yes 15 Game Gear RAMeka Genesis Plus GX Gearsystem Yes 17 Atari Jaguar Virtual Jaguar Yes \u2022 No savestate support \u2022 Many issues with the emulation 18 Nintendo DS DeSmuME MelonDS Yes \u2022 Limited Microphone Support \u2022 No DSi support 23 Magnavox Odyssey 2 O2EM Yes 24 Pokemon Mini PokeMini Yes 25 Atari 2600 Stella Yes 27 Arcade FinalBurn Neo Yes \u2022 Needs Updated Board List \u2022 Some boards may not be fully exposed 28 Virtual Boy Beetle VB Yes 29 MSX/MSX2 blueMSX Yes \u2022 Hash relies on dsk file not being modified \u2022 .DSK files appear to be unsupported if they also require a cartridge (typically a \"sound\" cartridge, which was the case with SD Snatcher). There is a core option for this, but it doesn't seem to function properly. 33 SG-1000 RAMeka Genesis Plus GX blueMSX Yes 38 Apple II RAppleWin No 39 Saturn Beetle Saturn Yabause Kronos Yes \u2022 Saving or Loading states in Kronos often locks up the UI in RALibretro 40 Dreamcast flycast Yes \u2022 Must disable threaded rendering to use save states 41 PlayStation Portable PPSSPP Yes \u2022 Loading save states too fast can cause it to crash \u2022 Some games have various graphical issues 43 3DO Interactive Multiplayer Opera Yes 44 ColecoVision RAMeka blueMSX Yes 45 Intellivision FreeIntV Yes \u2022 Controls are much better than they were \u2022 Crashes if game is reset \u2022 Some crashes that might be related to Intellivoice 46 Vectrex VecX Yes 47 \u2022 PC-8001 \u2022 PC-8801 RAQUASI88 QUASI88 No \u2022 QUASI88 crashes RALib when loading core . Core writes over dsk file when emulator writes to dsk - this breaks hashing \u2022 PC-88VA not supported 49 PC-FX Beetle PC-FX Yes 51 Atari 7800 ProSystem Yes 53 \u2022 WonderSwan \u2022 WonderSwan Color Beetle WonderSwan Yes 63 Watara Supervision Potator Yes","title":"Supported Consoles"},{"location":"developers/supported-and-unsupported/#supported-but-not-validated","text":"Console ID Console Name Standalones Cores RALib Support Notes 37 Amstrad CPC Cap32 Needs Work \u2022 Updates seem to have made it fully functional \u2022 Uncertain how core handles writing to disk - may affect hashing 56 Neo Geo CD NeoCD \u2022 Appears fully functional \u2022 Needs hashing method 71 Arduboy Arduous \u2022 Appears fully functional \u2022 Needs hashing method","title":"Supported But Not Validated"},{"location":"developers/supported-and-unsupported/#unsupported-consoles","text":"Console ID Console Name Standalones Cores RALib Support Notes 16 GameCube Dolphin Needs work Generates sound but not video in RALibretro 19 Wii Dolphin Needs work Crashes RALib when testing 20 Wii U Untested 21 PlayStation 2 Play! Low compatibility with most commercial games; black screen with stuttering sound 21 PlayStation 2 PCSX2 PCSX2 is still in an alpha state, does not yet expose memory 22 Xbox 26 DOS dosbox-pure Needs work \u2022 Needs a reliable hashing method \u2022 Needs a way to prevent launching with user-specified command-line parameters \u2022 Needs a way to prevent TSRs 30 Commodore 64 vice_x64 Needs Work \u2022 Save disks are generated with a virtual command ( #SAVEDISK: ) in the m3u (how to ignore for hashing?) \u2022 How to handle multi-disk games that come in a zip without an m3u ? 31 ZX81 EightyOne Needs Work \u2022 Memory not exposed. 32 Oric 34 Vic-20 Needs Work Untested with proper BIOS. 35 Amiga P-UAE Needs Work \u2022 Seems to run fine if zips are loaded. Memory is not exposed. 36 Atari ST Hatari Needs Work \u2022 Memory not exposed. Games seem to run fine. 42 Philips CD-I SAME CDi Untested 48 PC-9800 np2kai Needs Work \u2022 Memory is not exposed. It appears to be exposed in some games depending on the RAM size selected, but it seems like it's machine RAM and not actually related to the game(s). Performance wise, all games tested run without issues. 50 Atari 5200 Atari800 Needs Work \u2022 Appears to work fine, but the core itself is a bit of a headache. The BIOS has to be configured within the core (F1 > Emulator Configuration > System ROM settings). \u2022 Couldn't figure out controls - does Joystick also need to be configured within the core? \u2022 Currently allows loading arbitrary files from the internal menu, bypassing hashing. Can't be supported in hardcore unless that can somehow be blocked. 52 Sharp X68K px68k Crashes RALib upon loading a game 54 Cassette Vision 55 Super Cassette Vision Currently only playable in MAME, which cannot be supported 57 Fairchild Channel-F FreeChaF FBNeo FreeChaF exposes memory, but has some control issues FBNeo appears fine 58 FM Towns 59 ZX Spectrum FUSE \u2022 Requires rcheevos memory map to leverage memory descriptors \u2022 Requires ability to map keyboard to port 3 (RALibretro) \u2022 Uncertain about save support; cannot seem to insert save disk 60 Game & Watch gw \u2022 Doesn't expose memory yet 61 Nokia N-Gage 62 Nintendo 3DS Citra \u2022 Only exposes 64MB of memory - documentation suggests there should be 128MB. \u2022 Does not support save states 64 Sharp X1 X1 Millennium \u2022 Does not expose memory \u2022 Crashes RALibretro \u2022 Uncertain how core handles writing to disk/tape - may affect hashing 65 TIC-80 TIC-80 \u2022 Doesn't expose memory correctly (only see 8 bytes) 66 Thomson TO8/TO8D Theodore Seems to work. Uncertain how core handles writing to disk/tape - may affect hashing 67 PC-6001 N/A 68 Sega PICO Picodrive Can't be controlled fully, needs controls related to turning pages in attached books 69 Mega Duck SameDuck \u2022 Shares SameBoy's issue of reinitializing memory 70 Zeebo N/A","title":"Unsupported Consoles"},{"location":"developers/supported-and-unsupported/#does-not-have-console-id","text":"Console ID Console Name Standalones Cores RALib Support Notes PocketStation pockystation Core doesn't seem functional even in Retroarch VMU VeMUlator Untested J2ME freej2me Untested","title":"Does Not Have Console ID"},{"location":"events/devquest/","text":"What are DevQuests? \u00b6 They're achievement development-related quests that developers can take part in at any time. Each one has a specific goal and upon reaching that goal, the achievement developer will earn the badge. General Rules \u00b6 All work done for for DevQuests must adhere to the Developer CoC. Put effort into what you do. Submitting shoddy work for the sake of getting a badge ASAP will result in penalties that could lead to disqualifications. All sets submitted for DevQuest must be full sets. No progression-only! By default, hacks, homebrews, prototypes, unlicensed, and subsets do not count. Exceptions vary per DevQuest and will be explicitly stated. Be respectful and responsible. The overall point to DevQuests is to improve existing work as well as generate new content. Let's stick to that. DevQuests do not stack with each other, but may stack with other events such as The Unwanted, Challenge League, or Daily DistRActions. So far, the only exceptions are DevQuest 004 - Veteran Developer and DevQuest 015 - Console Conqueror. Reporting \u00b6 DevQuests that involve making new sets are generally reported by contacting QATeam on site or on Discord. If a DevQuest has a specific contact point, they will be stated. Schedule and Announcements \u00b6 DevQuests do not have a specific release schedule. Typically, they are announced shortly after their badge has been completed. New DevQuests and any updates to existing DevQuests will be announced in #developer-news on the RetroAchievements Discord and site news The Quests \u00b6 Badge Number Name Info 001 Ticket Massacre (Badge-Based) Resolve/close 50 tickets \u2022 Falsifying ticket closures will result in disqualification \u2022 The following do not count toward the total: Network issues, tickets for achievements you developed, tickets you opened, tickets closed on behalf of Junior Developers, and tickets closed as a result of ticket spamming. 002 Summer Set Repair (Badge-Based) Repair 3 sets from provided batch \u2022 Upon selecting a game, you will be presented with a list of repairs that need to be made for the set \u2022 This DevQuest follows standard revision procedures \u2022 Resolve any open tickets for achievements that are kept in the set. Tickets for achievements being left demoted can simply be closed with the reason for demotion cited. \u2022 Revisions must fix all broken logic of kept achievements, fix broken challenges, etc. 003 Singles In Your Area (Badge-Based) Tighten up the logic for 20 single-condition achievements \u2022 Do not just add a bad and/or redundant condition and call it a day. They will be checked. \u2022 These do not require a revision vote since it is only tightening logic \u2022 Achievements cannot be your own; you should fix those anyway! 004 Veteran Developer (Achievement-Based) This DevQuest consists of several passive goals, each one being their own achievement, which are as followed: 1. Has published at least 1000 achievements and worked on at least 25 sets as the sole or majority developer 2. Has created achievements for at least ten different console IDs 3. Has been an active developer for at least two years 4. At least 85% of sets have dynamic rich presence (Vet Dev I required) 5. Yielded unlocks have exceeded 50,000 6. As a sole developer, submitted one or more sets for code review and received an overall grade of at least 20 7. Has used at least 75% of all currently available flags and features (Vet Dev I and VI required)8. Has obtained at least two DevQuest badges \u2022 Note: A constantly evolving toolkit means that these requirements are subject to change at any time 005 Trigger Happy (Badge-Based) Update 20 sets with the Trigger and Measured flags \u2022 They need to actually make sense \u2022 You can do your own sets, but each one counts as half a set. 006 The Unwanted (Badge-Based) Develop a set for an unpopular system assigned to you at random \u2022 Eligible systems: PC Engine, PC Engine CD, Sega CD, 32X, Atari Lynx, Neo Geo Pocket, Neo Geo Pocket Color, Game Gear, Atari Jaguar, Virtual Boy, MSX/MSX2, SG-1000, Apple II, Saturn, 3DO, ColecoVision, Intellivision, Vectrex, PC-8800, Atari 7800, WonderSwan, and WonderSwan Color \u2022 No hacks or homebrew unless those are the only types of games left without sets. There are two ways to be able to re-spin: 1. If your selected console is Atari Jaguar, Sega 32X, or Sega Saturn. The first two are fairly problematic to dev for and the last is a resource hog that many people have trouble running just to play, much less dev to set 2. If your claim expires or you drop your claim. The penalty for dropping a set is still having to wait until the claim would have expired before getting a re-spin. For example, if you claim a set on September 1 st and drop it on November 1 st , you'll still need to wait until December 1 st before the re-spin. You can only do this once 007 Most Wanted (Badge-Based) Develop a set for one of the most requested games. Must be in RANews at the time of claiming it \u2022 If you already have one claimed you must be under 50% progress for it to count 008 World Traveler (Badge-Based) Develop two sets for games that were never officially released in English \u2022 Games with translation patches DO count! \u2022 Hacks and hombrew do not count. Unlicensed titles may count as long as they are not blatant bootleg ports or hacks of another game. If you're unsure then ask! \u2022 If a game was released in English on another platform with RetroAchievements support, half credit may be granted. Games that only released in English on unsupported platforms will receive full credit. 009 Launch Party! (Badge-Based) Develop a set for a newly supported console within 6 months of RA support \u2022 PSP window: 2021-10-01 through 2022-04-01 \u2022 Dreamcast window: 2022-02-12 through 2022-08-12 010 It Takes Two (Badge-Based) Join forces with other developers to publish two collab sets \u2022 Sets must have a fair share of the work done by each dev involved \u2022 Each developer must publish at least 20 achievements to count Achievements must make sense; no fluff to fulfill requirement! 011 Happy Birthday RA! (Badge-Based) Develop a set for the Mega Drive/Genesis to celebrate the anniversary of RA's first achievement \u2022 Must be either full sets or a major/significant revision \u2022 Sega CD and Sega 32X games are not eligible. \u2022 Neither are those Sega 32X CD games (nice try!) \u2022 If you already have one claimed, you must be under 50% progress for it to count \u2022 Collabs are allowed so long as the work is visibly split. 012 Hacker's Habit (Badge-Based) Create two new sets for robust hacks. \u2022 Sets intended for this quest must be complete and encompass all notable content specific to the hack. \u2022 Acceptable hacks must be either complete overhauls that drastically change the level design, or introduce new mechanics that greatly change how you progress through the game. \u2022 Meme hacks, single-level hacks, and other small modifications aren't eligible. \u2022 You're limited to one hack per franchise. As an example, if you create a set for an SMW or Mega Man 2 hack, you can't make a second one for SM64 or Mega Man 3. 013 complete.me (Badge-Based) Provide significant content to three sets that are progression-only or were demoted due to being incomplete. \u2022 Choose from a provided list or grab one from a hub, just make sure you let us know when you start so we can mark it! \u2022 Must go through the revision process as per usual! \u2022 Make sure you take care with the set and don't just throw in a bunch of filler \u2022 Don't hesitate to contact us with any questions or suggestion 014 Laudable Leaderboards (Badge-Based) Create leaderboards for 10 games that currently do not have any! \u2022 Cover different game modes/difficulties when applicable. \u2022 Try to cover leaderboards that make sense for the game. Some examples: - For Arcade-type games it is fine to just add High Score leaderboards, possibly highest in a single life - For Racing games time trials for tracks are pretty standard - Speedruns for Platformers - Minigames that track high scores or time are good candidates - And so on. Reach out if you have any questions about a specific game \u2022 You can do your own sets for half-credit as long as they were published prior to this DevQuest (2022-03-02) \u2022 Please leave comments on set page for what you added for log purposes 015 Console Conqueror (Achievement-Based) Publish a set for every supported console on RetroAchievements \u2022 Each console ID will have an achievement associated with it. Newly supported console IDs means new achievements! \u2022 Contact us to opt-in to being tracked for this. There will generally be no need for reports. \u2022 The only requirement for an unlock is that you are the sole or majority developer of a set on that console ID. An even split in collabs will count if you have at least 20 achievements in the set. \u2022 As a last resort , cases where there are no games left to make a full set for or you'd be scraping the bottom of the barrel, you can still unlock the achievement for that console ID by having and/or obtaining at least 3 points in the dev-related tasks below (please note that past work will be factored in): - 2 Points - <50% dev of a set - 2 Points - Got at least 10 achievement badges to pass the icon-gauntlet - 2 Points - Resolved at least 5 legitimate tickets - 2 Points - Made at least 5 leaderboards - 1 Points - Made dynamic RP for at least 5 sets - 1 Points - Got a new game icon to pass the icon-gauntlet - 1 Points - Spelling/Grammar corrections in titles/descriptions - There will additional ways to earn these points in the future to ensure these do not become missable! Could be anything from hash identification, patch creation, writing guides, tagging, etc. Let us know if you have suggestions! \u2022 This DevQuest is 100% retroactive! Potential future revisions of your work will not count against you, so no worries about losing eligibility for an unlock. Suggestions \u00b6 If you have suggestions for a DevQuest, send a message to QATeam with the following info: Quest Name Point of Contact - QATeam are the default contact for all DevQuests, but if you'd like to handle submissions for your suggestion, let them know. Award Type - If there is one specific goal then you would want a badge-based award. If there are multiple goals then you would want an achievement-based award. Game Type - State whether hacks, homebrews, prototypes, unlicensed, and/or subsets are allowed. Goal(s) - A brief description of the DevQuest. Examples: \"Develop a set for such-and-such console,\" \"Develop a Holiday-Themed Set,\" \"Create Dynamic Rich Presence for 10 Games,\" etc. Rules - List any specific guidelines and criteria that submissions must meet. Is there a minimum achievement count? Are there minor exceptions that result in half-credit? Do submissions need to be pre-approved? The more simple they are, the better!","title":"DevQuest"},{"location":"events/devquest/#what-are-devquests","text":"They're achievement development-related quests that developers can take part in at any time. Each one has a specific goal and upon reaching that goal, the achievement developer will earn the badge.","title":"What are DevQuests?"},{"location":"events/devquest/#general-rules","text":"All work done for for DevQuests must adhere to the Developer CoC. Put effort into what you do. Submitting shoddy work for the sake of getting a badge ASAP will result in penalties that could lead to disqualifications. All sets submitted for DevQuest must be full sets. No progression-only! By default, hacks, homebrews, prototypes, unlicensed, and subsets do not count. Exceptions vary per DevQuest and will be explicitly stated. Be respectful and responsible. The overall point to DevQuests is to improve existing work as well as generate new content. Let's stick to that. DevQuests do not stack with each other, but may stack with other events such as The Unwanted, Challenge League, or Daily DistRActions. So far, the only exceptions are DevQuest 004 - Veteran Developer and DevQuest 015 - Console Conqueror.","title":"General Rules"},{"location":"events/devquest/#reporting","text":"DevQuests that involve making new sets are generally reported by contacting QATeam on site or on Discord. If a DevQuest has a specific contact point, they will be stated.","title":"Reporting"},{"location":"events/devquest/#schedule-and-announcements","text":"DevQuests do not have a specific release schedule. Typically, they are announced shortly after their badge has been completed. New DevQuests and any updates to existing DevQuests will be announced in #developer-news on the RetroAchievements Discord and site news","title":"Schedule and Announcements"},{"location":"events/devquest/#the-quests","text":"Badge Number Name Info 001 Ticket Massacre (Badge-Based) Resolve/close 50 tickets \u2022 Falsifying ticket closures will result in disqualification \u2022 The following do not count toward the total: Network issues, tickets for achievements you developed, tickets you opened, tickets closed on behalf of Junior Developers, and tickets closed as a result of ticket spamming. 002 Summer Set Repair (Badge-Based) Repair 3 sets from provided batch \u2022 Upon selecting a game, you will be presented with a list of repairs that need to be made for the set \u2022 This DevQuest follows standard revision procedures \u2022 Resolve any open tickets for achievements that are kept in the set. Tickets for achievements being left demoted can simply be closed with the reason for demotion cited. \u2022 Revisions must fix all broken logic of kept achievements, fix broken challenges, etc. 003 Singles In Your Area (Badge-Based) Tighten up the logic for 20 single-condition achievements \u2022 Do not just add a bad and/or redundant condition and call it a day. They will be checked. \u2022 These do not require a revision vote since it is only tightening logic \u2022 Achievements cannot be your own; you should fix those anyway! 004 Veteran Developer (Achievement-Based) This DevQuest consists of several passive goals, each one being their own achievement, which are as followed: 1. Has published at least 1000 achievements and worked on at least 25 sets as the sole or majority developer 2. Has created achievements for at least ten different console IDs 3. Has been an active developer for at least two years 4. At least 85% of sets have dynamic rich presence (Vet Dev I required) 5. Yielded unlocks have exceeded 50,000 6. As a sole developer, submitted one or more sets for code review and received an overall grade of at least 20 7. Has used at least 75% of all currently available flags and features (Vet Dev I and VI required)8. Has obtained at least two DevQuest badges \u2022 Note: A constantly evolving toolkit means that these requirements are subject to change at any time 005 Trigger Happy (Badge-Based) Update 20 sets with the Trigger and Measured flags \u2022 They need to actually make sense \u2022 You can do your own sets, but each one counts as half a set. 006 The Unwanted (Badge-Based) Develop a set for an unpopular system assigned to you at random \u2022 Eligible systems: PC Engine, PC Engine CD, Sega CD, 32X, Atari Lynx, Neo Geo Pocket, Neo Geo Pocket Color, Game Gear, Atari Jaguar, Virtual Boy, MSX/MSX2, SG-1000, Apple II, Saturn, 3DO, ColecoVision, Intellivision, Vectrex, PC-8800, Atari 7800, WonderSwan, and WonderSwan Color \u2022 No hacks or homebrew unless those are the only types of games left without sets. There are two ways to be able to re-spin: 1. If your selected console is Atari Jaguar, Sega 32X, or Sega Saturn. The first two are fairly problematic to dev for and the last is a resource hog that many people have trouble running just to play, much less dev to set 2. If your claim expires or you drop your claim. The penalty for dropping a set is still having to wait until the claim would have expired before getting a re-spin. For example, if you claim a set on September 1 st and drop it on November 1 st , you'll still need to wait until December 1 st before the re-spin. You can only do this once 007 Most Wanted (Badge-Based) Develop a set for one of the most requested games. Must be in RANews at the time of claiming it \u2022 If you already have one claimed you must be under 50% progress for it to count 008 World Traveler (Badge-Based) Develop two sets for games that were never officially released in English \u2022 Games with translation patches DO count! \u2022 Hacks and hombrew do not count. Unlicensed titles may count as long as they are not blatant bootleg ports or hacks of another game. If you're unsure then ask! \u2022 If a game was released in English on another platform with RetroAchievements support, half credit may be granted. Games that only released in English on unsupported platforms will receive full credit. 009 Launch Party! (Badge-Based) Develop a set for a newly supported console within 6 months of RA support \u2022 PSP window: 2021-10-01 through 2022-04-01 \u2022 Dreamcast window: 2022-02-12 through 2022-08-12 010 It Takes Two (Badge-Based) Join forces with other developers to publish two collab sets \u2022 Sets must have a fair share of the work done by each dev involved \u2022 Each developer must publish at least 20 achievements to count Achievements must make sense; no fluff to fulfill requirement! 011 Happy Birthday RA! (Badge-Based) Develop a set for the Mega Drive/Genesis to celebrate the anniversary of RA's first achievement \u2022 Must be either full sets or a major/significant revision \u2022 Sega CD and Sega 32X games are not eligible. \u2022 Neither are those Sega 32X CD games (nice try!) \u2022 If you already have one claimed, you must be under 50% progress for it to count \u2022 Collabs are allowed so long as the work is visibly split. 012 Hacker's Habit (Badge-Based) Create two new sets for robust hacks. \u2022 Sets intended for this quest must be complete and encompass all notable content specific to the hack. \u2022 Acceptable hacks must be either complete overhauls that drastically change the level design, or introduce new mechanics that greatly change how you progress through the game. \u2022 Meme hacks, single-level hacks, and other small modifications aren't eligible. \u2022 You're limited to one hack per franchise. As an example, if you create a set for an SMW or Mega Man 2 hack, you can't make a second one for SM64 or Mega Man 3. 013 complete.me (Badge-Based) Provide significant content to three sets that are progression-only or were demoted due to being incomplete. \u2022 Choose from a provided list or grab one from a hub, just make sure you let us know when you start so we can mark it! \u2022 Must go through the revision process as per usual! \u2022 Make sure you take care with the set and don't just throw in a bunch of filler \u2022 Don't hesitate to contact us with any questions or suggestion 014 Laudable Leaderboards (Badge-Based) Create leaderboards for 10 games that currently do not have any! \u2022 Cover different game modes/difficulties when applicable. \u2022 Try to cover leaderboards that make sense for the game. Some examples: - For Arcade-type games it is fine to just add High Score leaderboards, possibly highest in a single life - For Racing games time trials for tracks are pretty standard - Speedruns for Platformers - Minigames that track high scores or time are good candidates - And so on. Reach out if you have any questions about a specific game \u2022 You can do your own sets for half-credit as long as they were published prior to this DevQuest (2022-03-02) \u2022 Please leave comments on set page for what you added for log purposes 015 Console Conqueror (Achievement-Based) Publish a set for every supported console on RetroAchievements \u2022 Each console ID will have an achievement associated with it. Newly supported console IDs means new achievements! \u2022 Contact us to opt-in to being tracked for this. There will generally be no need for reports. \u2022 The only requirement for an unlock is that you are the sole or majority developer of a set on that console ID. An even split in collabs will count if you have at least 20 achievements in the set. \u2022 As a last resort , cases where there are no games left to make a full set for or you'd be scraping the bottom of the barrel, you can still unlock the achievement for that console ID by having and/or obtaining at least 3 points in the dev-related tasks below (please note that past work will be factored in): - 2 Points - <50% dev of a set - 2 Points - Got at least 10 achievement badges to pass the icon-gauntlet - 2 Points - Resolved at least 5 legitimate tickets - 2 Points - Made at least 5 leaderboards - 1 Points - Made dynamic RP for at least 5 sets - 1 Points - Got a new game icon to pass the icon-gauntlet - 1 Points - Spelling/Grammar corrections in titles/descriptions - There will additional ways to earn these points in the future to ensure these do not become missable! Could be anything from hash identification, patch creation, writing guides, tagging, etc. Let us know if you have suggestions! \u2022 This DevQuest is 100% retroactive! Potential future revisions of your work will not count against you, so no worries about losing eligibility for an unlock.","title":"The Quests"},{"location":"events/devquest/#suggestions","text":"If you have suggestions for a DevQuest, send a message to QATeam with the following info: Quest Name Point of Contact - QATeam are the default contact for all DevQuests, but if you'd like to handle submissions for your suggestion, let them know. Award Type - If there is one specific goal then you would want a badge-based award. If there are multiple goals then you would want an achievement-based award. Game Type - State whether hacks, homebrews, prototypes, unlicensed, and/or subsets are allowed. Goal(s) - A brief description of the DevQuest. Examples: \"Develop a set for such-and-such console,\" \"Develop a Holiday-Themed Set,\" \"Create Dynamic Rich Presence for 10 Games,\" etc. Rules - List any specific guidelines and criteria that submissions must meet. Is there a minimum achievement count? Are there minor exceptions that result in half-credit? Do submissions need to be pre-approved? The more simple they are, the better!","title":"Suggestions"},{"location":"general/generalhome/","text":"","title":"General Home"},{"location":"general/leaderboard-and-achievement-hunting-rules/","text":"Cheaters \u00b6 No cheats or dead!","title":"Global Leaderboard and Achievement Hunting Rules"},{"location":"general/leaderboard-and-achievement-hunting-rules/#cheaters","text":"No cheats or dead!","title":"Cheaters"},{"location":"general/manifesto/","text":"This is the RetroAchievements Manifesto and every member of this community should be aware of this. Since the early days of RetroAchievements, this is what we have in our FAQ as the answer for What is RetroAchievements.org? RetroAchievements.org is a zero profit community who collaborate and compete to earn custom-made achievements in classic games through emulation. Achievements are made by and for the community. (...) In this manifesto we're going to go deeper into that answer. RetroAchievements.org is a zero profit community \u00b6 We do have a donation link on our frontpage, but we're still a zero profit community. The patrons contribute with literally one dollar per month, and fortunately we have enough patrons to pay the server without needing to rely on annoying adverts. However, we want to make very clear that getting donations is not our business model, exactly because RetroAchievements is not a business! Business organizations are always eager to get more customers. They do what they can to please the customers and keep getting more and more of them. But here, at RetroAchievements, we are not a business, we are a community . We don't have customers, we have community members. We are a bunch of people passionate about retrogames. And if you share the same passion, you're very welcome to join us. Although we're welcoming anyone, we're not desperately begging for more and more users. It's your call: if you like what we have to offer, pick your gamepad and let's play some classics! Achievements are made by and for the community. \u00b6 It's related to what was said above. We are not offering a service for outsiders. The things we create in this community are for this very same community. You're welcome to stay with us, but it's up to you to decide if you want to be part of it. And while being part of this community, always keep in mind the following statements: 1. The most important thing we have here are the achievements. 2. The most important people we have here are the achievement creators. What does that mean? The most important thing we have here are the achievements. \u00b6 We all love those badges on our profile page, right? Such attachment to that badge sometimes causes frustration when the respective achievement set get a revision. But it's important to keep in mind that this project is constantly evolving. We make achievement set revisions with quality in mind, and to show actual respect for the game. We also have respect for the awards you got, but improving the overall quality of the project has precedence over our individual profile pages and/or our amount of points. Also, if you're not able to master an achievement set it doesn't automatically mean that it needs to be nerfed/demoted/turned into a bonus set. If other players got that, it's probable you can get that too. But if you can't, it's OK too. You don't need to unlock every achievement to keep having fun with old games. If you still think the achievement set has unwelcome concepts , you can post your arguments in the game's forum topic. Just be sure to be respectful in your words. Which brings us to the next point... The most important people we have here are the achievement creators. \u00b6 Don't get it wrong! The RetroAchievements ecosystem has a lot of people, playing many different roles than creating achievements, and they are all important. But the achievement creators are the backbone of this project. Without them, this is just a buggy and old fashioned website. Achievement creation is a very time consuming activity. The people doing it dedicate a big portion of their free time producing content for the benefit of the whole community. Anyways, even if you're not able to/interested in creating achievements and just want to play, you're also important to us. In fact we have countless players that are very valuable members . The key point here is: get involved and be nice. The more you get involved, the more valuable you are to the community. Last but not least, if you have criticism about achievement creators' work, be respectful. Showing bitterness towards them is strongly frowned upon. Be disrespectful with them and you're definitely not welcome here.","title":"RetroAchievements Manifesto"},{"location":"general/manifesto/#retroachievementsorg-is-a-zero-profit-community","text":"We do have a donation link on our frontpage, but we're still a zero profit community. The patrons contribute with literally one dollar per month, and fortunately we have enough patrons to pay the server without needing to rely on annoying adverts. However, we want to make very clear that getting donations is not our business model, exactly because RetroAchievements is not a business! Business organizations are always eager to get more customers. They do what they can to please the customers and keep getting more and more of them. But here, at RetroAchievements, we are not a business, we are a community . We don't have customers, we have community members. We are a bunch of people passionate about retrogames. And if you share the same passion, you're very welcome to join us. Although we're welcoming anyone, we're not desperately begging for more and more users. It's your call: if you like what we have to offer, pick your gamepad and let's play some classics!","title":"RetroAchievements.org is a zero profit community"},{"location":"general/manifesto/#achievements-are-made-by-and-for-the-community","text":"It's related to what was said above. We are not offering a service for outsiders. The things we create in this community are for this very same community. You're welcome to stay with us, but it's up to you to decide if you want to be part of it. And while being part of this community, always keep in mind the following statements: 1. The most important thing we have here are the achievements. 2. The most important people we have here are the achievement creators. What does that mean?","title":"Achievements are made by and for the community."},{"location":"general/manifesto/#the-most-important-thing-we-have-here-are-the-achievements","text":"We all love those badges on our profile page, right? Such attachment to that badge sometimes causes frustration when the respective achievement set get a revision. But it's important to keep in mind that this project is constantly evolving. We make achievement set revisions with quality in mind, and to show actual respect for the game. We also have respect for the awards you got, but improving the overall quality of the project has precedence over our individual profile pages and/or our amount of points. Also, if you're not able to master an achievement set it doesn't automatically mean that it needs to be nerfed/demoted/turned into a bonus set. If other players got that, it's probable you can get that too. But if you can't, it's OK too. You don't need to unlock every achievement to keep having fun with old games. If you still think the achievement set has unwelcome concepts , you can post your arguments in the game's forum topic. Just be sure to be respectful in your words. Which brings us to the next point...","title":"The most important thing we have here are the achievements."},{"location":"general/manifesto/#the-most-important-people-we-have-here-are-the-achievement-creators","text":"Don't get it wrong! The RetroAchievements ecosystem has a lot of people, playing many different roles than creating achievements, and they are all important. But the achievement creators are the backbone of this project. Without them, this is just a buggy and old fashioned website. Achievement creation is a very time consuming activity. The people doing it dedicate a big portion of their free time producing content for the benefit of the whole community. Anyways, even if you're not able to/interested in creating achievements and just want to play, you're also important to us. In fact we have countless players that are very valuable members . The key point here is: get involved and be nice. The more you get involved, the more valuable you are to the community. Last but not least, if you have criticism about achievement creators' work, be respectful. Showing bitterness towards them is strongly frowned upon. Be disrespectful with them and you're definitely not welcome here.","title":"The most important people we have here are the achievement creators."},{"location":"general/ralibretro/","text":"RetroArch \u00b6 Hey there!","title":"RALibretro"},{"location":"general/ralibretro/#retroarch","text":"Hey there!","title":"RetroArch"},{"location":"general/retroarch/","text":"RetroArch \u00b6 Yo. Hello again","title":"RetroArch"},{"location":"general/retroarch/#retroarch","text":"Yo. Hello again","title":"RetroArch"},{"location":"general/usercoc/","text":"Dos and Don'ts \u00b6 Don't do that. Do this instead.","title":"Users Code of Conduct"},{"location":"general/usercoc/#dos-and-donts","text":"Don't do that. Do this instead.","title":"Dos and Don'ts"},{"location":"general/userfaq/","text":"What the FAQ \u00b6 Q: Do you think achievements?","title":"FAQ"},{"location":"general/userfaq/#what-the-faq","text":"Q: Do you think achievements?","title":"What the FAQ"},{"location":"help/editingdocs/","text":"How 2 Docs \u00b6 I'm feeling good about this.","title":"How 2 Docs"},{"location":"help/editingdocs/#how-2-docs","text":"I'm feeling good about this.","title":"How 2 Docs"},{"location":"support/privacy-policy/","text":"Privacy Policy \u00b6 Do we even have one?","title":"Privacy Policy"},{"location":"support/privacy-policy/#privacy-policy","text":"Do we even have one?","title":"Privacy Policy"}]}