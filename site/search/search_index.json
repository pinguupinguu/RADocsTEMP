{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the NEW RetroAchievements documentation! Under Construction! The docs are undergoing a much needed overhaul and I only put this here to test this thing out! RADocsTEMP \u00b6 Welcome! This repo is dedicated to coordinating a MASSIVE overhaul to the RetroAchievements documentation: https://docs.retroachievements.org/ There are many pages and/or sections of the current docs that are outdated or no longer relevant. The way it has been setup in the past: updates are made to the wiki, which in turn are deployed to the docs subdomain. However, when deploying, we do not see what changes were actually made. We have to cross our fingers and hope nobody screwed something up. Also, the format rarely looks as it should according to the wiki. For example: bullet lists don't have automatic line breaks so they have to be added manually. As you can probably imagine, this has the potential to get very nasty and makes keeping any sort of accurate changelog very frustrating, which is why that workflow absolutely must go. My proposal was to start from scratch, update, reorganize, expand, and clarify with an entirely new workflow: 1. Clone the docs repository (this one, for now). 2. Set up mkdocs ( https://www.mkdocs.org/ ) to work with that repository. 3. Edit the Markdown files locally, which can be previewed in a local instance, and save changes. 4. Submit a Pull Request to merge your changes with the main repository. So yes, making the actual edits will require some basic know-how with GitHub. If you're willing to learn, it isn't that difficult. If that is not for you, no worries, there will be other ways you can contribute to this project. These are the biggest objectives in this overhaul: Get rid of everything that is no longer relevant. RAGens? 400-point cap? Believe it or not, there are still mentions of these lurking about! Update any documentation that needs to be updated. Some rules/guidelines are out of date. Keep in mind we are not creating or revising policies here. If you disagree with a rule, this is not the place to discuss it. Update images, gifs, etc. that show older versions of the toolkit, gameplay of achievements popping, etc., the site, etc. The current docs host the images in an \"Issues\" thread, which is not ideal at all. With the new workflow, they will be within the repo itself. No links will need to be changed; only the files themselves. Completely recategorize so it's not simply \"General\" and \"Developer\" docs. Create a thorough collection of achievement logic examples/breakdowns. This is so very long overdue. Clarify and simplify as much as we can. Is there are page somewhere with five paragraphs that just never seem to get to the point? Can it be rewritten to be a single paragraph? By all means, do it. The contents of this repo as of July 2022 are a bit of a mess. Most of the existing RADocs pages have been transferred here, but nothing has been organized or optimized yet. There are lots of broken links, stuff that doesn't make sense, placeholders, etc. The time I've spent working on the overhaul so far has been spent getting familiar with mkdocs + material themes, etc. Things are going to start moving quickly here. :) - tele For community guidelines, you must know the RetroAchievements Manifesto and adhere the User's Code of Conduct . If you're looking for docs about creating achievements, check our Developer docs section. We encourage all community members to join our Discord Server , we use this for most communication. The complete list of pages is on the sidebar, but here's a brief description of some of them: FAQ : the Frequently Asked Questions (like which RetroArch core should I use? ). Global Leaderboard and Achievement Hunting Rules : explains the rules for the Global Leaderboard, what's the Untracked status, what can be considered cheating, etc. Downloads : our alternative downloads page. Free Games : games that are completely and legally free download and play on your emulators. Events : learn about the various community events that take place at RetroAchievements. My game is not loading achievements : what you have to do when your game isn't loading achievements. System X wen : Something meleu snuck in one day. Why you shouldn't use the load state feature : why you should expect to have issues if you use save/load state while playing. A message for Achievement Hunters and Completionists about revisions : why you shouldn't be frustrated when a revision on an achievement set is made. How to contribute if you are not a developer : if you don't know how to develop achievements, there are many other ways to contribute with the community. You can help to improve these docs by editing/creating the pages at RetroAchievements wiki","title":"Home"},{"location":"#radocstemp","text":"Welcome! This repo is dedicated to coordinating a MASSIVE overhaul to the RetroAchievements documentation: https://docs.retroachievements.org/ There are many pages and/or sections of the current docs that are outdated or no longer relevant. The way it has been setup in the past: updates are made to the wiki, which in turn are deployed to the docs subdomain. However, when deploying, we do not see what changes were actually made. We have to cross our fingers and hope nobody screwed something up. Also, the format rarely looks as it should according to the wiki. For example: bullet lists don't have automatic line breaks so they have to be added manually. As you can probably imagine, this has the potential to get very nasty and makes keeping any sort of accurate changelog very frustrating, which is why that workflow absolutely must go. My proposal was to start from scratch, update, reorganize, expand, and clarify with an entirely new workflow: 1. Clone the docs repository (this one, for now). 2. Set up mkdocs ( https://www.mkdocs.org/ ) to work with that repository. 3. Edit the Markdown files locally, which can be previewed in a local instance, and save changes. 4. Submit a Pull Request to merge your changes with the main repository. So yes, making the actual edits will require some basic know-how with GitHub. If you're willing to learn, it isn't that difficult. If that is not for you, no worries, there will be other ways you can contribute to this project. These are the biggest objectives in this overhaul: Get rid of everything that is no longer relevant. RAGens? 400-point cap? Believe it or not, there are still mentions of these lurking about! Update any documentation that needs to be updated. Some rules/guidelines are out of date. Keep in mind we are not creating or revising policies here. If you disagree with a rule, this is not the place to discuss it. Update images, gifs, etc. that show older versions of the toolkit, gameplay of achievements popping, etc., the site, etc. The current docs host the images in an \"Issues\" thread, which is not ideal at all. With the new workflow, they will be within the repo itself. No links will need to be changed; only the files themselves. Completely recategorize so it's not simply \"General\" and \"Developer\" docs. Create a thorough collection of achievement logic examples/breakdowns. This is so very long overdue. Clarify and simplify as much as we can. Is there are page somewhere with five paragraphs that just never seem to get to the point? Can it be rewritten to be a single paragraph? By all means, do it. The contents of this repo as of July 2022 are a bit of a mess. Most of the existing RADocs pages have been transferred here, but nothing has been organized or optimized yet. There are lots of broken links, stuff that doesn't make sense, placeholders, etc. The time I've spent working on the overhaul so far has been spent getting familiar with mkdocs + material themes, etc. Things are going to start moving quickly here. :) - tele For community guidelines, you must know the RetroAchievements Manifesto and adhere the User's Code of Conduct . If you're looking for docs about creating achievements, check our Developer docs section. We encourage all community members to join our Discord Server , we use this for most communication. The complete list of pages is on the sidebar, but here's a brief description of some of them: FAQ : the Frequently Asked Questions (like which RetroArch core should I use? ). Global Leaderboard and Achievement Hunting Rules : explains the rules for the Global Leaderboard, what's the Untracked status, what can be considered cheating, etc. Downloads : our alternative downloads page. Free Games : games that are completely and legally free download and play on your emulators. Events : learn about the various community events that take place at RetroAchievements. My game is not loading achievements : what you have to do when your game isn't loading achievements. System X wen : Something meleu snuck in one day. Why you shouldn't use the load state feature : why you should expect to have issues if you use save/load state while playing. A message for Achievement Hunters and Completionists about revisions : why you shouldn't be frustrated when a revision on an achievement set is made. How to contribute if you are not a developer : if you don't know how to develop achievements, there are many other ways to contribute with the community. You can help to improve these docs by editing/creating the pages at RetroAchievements wiki","title":"RADocsTEMP"},{"location":"about-us/","text":"RA Staff \u00b6 The RetroAchievements project started as a personal project of Scott Breen and in the early days the project had only administrators, achievement creators, and regular users (and it's still like that on the website). At that time administrators were responsible to do things like: keep an eye on the quality of achievements keep an eye if someone is changing other people's achievements (accidentally or intentionally) welcome new achievement creators and show them the information they need to start contributing review the work of new achievement creators get rid of trolls get rid of cheaters avoid legal problems related to piracy sometimes host gaming events besides all those chores, RAdmins also have interest in playing old games, you know... As the community continues to grow, the amount of work, time, and energy required to keep it running also grows. In order to assure the project thrives, without administrators having burnouts and ragequitting the project, various roles with specific tasks were created. These roles are not really visible in the website, but they are on discord and here in this page we list the roles and their responsibilities. Root Administrators Moderators Quality Assurance Team Tech Team Other Staff Members Root \u00b6 Members who have direct access to the webserver. KickMeElmo luchaos MrOwnership Scott Administrators \u00b6 A group of dedicated and trusted users with varied responsibilities, the heaviest being decision-making regarding the direction of the project and community. RAdmin (shared account) Flara Hotscrock Jamiras KickMeElmo luchaos MrOwnership Scott SporyTike televandalist wilhitewarrior Moderators \u00b6 The team responsible to keep the this community a healthy place (at least for those who adhere to the User's Code of Conduct and agree with the RetroAchievements Manifesto ). BahamutVoid Flara Hotscrock KickMeElmo pinguupinguu SnowPin SporyTike Quality Assurance Team \u00b6 The team responsible for the Developer's Code of Conduct compliance. QATeam (shared account) Hotscrock Infernox MrOwnership psyduck SnowPin SporyTike televandalist Tech and Web Team \u00b6 A bunch of nerdy people who usually deal with the emulators, how they interact with the webserver, and the website itself. AlmightyXor gde Jamiras JeffJenkins KickMeElmo Krylan luchaos mosquitobird11 MrOwnership Searo Xymjak Other Staff Members \u00b6 Here's a group of people who are responsible for maintaining various other aspects of RA that wasn't listed above. NOTE: All members listed above are also staff members, but they're not repeated here. Bendyhuman CobaltZeroni DanielARP Draco655 dude1286 LootusMaximus MrGauss Nydaxn Shootzy Short History \u00b6 The RetroAchievements project was created by Scott Breen in 2012 . He hacked some open source emulators to add the RetroAchievements feature and coded all the backend/website mostly alone. By January 2014, there were 4 RA emulators, over 5000 achievements to earn (thanks to the devotion of many passionate achievement developers ) and over 1000 players registered. After a couple of years Scott was called by the real life the website development went into a period of hiatus with just a few sporadic improvements (the achievement developers were continually working on more and more games, though). In late 2015 leiradel started to work to integrate the RetroAchievements feature into RetroArch . And, as RetroArch is able to run on a wide variety of platforms (such as Mac and Linux) and devices (such as Android phones and Raspberry pi), it helped a lot to increase the popularity of the RetroAchievements project. As the site slowly grew, so did the bandwidth costs, so in late 2016, Scott reached out to the community and they suggested doing a Patreon to keep the site going. After implementing it, the community response was fantastic, which allowed the site to continue completely ad-free . Mid 2017 the RetroAchievements Discord server was started and it made communication across the community much easier. Since then, many knowledgeable members (coders, web developers, etc.) joined the scene volunteering to contribute to the project. Up to this point all the achievement creation knowledge was scattered in several forum posts, making it very tough for a newbie to learn how to create achievements. Then in the late 2017 meleu started the RADocs project and thanks to contributions from many experienced achievement creators it is now a reasonably solid resource of information. Helping dozens of Jr. Developers (and even the experienced ones) to create content for our community. In the early 2018 Scott opened the source of the back-end/website, which was a turning point in the history of the development of the whole RetroAchievements project ( see us at github ). Later in the same year a more concise staff began to take shape and is now an awesome team. These talented guys keep the ball rolling and make it very clear that the RA community is alive and stronger than ever. In some areas the project may still look like a beta version, but we are continually working hard to make things better.","title":"About Us"},{"location":"about-us/#ra-staff","text":"The RetroAchievements project started as a personal project of Scott Breen and in the early days the project had only administrators, achievement creators, and regular users (and it's still like that on the website). At that time administrators were responsible to do things like: keep an eye on the quality of achievements keep an eye if someone is changing other people's achievements (accidentally or intentionally) welcome new achievement creators and show them the information they need to start contributing review the work of new achievement creators get rid of trolls get rid of cheaters avoid legal problems related to piracy sometimes host gaming events besides all those chores, RAdmins also have interest in playing old games, you know... As the community continues to grow, the amount of work, time, and energy required to keep it running also grows. In order to assure the project thrives, without administrators having burnouts and ragequitting the project, various roles with specific tasks were created. These roles are not really visible in the website, but they are on discord and here in this page we list the roles and their responsibilities. Root Administrators Moderators Quality Assurance Team Tech Team Other Staff Members","title":"RA Staff"},{"location":"about-us/#root","text":"Members who have direct access to the webserver. KickMeElmo luchaos MrOwnership Scott","title":"Root"},{"location":"about-us/#administrators","text":"A group of dedicated and trusted users with varied responsibilities, the heaviest being decision-making regarding the direction of the project and community. RAdmin (shared account) Flara Hotscrock Jamiras KickMeElmo luchaos MrOwnership Scott SporyTike televandalist wilhitewarrior","title":"Administrators"},{"location":"about-us/#moderators","text":"The team responsible to keep the this community a healthy place (at least for those who adhere to the User's Code of Conduct and agree with the RetroAchievements Manifesto ). BahamutVoid Flara Hotscrock KickMeElmo pinguupinguu SnowPin SporyTike","title":"Moderators"},{"location":"about-us/#quality-assurance-team","text":"The team responsible for the Developer's Code of Conduct compliance. QATeam (shared account) Hotscrock Infernox MrOwnership psyduck SnowPin SporyTike televandalist","title":"Quality Assurance Team"},{"location":"about-us/#tech-and-web-team","text":"A bunch of nerdy people who usually deal with the emulators, how they interact with the webserver, and the website itself. AlmightyXor gde Jamiras JeffJenkins KickMeElmo Krylan luchaos mosquitobird11 MrOwnership Searo Xymjak","title":"Tech and Web Team"},{"location":"about-us/#other-staff-members","text":"Here's a group of people who are responsible for maintaining various other aspects of RA that wasn't listed above. NOTE: All members listed above are also staff members, but they're not repeated here. Bendyhuman CobaltZeroni DanielARP Draco655 dude1286 LootusMaximus MrGauss Nydaxn Shootzy","title":"Other Staff Members"},{"location":"about-us/#short-history","text":"The RetroAchievements project was created by Scott Breen in 2012 . He hacked some open source emulators to add the RetroAchievements feature and coded all the backend/website mostly alone. By January 2014, there were 4 RA emulators, over 5000 achievements to earn (thanks to the devotion of many passionate achievement developers ) and over 1000 players registered. After a couple of years Scott was called by the real life the website development went into a period of hiatus with just a few sporadic improvements (the achievement developers were continually working on more and more games, though). In late 2015 leiradel started to work to integrate the RetroAchievements feature into RetroArch . And, as RetroArch is able to run on a wide variety of platforms (such as Mac and Linux) and devices (such as Android phones and Raspberry pi), it helped a lot to increase the popularity of the RetroAchievements project. As the site slowly grew, so did the bandwidth costs, so in late 2016, Scott reached out to the community and they suggested doing a Patreon to keep the site going. After implementing it, the community response was fantastic, which allowed the site to continue completely ad-free . Mid 2017 the RetroAchievements Discord server was started and it made communication across the community much easier. Since then, many knowledgeable members (coders, web developers, etc.) joined the scene volunteering to contribute to the project. Up to this point all the achievement creation knowledge was scattered in several forum posts, making it very tough for a newbie to learn how to create achievements. Then in the late 2017 meleu started the RADocs project and thanks to contributions from many experienced achievement creators it is now a reasonably solid resource of information. Helping dozens of Jr. Developers (and even the experienced ones) to create content for our community. In the early 2018 Scott opened the source of the back-end/website, which was a turning point in the history of the development of the whole RetroAchievements project ( see us at github ). Later in the same year a more concise staff began to take shape and is now an awesome team. These talented guys keep the ball rolling and make it very clear that the RA community is alive and stronger than ever. In some areas the project may still look like a beta version, but we are continually working hard to make things better.","title":"Short History"},{"location":"downloads/","text":"Emulator packages \u00b6 These don't contain Overlay themes, you can download default and custom ones using link's below. These links are kept current. RAGens - Sega Genesis/Mega Drive RASnes9x - Super Nintendo Entertainment System RAFCEUx - Nintendo Entertainment System RAVBA - Nintendo Gameboy/Gameboy Color/Gameboy Advance RAP64 - Nintendo 64 Project64 Plugin Pack - Up-to-date plugin pack needed to make Project64 work. RAMeka - Master System RAQuasi88 - PC-8800 series RALibretro - ( Work in Progress ) a libretro front-end that support many systems. More info on RALibretro page . RetroArch - NOTE: it's used only for playing, not for cheevos development. Overlay themes \u00b6 Preview gallery Default theme file showing all available settings. Must be named theme.json when placed in overlay subdirectory. Single \u00b6 Default by Scott Crash Bandicoot by Dexterspet Mega Man Classic by Salsa Nintendo Mix (Slumber Party) by Salsa Roll-chan Evolution by Salsa The Legend of Zelda Classic by Salsa Ys Book I & II by Salsa Sonic by matheus2653 Arnold Schwarzenegger by Salsa Reginaldo Rossi by Salsa Spyro by rabbids4eva Gex by rabbids4eva PlayStation 2 by rabbids4eva LittleBIGPlanet by rabbids4eva Kula World / Roll Away by rabbids4eva MediEvil by rabbids4eva wip3out by rabbids4eva Multiple (customizable) \u00b6 The Legend of Zelda franchise by kdecks Tools \u00b6 ROM Hasher - Calculates hashes and looks ROMs up in a ROM database Floating IPS - ROM Patcher, applies and creates IPS and BPS patches Alcohol Portable - Virtual Drive Software (For PCEngine) 7-Zip - For unpacking downloads from this page RapidCRC - Drag and drop multiple files to get md5s and CRCs. Can output text files. Online Tools \u00b6 CRC32 checksum - For checking that you have the correct ROM MD5 checksum - For checking that you have the correct ROM Marc Robledo's online RomPatcher - online ROM patcher for hacks and other ROM patches","title":"Downloads"},{"location":"downloads/#emulator-packages","text":"These don't contain Overlay themes, you can download default and custom ones using link's below. These links are kept current. RAGens - Sega Genesis/Mega Drive RASnes9x - Super Nintendo Entertainment System RAFCEUx - Nintendo Entertainment System RAVBA - Nintendo Gameboy/Gameboy Color/Gameboy Advance RAP64 - Nintendo 64 Project64 Plugin Pack - Up-to-date plugin pack needed to make Project64 work. RAMeka - Master System RAQuasi88 - PC-8800 series RALibretro - ( Work in Progress ) a libretro front-end that support many systems. More info on RALibretro page . RetroArch - NOTE: it's used only for playing, not for cheevos development.","title":"Emulator packages"},{"location":"downloads/#overlay-themes","text":"Preview gallery Default theme file showing all available settings. Must be named theme.json when placed in overlay subdirectory.","title":"Overlay themes"},{"location":"downloads/#single","text":"Default by Scott Crash Bandicoot by Dexterspet Mega Man Classic by Salsa Nintendo Mix (Slumber Party) by Salsa Roll-chan Evolution by Salsa The Legend of Zelda Classic by Salsa Ys Book I & II by Salsa Sonic by matheus2653 Arnold Schwarzenegger by Salsa Reginaldo Rossi by Salsa Spyro by rabbids4eva Gex by rabbids4eva PlayStation 2 by rabbids4eva LittleBIGPlanet by rabbids4eva Kula World / Roll Away by rabbids4eva MediEvil by rabbids4eva wip3out by rabbids4eva","title":"Single"},{"location":"downloads/#multiple-customizable","text":"The Legend of Zelda franchise by kdecks","title":"Multiple (customizable)"},{"location":"downloads/#tools","text":"ROM Hasher - Calculates hashes and looks ROMs up in a ROM database Floating IPS - ROM Patcher, applies and creates IPS and BPS patches Alcohol Portable - Virtual Drive Software (For PCEngine) 7-Zip - For unpacking downloads from this page RapidCRC - Drag and drop multiple files to get md5s and CRCs. Can output text files.","title":"Tools"},{"location":"downloads/#online-tools","text":"CRC32 checksum - For checking that you have the correct ROM MD5 checksum - For checking that you have the correct ROM Marc Robledo's online RomPatcher - online ROM patcher for hacks and other ROM patches","title":"Online Tools"},{"location":"glossary/","text":"Glossary \u00b6 Terms those crazy dev folk use. (Note: This page is a work in progress) Term definitions as related to RA but especially to development Please: 1) Define terms 2) Add new terms 3) Improve upon existing terms This can include technical terms that relate to game memory, specific terms that that relate to our tools, and colloquial terms that are common use for RA, such as set , cheevo , etc. 16-bit \u00b6 32-bit \u00b6 8-bit \u00b6 Achievement ID \u00b6 A unique number associated to an achievement, displayed in some places and part of the achievement url: http://retroachievements.org/achievement/[achievement id] Achievement Editor| \u00b6 Achievement of the Week| \u00b6 achievement page \u00b6 achievement processing \u00b6 achievement sets \u00b6 AddHits \u00b6 address \u00b6 AddSource \u00b6 admin \u00b6 alt group \u00b6 aotw \u00b6 short for \"Achievement of the Week\" API \u00b6 API key \u00b6 author \u00b6 The original developer who published an achievement. badge \u00b6 The image associated with a single achievement. It's square and is 64x64 at full size. binary \u00b6 BE \u00b6 short for \"big endian\" big endian \u00b6 bit \u00b6 ~bonus~ set \u00b6 byte \u00b6 cancel (leaderboard) \u00b6 checksum \u00b6 cheevo \u00b6 claim \u00b6 code note \u00b6 code reviewer \u00b6 commit selected \u00b6 comparison \u00b6 see \"logic comparison\" completed trophy \u00b6 The award give to a user who has finished every achievement in a set in softcore mode. core achievements \u00b6 CRC-32 \u00b6 cutting room floor, the \u00b6 Website resource for sharing easter eggs, hidden or unused stuff in the games, localization differences, etc. demotion \u00b6 dec \u00b6 Short for decimal decimal \u00b6 dev \u00b6 Short for achievment developer Developer \u00b6 developing achievements \u00b6 Discord \u00b6 A freeware communication platform designed for video gaming communities, that specializes in text, image, video and audio communication between users in a chat channel. dll \u00b6 Means, \"Dynamic Link Library\", which is a type of file For RA there is a dll in the root directory of each RA emulator that tells the emulator how to process achievements, among other things. dynamic memory \u00b6 earning achievements \u00b6 endianness \u00b6 The order in which a sequence of bytes are stored in memory entry \u00b6 see \"game entry\" ~event~ set \u00b6 flag (achievement field) \u00b6 flag (memory) \u00b6 forum \u00b6 game icon \u00b6 game entry \u00b6 game ID \u00b6 game page \u00b6 github \u00b6 global leaderboard \u00b6 hack \u00b6 see \"ROM hack\" ~hack~ set \u00b6 hardcore mode \u00b6 A mode of earning achievements. No save states or emulator advantages allowed. For the most part requires the player to earn achievements as if they were on original hardware. hash \u00b6 #hash-links-log \u00b6 hex \u00b6 short for hexadecimal hexadecimal \u00b6 hits \u00b6 homebrew \u00b6 ~homebrew~ set \u00b6 issue \u00b6 jr. dev \u00b6 json \u00b6 leaderboard \u00b6 LE \u00b6 short for little endian little endian \u00b6 local achievements \u00b6 localization \u00b6 logic comparison \u00b6 lower4 \u00b6 md5 \u00b6 mastery trophy \u00b6 The award give to a user who has finished every achievement in a set in hardcore mode. memory \u00b6 memory (achievement editor) \u00b6 memory bookmarker \u00b6 memory inspector \u00b6 mem/val \u00b6 motto \u00b6 See \"user motto\" ~multi~ set \u00b6 PauseIf \u00b6 pointers \u00b6 points \u00b6 processing \u00b6 see \"achievement processing\" ~prototype~ set \u00b6 promote to core \u00b6 rcheevos \u00b6 RA \u00b6 Short for RetroAchievments. Often used as a prefix for various Retroachiemement related tools such as RASnes9x. RADocs \u00b6 RAeums \u00b6 requirement \u00b6 ResetIf \u00b6 flag reservation \u00b6 retro ratio \u00b6 White points Retroarch \u00b6 revision \u00b6 revision voting \u00b6 rich presence script \u00b6 A script created by developers and posted in on the game page of the achievement tools that tells you what a player has been recently doing in a game. The results are displayed on the front page of the site, active players. rich presence monitor \u00b6 An option in the RetroAchievement menu of RAemus that shows you the current rich presence display. RNG \u00b6 Short for \"random number generator\", a program to create randomization in a system. ROM \u00b6 Short for \"read only memory\", an image of the game. ROM hack \u00b6 Modification of original game by fans. romhacking.net \u00b6 The biggest repository of romhacks. Contains guides, utilities, and of course hacks. rps \u00b6 Short for \"rich presence script\" set \u00b6 A group of achievements associated with a game set cap \u00b6 400 points. It's the limit for how many points are allowed in a set of achievements. size (achievement editor) \u00b6 softcore mode \u00b6 stage id \u00b6 start (leaderboard) \u00b6 static memory \u00b6 submit (leaderboard) \u00b6 submitted (score) \u00b6 SubSource \u00b6 ticket \u00b6 ticket manager \u00b6 trigger \u00b6 trophy \u00b6 type (mem/delta/value) \u00b6 unofficial achievements \u00b6 ~unlicenced~ set \u00b6 upper4 \u00b6 user motto \u00b6 user page \u00b6 value \u00b6 value field (leaderboard/rps) \u00b6","title":"Glossary"},{"location":"glossary/#glossary","text":"Terms those crazy dev folk use. (Note: This page is a work in progress) Term definitions as related to RA but especially to development Please: 1) Define terms 2) Add new terms 3) Improve upon existing terms This can include technical terms that relate to game memory, specific terms that that relate to our tools, and colloquial terms that are common use for RA, such as set , cheevo , etc.","title":"Glossary"},{"location":"glossary/#16-bit","text":"","title":"16-bit"},{"location":"glossary/#32-bit","text":"","title":"32-bit"},{"location":"glossary/#8-bit","text":"","title":"8-bit"},{"location":"glossary/#achievement-id","text":"A unique number associated to an achievement, displayed in some places and part of the achievement url: http://retroachievements.org/achievement/[achievement id]","title":"Achievement ID"},{"location":"glossary/#achievement-editor","text":"","title":"Achievement Editor|"},{"location":"glossary/#achievement-of-the-week","text":"","title":"Achievement of the Week|"},{"location":"glossary/#achievement-page","text":"","title":"achievement page"},{"location":"glossary/#achievement-processing","text":"","title":"achievement processing"},{"location":"glossary/#achievement-sets","text":"","title":"achievement sets"},{"location":"glossary/#addhits","text":"","title":"AddHits"},{"location":"glossary/#address","text":"","title":"address"},{"location":"glossary/#addsource","text":"","title":"AddSource"},{"location":"glossary/#admin","text":"","title":"admin"},{"location":"glossary/#alt-group","text":"","title":"alt group"},{"location":"glossary/#aotw","text":"short for \"Achievement of the Week\"","title":"aotw"},{"location":"glossary/#api","text":"","title":"API"},{"location":"glossary/#api-key","text":"","title":"API key"},{"location":"glossary/#author","text":"The original developer who published an achievement.","title":"author"},{"location":"glossary/#badge","text":"The image associated with a single achievement. It's square and is 64x64 at full size.","title":"badge"},{"location":"glossary/#binary","text":"","title":"binary"},{"location":"glossary/#be","text":"short for \"big endian\"","title":"BE"},{"location":"glossary/#big-endian","text":"","title":"big endian"},{"location":"glossary/#bit","text":"","title":"bit"},{"location":"glossary/#bonus-set","text":"","title":"~bonus~ set"},{"location":"glossary/#byte","text":"","title":"byte"},{"location":"glossary/#cancel-leaderboard","text":"","title":"cancel (leaderboard)"},{"location":"glossary/#checksum","text":"","title":"checksum"},{"location":"glossary/#cheevo","text":"","title":"cheevo"},{"location":"glossary/#claim","text":"","title":"claim"},{"location":"glossary/#code-note","text":"","title":"code note"},{"location":"glossary/#code-reviewer","text":"","title":"code reviewer"},{"location":"glossary/#commit-selected","text":"","title":"commit selected"},{"location":"glossary/#comparison","text":"see \"logic comparison\"","title":"comparison"},{"location":"glossary/#completed-trophy","text":"The award give to a user who has finished every achievement in a set in softcore mode.","title":"completed trophy"},{"location":"glossary/#core-achievements","text":"","title":"core achievements"},{"location":"glossary/#crc-32","text":"","title":"CRC-32"},{"location":"glossary/#cutting-room-floor-the","text":"Website resource for sharing easter eggs, hidden or unused stuff in the games, localization differences, etc.","title":"cutting room floor, the"},{"location":"glossary/#demotion","text":"","title":"demotion"},{"location":"glossary/#dec","text":"Short for decimal","title":"dec"},{"location":"glossary/#decimal","text":"","title":"decimal"},{"location":"glossary/#dev","text":"Short for achievment developer","title":"dev"},{"location":"glossary/#developer","text":"","title":"Developer"},{"location":"glossary/#developing-achievements","text":"","title":"developing achievements"},{"location":"glossary/#discord","text":"A freeware communication platform designed for video gaming communities, that specializes in text, image, video and audio communication between users in a chat channel.","title":"Discord"},{"location":"glossary/#dll","text":"Means, \"Dynamic Link Library\", which is a type of file For RA there is a dll in the root directory of each RA emulator that tells the emulator how to process achievements, among other things.","title":"dll"},{"location":"glossary/#dynamic-memory","text":"","title":"dynamic memory"},{"location":"glossary/#earning-achievements","text":"","title":"earning achievements"},{"location":"glossary/#endianness","text":"The order in which a sequence of bytes are stored in memory","title":"endianness"},{"location":"glossary/#entry","text":"see \"game entry\"","title":"entry"},{"location":"glossary/#event-set","text":"","title":"~event~ set"},{"location":"glossary/#flag-achievement-field","text":"","title":"flag (achievement field)"},{"location":"glossary/#flag-memory","text":"","title":"flag (memory)"},{"location":"glossary/#forum","text":"","title":"forum"},{"location":"glossary/#game-icon","text":"","title":"game icon"},{"location":"glossary/#game-entry","text":"","title":"game entry"},{"location":"glossary/#game-id","text":"","title":"game ID"},{"location":"glossary/#game-page","text":"","title":"game page"},{"location":"glossary/#github","text":"","title":"github"},{"location":"glossary/#global-leaderboard","text":"","title":"global leaderboard"},{"location":"glossary/#hack","text":"see \"ROM hack\"","title":"hack"},{"location":"glossary/#hack-set","text":"","title":"~hack~ set"},{"location":"glossary/#hardcore-mode","text":"A mode of earning achievements. No save states or emulator advantages allowed. For the most part requires the player to earn achievements as if they were on original hardware.","title":"hardcore mode"},{"location":"glossary/#hash","text":"","title":"hash"},{"location":"glossary/#hash-links-log","text":"","title":"#hash-links-log"},{"location":"glossary/#hex","text":"short for hexadecimal","title":"hex"},{"location":"glossary/#hexadecimal","text":"","title":"hexadecimal"},{"location":"glossary/#hits","text":"","title":"hits"},{"location":"glossary/#homebrew","text":"","title":"homebrew"},{"location":"glossary/#homebrew-set","text":"","title":"~homebrew~ set"},{"location":"glossary/#issue","text":"","title":"issue"},{"location":"glossary/#jr-dev","text":"","title":"jr. dev"},{"location":"glossary/#json","text":"","title":"json"},{"location":"glossary/#leaderboard","text":"","title":"leaderboard"},{"location":"glossary/#le","text":"short for little endian","title":"LE"},{"location":"glossary/#little-endian","text":"","title":"little endian"},{"location":"glossary/#local-achievements","text":"","title":"local achievements"},{"location":"glossary/#localization","text":"","title":"localization"},{"location":"glossary/#logic-comparison","text":"","title":"logic comparison"},{"location":"glossary/#lower4","text":"","title":"lower4"},{"location":"glossary/#md5","text":"","title":"md5"},{"location":"glossary/#mastery-trophy","text":"The award give to a user who has finished every achievement in a set in hardcore mode.","title":"mastery trophy"},{"location":"glossary/#memory","text":"","title":"memory"},{"location":"glossary/#memory-achievement-editor","text":"","title":"memory (achievement editor)"},{"location":"glossary/#memory-bookmarker","text":"","title":"memory bookmarker"},{"location":"glossary/#memory-inspector","text":"","title":"memory inspector"},{"location":"glossary/#memval","text":"","title":"mem/val"},{"location":"glossary/#motto","text":"See \"user motto\"","title":"motto"},{"location":"glossary/#multi-set","text":"","title":"~multi~ set"},{"location":"glossary/#pauseif","text":"","title":"PauseIf"},{"location":"glossary/#pointers","text":"","title":"pointers"},{"location":"glossary/#points","text":"","title":"points"},{"location":"glossary/#processing","text":"see \"achievement processing\"","title":"processing"},{"location":"glossary/#prototype-set","text":"","title":"~prototype~ set"},{"location":"glossary/#promote-to-core","text":"","title":"promote to core"},{"location":"glossary/#rcheevos","text":"","title":"rcheevos"},{"location":"glossary/#ra","text":"Short for RetroAchievments. Often used as a prefix for various Retroachiemement related tools such as RASnes9x.","title":"RA"},{"location":"glossary/#radocs","text":"","title":"RADocs"},{"location":"glossary/#raeums","text":"","title":"RAeums"},{"location":"glossary/#requirement","text":"","title":"requirement"},{"location":"glossary/#resetif","text":"flag","title":"ResetIf"},{"location":"glossary/#reservation","text":"","title":"reservation"},{"location":"glossary/#retro-ratio","text":"White points","title":"retro ratio"},{"location":"glossary/#retroarch","text":"","title":"Retroarch"},{"location":"glossary/#revision","text":"","title":"revision"},{"location":"glossary/#revision-voting","text":"","title":"revision voting"},{"location":"glossary/#rich-presence-script","text":"A script created by developers and posted in on the game page of the achievement tools that tells you what a player has been recently doing in a game. The results are displayed on the front page of the site, active players.","title":"rich presence script"},{"location":"glossary/#rich-presence-monitor","text":"An option in the RetroAchievement menu of RAemus that shows you the current rich presence display.","title":"rich presence monitor"},{"location":"glossary/#rng","text":"Short for \"random number generator\", a program to create randomization in a system.","title":"RNG"},{"location":"glossary/#rom","text":"Short for \"read only memory\", an image of the game.","title":"ROM"},{"location":"glossary/#rom-hack","text":"Modification of original game by fans.","title":"ROM hack"},{"location":"glossary/#romhackingnet","text":"The biggest repository of romhacks. Contains guides, utilities, and of course hacks.","title":"romhacking.net"},{"location":"glossary/#rps","text":"Short for \"rich presence script\"","title":"rps"},{"location":"glossary/#set","text":"A group of achievements associated with a game","title":"set"},{"location":"glossary/#set-cap","text":"400 points. It's the limit for how many points are allowed in a set of achievements.","title":"set cap"},{"location":"glossary/#size-achievement-editor","text":"","title":"size (achievement editor)"},{"location":"glossary/#softcore-mode","text":"","title":"softcore mode"},{"location":"glossary/#stage-id","text":"","title":"stage id"},{"location":"glossary/#start-leaderboard","text":"","title":"start (leaderboard)"},{"location":"glossary/#static-memory","text":"","title":"static memory"},{"location":"glossary/#submit-leaderboard","text":"","title":"submit (leaderboard)"},{"location":"glossary/#submitted-score","text":"","title":"submitted (score)"},{"location":"glossary/#subsource","text":"","title":"SubSource"},{"location":"glossary/#ticket","text":"","title":"ticket"},{"location":"glossary/#ticket-manager","text":"","title":"ticket manager"},{"location":"glossary/#trigger","text":"","title":"trigger"},{"location":"glossary/#trophy","text":"","title":"trophy"},{"location":"glossary/#type-memdeltavalue","text":"","title":"type (mem/delta/value)"},{"location":"glossary/#unofficial-achievements","text":"","title":"unofficial achievements"},{"location":"glossary/#unlicenced-set","text":"","title":"~unlicenced~ set"},{"location":"glossary/#upper4","text":"","title":"upper4"},{"location":"glossary/#user-motto","text":"","title":"user motto"},{"location":"glossary/#user-page","text":"","title":"user page"},{"location":"glossary/#value","text":"","title":"value"},{"location":"glossary/#value-field-leaderboardrps","text":"","title":"value field (leaderboard/rps)"},{"location":"homebrews/","text":"Apple II \u00b6 RetroAchievements Entry Download Page Version(s) Sudoku Call-A.P.P.L.E. a2sudoku.dsk Atari 2600 \u00b6 RetroAchievements Entry Download Page Version(s) Amoeba Jump AtariAge v1.3 NTSC.bin v1.3 PAL.bin Angry Video Game Nerd K.O. Boxing AtariAge AVGN KO Boxing 2009-09-06 NTSC.bin Flappy AtariAge flappy_RC2.bin Go Fish! AtariAge GoFish_NTSC.bin GoFish_PAL.bin Halo 2600 AtariAge Halo2600.Final.bin INV+ AtariAge INV+.bin Mega Man AtariAge MegaManDemo.bin Oystron AtariAge OYSTR29.bin Pac-Man 4K AtariAge pacman4K_NTSC.bin Princess Rescue AtariAge PrincessRescue_Final_NTSC.bin Sheep It Up! itch.io sheepitup_ntsc.bin sheepitup_pal.bin sheepitup_secam.bin Snake AtariAge snake.bin Tetris26 AtariAge tetris.bin Video Simon AtariAge Video__2000__Mark_De_Smet_.bin Wall Jump Ninja AtariAge wall_jump_ninja_20150115_v1_0_NTSC.bin wall_jump_ninja_20150115_v1_0_PAL60.bin Zippy the Porcupine AtariAge Zippy_V2_FINAL_NTSC.bas.bin Virtual Boy \u00b6 | 3D Crosswords | Planet Virtual Boy | cw_pad.vb | | Blox | Planet Virtual Boy | BLOX (v1.1).vb | | Blox 2 | Planet Virtual Boy | BLOX 2.vb | | Fishbone | Planet Virtual Boy | Fishbone.[Happy.New.Year].vb | | Mario Kart - Virtual Cup | Planet Virtual Boy | Mario Kart Virtual Cup (PVBCC).vb | | Pineapple 64 | Planet Virtual Boy | p64d.VB | | Snatcher (Demo) | Planet Virtual Boy | Snatcher.Demo.1.vb | | VB Racing | Planet Virtual Boy | VB Racing (FlashBoy Version) (PVBCC).vb |","title":"Free Homebrews"},{"location":"homebrews/#apple-ii","text":"RetroAchievements Entry Download Page Version(s) Sudoku Call-A.P.P.L.E. a2sudoku.dsk","title":"Apple II"},{"location":"homebrews/#atari-2600","text":"RetroAchievements Entry Download Page Version(s) Amoeba Jump AtariAge v1.3 NTSC.bin v1.3 PAL.bin Angry Video Game Nerd K.O. Boxing AtariAge AVGN KO Boxing 2009-09-06 NTSC.bin Flappy AtariAge flappy_RC2.bin Go Fish! AtariAge GoFish_NTSC.bin GoFish_PAL.bin Halo 2600 AtariAge Halo2600.Final.bin INV+ AtariAge INV+.bin Mega Man AtariAge MegaManDemo.bin Oystron AtariAge OYSTR29.bin Pac-Man 4K AtariAge pacman4K_NTSC.bin Princess Rescue AtariAge PrincessRescue_Final_NTSC.bin Sheep It Up! itch.io sheepitup_ntsc.bin sheepitup_pal.bin sheepitup_secam.bin Snake AtariAge snake.bin Tetris26 AtariAge tetris.bin Video Simon AtariAge Video__2000__Mark_De_Smet_.bin Wall Jump Ninja AtariAge wall_jump_ninja_20150115_v1_0_NTSC.bin wall_jump_ninja_20150115_v1_0_PAL60.bin Zippy the Porcupine AtariAge Zippy_V2_FINAL_NTSC.bas.bin","title":"Atari 2600"},{"location":"homebrews/#virtual-boy","text":"| 3D Crosswords | Planet Virtual Boy | cw_pad.vb | | Blox | Planet Virtual Boy | BLOX (v1.1).vb | | Blox 2 | Planet Virtual Boy | BLOX 2.vb | | Fishbone | Planet Virtual Boy | Fishbone.[Happy.New.Year].vb | | Mario Kart - Virtual Cup | Planet Virtual Boy | Mario Kart Virtual Cup (PVBCC).vb | | Pineapple 64 | Planet Virtual Boy | p64d.VB | | Snatcher (Demo) | Planet Virtual Boy | Snatcher.Demo.1.vb | | VB Racing | Planet Virtual Boy | VB Racing (FlashBoy Version) (PVBCC).vb |","title":"Virtual Boy"},{"location":"artists/art-home/","text":"How to Art \u00b6 96x95!","title":"Artists Home"},{"location":"artists/art-home/#how-to-art","text":"96x95!","title":"How to Art"},{"location":"artists/badge-and-icon-creation/","text":"Game Icons \u00b6 Icons are user uploaded images that are used throughout the site to represent a game. Due to their prominence on game and user pages they are worth special attention. These icons should be representative of the game and its common themes, and therefore should be instantly recognizable. Sonic the Hedgehog's game Icon Designing New Game Icons - Styling Guide \u00b6 When designing a new game icon consider the following: Much of the community prefers that game icons use art assets that were made for the original game; from inside the game, or for the game documents, or for the game manual, or for promotional material, and so on; art created by the original team. Using more current designs (or fan art) for classic video game characters might be seem appealing. But many find this is disrespectful to the source material . Flexibility for the Styling Guide \u00b6 For unlicensed games or ~hacks~ where there is little original art available non-official art might be reasonable. Making modifications to the art assets available for would usually be reasonable. Using outside or hand-made assets, say for a title or border, would be reasonable so long as the main subject uses official art. Do I Have to Follow This Styling Guide? \u00b6 The style you choose for your designs is still up to you. You can break these rules so long as you do not break any copyright law, or upload anything vulgar, offensive or pornographic. Other Icon Design Tips \u00b6 Browse the games list , to find Icons that speak to you. Mimic and innovate on the style of your favorites. Many of the Badge creation tips apply here as well. Icon File and Size - Best Practices \u00b6 Uploaded Icons should always be square (have the same X and Y dimensions), otherwise the resulting image will be distorted and ugly. Upload using non-interlaced PNG format; avoid using a transparency layer as it will come out in the end with a flat white box. Design images at 96x96 (preferred), 64x64, 48x48 or 32x32 for sharpest clarity. Icons and badges should be made in a way that the subject is clear even when sized at 32x32 as they are often reduced to this size, like on the global feed. Uploading Game Icons (Developer) \u00b6 Achievement Developers are allowed to change game icons freely for entries that do not have achievements. As a Developer if you'd like to post a backup of the previous image there, if there is one, or backup yours in the forum you're free to but not required. As you create a new set of achievements you are free to create or choose the image you'd like to use as the game icon. To change a game icon first go to the game page and click on the Dev tools: Then click the choose file button highlighted. Find the file on your PC, and then press the submit button highlighted: If a game has existing achievements, game icon changes need to go through revision process . Uploading game icons (non-Developer) \u00b6 Yes, you absolutely can, but they are subject to revisions . It will also be good to review the guidelines for designing new game icons . What happens to the image when you upload a game Icon \u00b6 When uploaded, your Icon images are reduced to a maximum 96x96 32-bit colour PNG. If you upload an Icon that is smaller than 96x96 the image uploaded will retain its original size. The same is true for Badges, except Badges maximum size is 64x64. (Profile images maximum is 128x128.) Icon server files \u00b6 Icons are stored on the site in the following manner and place: i.retroachievements.org/Images/000705.png . They are stored in the same server folder as other game images such as the game box and game screenshots. Achievement Badges \u00b6 Badges are the user created images for individual achievements of a game. Sonic the Hedgehog's first Badge - #00199) Badge creation guidelines and tips \u00b6 Badges should refer in some way to what the achievement is about - i.e. a picture of the boss, level or collectible that the achievement requires the player to get to. Check out the designs of some of your favorite games. Some users go to great effort to make visually appealing badges: Here's a forum topic full of great tips. In the cases of low-resolution games' achievements, it can be hard to get a Badge looking good without it looking blocky or blurry , in these cases the blocky look is often preferable, so that the images have a retro feel to them. You can make each Badge have little rounded borders like an actual Badge or some extra spiky corners for emphasis or a king's crown for difficult ones. Its your design. It should visually represent the achievement itself, or hint at the location in the game for secrets. Matching to the game's art style works well. Google Image searches for \"Sprite Sheets\" is another useful tip to include some game art. Badge file and size - best practices \u00b6 Uploaded Badges should be square (have the same X and Y dimensions), otherwise the resulting image will be distorted and ugly. Upload using non-interlaced PNG format; avoid using a transparency layer as it will come out in the end with a flat white box. Design images at 64x64, 48x48 or 32x32 for sharpest clarity. Badges should be made in a way that the subject is clear even when sized at 32x32, as they are often reduced to this size, like on the global feed. Uploading a Badge for new achievements (Developer) \u00b6 If you are creating new achievements you are free to upload badges for them. Badges are uploaded from within the emulator developer tools while in the achievement editor: Or you can select a prefabricated image or find other images you've uploaded in the drop down box: Upload .jpg , .jpg or .gif file types. It's not entirely important how the file is formatted before uploading, but it is strongly recommended that it be square. If the game has existing badges review and follow the procedure for Uploading Badges (Non-Developer) . Making new Badges for existing achievements \u00b6 If you'd like to make improved badges for existing achievements, you can. Your images will go through the revision process , which will put your creations to a community vote. Post all the new images you'd like to replace current ones in the Icon Gauntlet Forum Topic . Also post all the badges that the new images are meant to replace. They will be placed for a community review by as a single vote. After a community vote is complete if you are a dev you can replace the Badges or if you are not, ask for help in the #help-me channel on Discord or in the Icon Gauntlet Forum Topic . It's easiest to just reference the old and new Badges as img links: Example: [img=https://retroachievements.org/Badge/01234.png] -> [img=https://retroachievements.org/badge/56789.png] (Dev) Make sure to capture the old Badge ID from the Achievement Editor before uploading the new Badge The new Badge ID will appear in the Achievement Editor after uploading it. Both values can also be captured from the web site, but you have to copy the image links as the hover link is for the achievement. Here is a perfect example of how to effectively post new and old Badges . What happens to the image when you upload a Badge \u00b6 When uploaded, your file is converted into the following: - 64x64 32-bit colour PNG. Example: 1 Missing Image - Was replaced on the server. 64x64 greyscale and blurred PNG. Example: Badge Server Files \u00b6 They are stored on site in the following manner and place: i.retroachievements.org/Badge/00136.png ; the number coincidences with the badge ID found in the Achievement. Where you'll see Badges and Icons are displayed \u00b6 On leaderboards: 96x96 (Icon only) In RA Emulators 64x64 Game Pages: 96x96 User Pages: 48x48 Currently Playing (front page), New Achievements, Similar Games: 32x32 The actual images are not being resized. The image is scaled by the browser to the display size. Some browsers such as Android's browser will display larger images more clearly. You can also increase your browser zoom to see them more clearly. It's anticipated that in a future website version, Icons and Badges will be displayed at full size in other places.","title":"Badge and Icon Creation"},{"location":"artists/badge-and-icon-creation/#game-icons","text":"Icons are user uploaded images that are used throughout the site to represent a game. Due to their prominence on game and user pages they are worth special attention. These icons should be representative of the game and its common themes, and therefore should be instantly recognizable. Sonic the Hedgehog's game Icon","title":"Game Icons"},{"location":"artists/badge-and-icon-creation/#designing-new-game-icons-styling-guide","text":"When designing a new game icon consider the following: Much of the community prefers that game icons use art assets that were made for the original game; from inside the game, or for the game documents, or for the game manual, or for promotional material, and so on; art created by the original team. Using more current designs (or fan art) for classic video game characters might be seem appealing. But many find this is disrespectful to the source material .","title":"Designing New Game Icons - Styling Guide"},{"location":"artists/badge-and-icon-creation/#flexibility-for-the-styling-guide","text":"For unlicensed games or ~hacks~ where there is little original art available non-official art might be reasonable. Making modifications to the art assets available for would usually be reasonable. Using outside or hand-made assets, say for a title or border, would be reasonable so long as the main subject uses official art.","title":"Flexibility for the Styling Guide"},{"location":"artists/badge-and-icon-creation/#do-i-have-to-follow-this-styling-guide","text":"The style you choose for your designs is still up to you. You can break these rules so long as you do not break any copyright law, or upload anything vulgar, offensive or pornographic.","title":"Do I Have to Follow This Styling Guide?"},{"location":"artists/badge-and-icon-creation/#other-icon-design-tips","text":"Browse the games list , to find Icons that speak to you. Mimic and innovate on the style of your favorites. Many of the Badge creation tips apply here as well.","title":"Other Icon Design Tips"},{"location":"artists/badge-and-icon-creation/#icon-file-and-size-best-practices","text":"Uploaded Icons should always be square (have the same X and Y dimensions), otherwise the resulting image will be distorted and ugly. Upload using non-interlaced PNG format; avoid using a transparency layer as it will come out in the end with a flat white box. Design images at 96x96 (preferred), 64x64, 48x48 or 32x32 for sharpest clarity. Icons and badges should be made in a way that the subject is clear even when sized at 32x32 as they are often reduced to this size, like on the global feed.","title":"Icon File and Size - Best Practices"},{"location":"artists/badge-and-icon-creation/#uploading-game-icons-developer","text":"Achievement Developers are allowed to change game icons freely for entries that do not have achievements. As a Developer if you'd like to post a backup of the previous image there, if there is one, or backup yours in the forum you're free to but not required. As you create a new set of achievements you are free to create or choose the image you'd like to use as the game icon. To change a game icon first go to the game page and click on the Dev tools: Then click the choose file button highlighted. Find the file on your PC, and then press the submit button highlighted: If a game has existing achievements, game icon changes need to go through revision process .","title":"Uploading Game Icons (Developer)"},{"location":"artists/badge-and-icon-creation/#uploading-game-icons-non-developer","text":"Yes, you absolutely can, but they are subject to revisions . It will also be good to review the guidelines for designing new game icons .","title":"Uploading game icons (non-Developer)"},{"location":"artists/badge-and-icon-creation/#what-happens-to-the-image-when-you-upload-a-game-icon","text":"When uploaded, your Icon images are reduced to a maximum 96x96 32-bit colour PNG. If you upload an Icon that is smaller than 96x96 the image uploaded will retain its original size. The same is true for Badges, except Badges maximum size is 64x64. (Profile images maximum is 128x128.)","title":"What happens to the image when you upload a game Icon"},{"location":"artists/badge-and-icon-creation/#icon-server-files","text":"Icons are stored on the site in the following manner and place: i.retroachievements.org/Images/000705.png . They are stored in the same server folder as other game images such as the game box and game screenshots.","title":"Icon server files"},{"location":"artists/badge-and-icon-creation/#achievement-badges","text":"Badges are the user created images for individual achievements of a game. Sonic the Hedgehog's first Badge - #00199)","title":"Achievement Badges"},{"location":"artists/badge-and-icon-creation/#badge-creation-guidelines-and-tips","text":"Badges should refer in some way to what the achievement is about - i.e. a picture of the boss, level or collectible that the achievement requires the player to get to. Check out the designs of some of your favorite games. Some users go to great effort to make visually appealing badges: Here's a forum topic full of great tips. In the cases of low-resolution games' achievements, it can be hard to get a Badge looking good without it looking blocky or blurry , in these cases the blocky look is often preferable, so that the images have a retro feel to them. You can make each Badge have little rounded borders like an actual Badge or some extra spiky corners for emphasis or a king's crown for difficult ones. Its your design. It should visually represent the achievement itself, or hint at the location in the game for secrets. Matching to the game's art style works well. Google Image searches for \"Sprite Sheets\" is another useful tip to include some game art.","title":"Badge creation guidelines and tips"},{"location":"artists/badge-and-icon-creation/#badge-file-and-size-best-practices","text":"Uploaded Badges should be square (have the same X and Y dimensions), otherwise the resulting image will be distorted and ugly. Upload using non-interlaced PNG format; avoid using a transparency layer as it will come out in the end with a flat white box. Design images at 64x64, 48x48 or 32x32 for sharpest clarity. Badges should be made in a way that the subject is clear even when sized at 32x32, as they are often reduced to this size, like on the global feed.","title":"Badge file and size - best practices"},{"location":"artists/badge-and-icon-creation/#uploading-a-badge-for-new-achievements-developer","text":"If you are creating new achievements you are free to upload badges for them. Badges are uploaded from within the emulator developer tools while in the achievement editor: Or you can select a prefabricated image or find other images you've uploaded in the drop down box: Upload .jpg , .jpg or .gif file types. It's not entirely important how the file is formatted before uploading, but it is strongly recommended that it be square. If the game has existing badges review and follow the procedure for Uploading Badges (Non-Developer) .","title":"Uploading a Badge for new achievements (Developer)"},{"location":"artists/badge-and-icon-creation/#making-new-badges-for-existing-achievements","text":"If you'd like to make improved badges for existing achievements, you can. Your images will go through the revision process , which will put your creations to a community vote. Post all the new images you'd like to replace current ones in the Icon Gauntlet Forum Topic . Also post all the badges that the new images are meant to replace. They will be placed for a community review by as a single vote. After a community vote is complete if you are a dev you can replace the Badges or if you are not, ask for help in the #help-me channel on Discord or in the Icon Gauntlet Forum Topic . It's easiest to just reference the old and new Badges as img links: Example: [img=https://retroachievements.org/Badge/01234.png] -> [img=https://retroachievements.org/badge/56789.png] (Dev) Make sure to capture the old Badge ID from the Achievement Editor before uploading the new Badge The new Badge ID will appear in the Achievement Editor after uploading it. Both values can also be captured from the web site, but you have to copy the image links as the hover link is for the achievement. Here is a perfect example of how to effectively post new and old Badges .","title":"Making new Badges for existing achievements"},{"location":"artists/badge-and-icon-creation/#what-happens-to-the-image-when-you-upload-a-badge","text":"When uploaded, your file is converted into the following: - 64x64 32-bit colour PNG. Example: 1 Missing Image - Was replaced on the server. 64x64 greyscale and blurred PNG. Example:","title":"What happens to the image when you upload a Badge"},{"location":"artists/badge-and-icon-creation/#badge-server-files","text":"They are stored on site in the following manner and place: i.retroachievements.org/Badge/00136.png ; the number coincidences with the badge ID found in the Achievement.","title":"Badge Server Files"},{"location":"artists/badge-and-icon-creation/#where-youll-see-badges-and-icons-are-displayed","text":"On leaderboards: 96x96 (Icon only) In RA Emulators 64x64 Game Pages: 96x96 User Pages: 48x48 Currently Playing (front page), New Achievements, Similar Games: 32x32 The actual images are not being resized. The image is scaled by the browser to the display size. Some browsers such as Android's browser will display larger images more clearly. You can also increase your browser zoom to see them more clearly. It's anticipated that in a future website version, Icons and Badges will be displayed at full size in other places.","title":"Where you'll see Badges and Icons are displayed"},{"location":"developers/achievement-creation-tutorials/","text":"Intro Basics Achievement Editor - Flags - Types - Sizes - General Comparisons - Flag Specific Comparisons - Other Toolkit Features Protections Logic Tips and Tricks Lesser-Known Features Workflow Tips Things To Avoid and Why See Also Intro \u00b6 Page is heavily WIP, but the goal is to provide extensive documentation to cover every aspect of set development from start to finish. Will probably end up merging the \"Real Examples\" into this section somehow. Each flag, type, size, comparison, etc. will have its own page. Will also include several tips n' tricks, case studies, etc. Basics \u00b6 Adding Games to the Database Everything you ever wanted to know (but were too scared to ask) about hashes Patch Guide RAM digging Utilizing Game Genie, Game Shark, Codebreaker, Action Replay, etc. codes Code Notes Formatting conventions Achievement Editor \u00b6 Flags \u00b6 Pause If Reset If Reset Next If Add Source Sub Source Add Hits Sub Hits Add Address Indirect Pointers Direct Pointers And Next Multi-Condition Counters and Checkpoints Multi-Condition Resets and Pauses Or Next Measured Measured If Trigger Types \u00b6 Mem Value Delta Mem > Delta Comparisons Prior BCD Float Sizes \u00b6 bit0 - bit7 8-Bit 16-Bit 24-Bit 32-Bit Lower4 and Upper4 16-Bit BE 24-Bit BE 32-Bit BE BitCount Float MBF32 General Comparisons \u00b6 = < <= > >= != Flag Specific Comparisons \u00b6 * / & Other Toolkit Features \u00b6 Hit Counts Using with Reset If Using with Pause If Alt Groups Protections \u00b6 Demo Protection Finding and testing demo addresses Save Protection Delta and Prior Using in-game timers Password Protection Cheat Protection Multiplayer Protection Other Dipswitch BIOS (PlayStation and Saturn) Logic Tips and Tricks \u00b6 Checkpoints hits Pause Locks Using Hit Counts as a timer Using Delta Values and Hit Counts to Detect an Increment Circumvent the Problem of a Counter Incrementing Twice in the Same Frame Various types of chains When to use Reset If or Pause If When to use Delta or Prior Using BitCount for collectables Using Add Source with Mem / Mem comparisons Creating a Timer with Reset If hits based on the speed of the game Lesser-Known Features \u00b6 Double-Clicking bitflags while in 8-bit view Right-Clicking addresses in the editor to jump to them in the Memory Inspector (also works with offsets to jump to the current address) Highlighting conditions and holding CTRL while clicking to change a field in multiple conditions at once Workflow Tips \u00b6 Using Google Sheets and Notepad++ Editing local file Things to Avoid and Why \u00b6 Redundant Reset Ifs Single-Condition achievements Text-Based addresses See Also \u00b6 Point Distribution Badge Creation Rich Presence Leaderboards RATools Making Tutorial Videos","title":"Achievement Creatino Tutorials Home"},{"location":"developers/achievement-creation-tutorials/#intro","text":"Page is heavily WIP, but the goal is to provide extensive documentation to cover every aspect of set development from start to finish. Will probably end up merging the \"Real Examples\" into this section somehow. Each flag, type, size, comparison, etc. will have its own page. Will also include several tips n' tricks, case studies, etc.","title":"Intro"},{"location":"developers/achievement-creation-tutorials/#basics","text":"Adding Games to the Database Everything you ever wanted to know (but were too scared to ask) about hashes Patch Guide RAM digging Utilizing Game Genie, Game Shark, Codebreaker, Action Replay, etc. codes Code Notes Formatting conventions","title":"Basics"},{"location":"developers/achievement-creation-tutorials/#achievement-editor","text":"","title":"Achievement Editor"},{"location":"developers/achievement-creation-tutorials/#flags","text":"Pause If Reset If Reset Next If Add Source Sub Source Add Hits Sub Hits Add Address Indirect Pointers Direct Pointers And Next Multi-Condition Counters and Checkpoints Multi-Condition Resets and Pauses Or Next Measured Measured If Trigger","title":"Flags"},{"location":"developers/achievement-creation-tutorials/#types","text":"Mem Value Delta Mem > Delta Comparisons Prior BCD Float","title":"Types"},{"location":"developers/achievement-creation-tutorials/#sizes","text":"bit0 - bit7 8-Bit 16-Bit 24-Bit 32-Bit Lower4 and Upper4 16-Bit BE 24-Bit BE 32-Bit BE BitCount Float MBF32","title":"Sizes"},{"location":"developers/achievement-creation-tutorials/#general-comparisons","text":"= < <= > >= !=","title":"General Comparisons"},{"location":"developers/achievement-creation-tutorials/#flag-specific-comparisons","text":"* / &","title":"Flag Specific Comparisons"},{"location":"developers/achievement-creation-tutorials/#other-toolkit-features","text":"Hit Counts Using with Reset If Using with Pause If Alt Groups","title":"Other Toolkit Features"},{"location":"developers/achievement-creation-tutorials/#protections","text":"Demo Protection Finding and testing demo addresses Save Protection Delta and Prior Using in-game timers Password Protection Cheat Protection Multiplayer Protection Other Dipswitch BIOS (PlayStation and Saturn)","title":"Protections"},{"location":"developers/achievement-creation-tutorials/#logic-tips-and-tricks","text":"Checkpoints hits Pause Locks Using Hit Counts as a timer Using Delta Values and Hit Counts to Detect an Increment Circumvent the Problem of a Counter Incrementing Twice in the Same Frame Various types of chains When to use Reset If or Pause If When to use Delta or Prior Using BitCount for collectables Using Add Source with Mem / Mem comparisons Creating a Timer with Reset If hits based on the speed of the game","title":"Logic Tips and Tricks"},{"location":"developers/achievement-creation-tutorials/#lesser-known-features","text":"Double-Clicking bitflags while in 8-bit view Right-Clicking addresses in the editor to jump to them in the Memory Inspector (also works with offsets to jump to the current address) Highlighting conditions and holding CTRL while clicking to change a field in multiple conditions at once","title":"Lesser-Known Features"},{"location":"developers/achievement-creation-tutorials/#workflow-tips","text":"Using Google Sheets and Notepad++ Editing local file","title":"Workflow Tips"},{"location":"developers/achievement-creation-tutorials/#things-to-avoid-and-why","text":"Redundant Reset Ifs Single-Condition achievements Text-Based addresses","title":"Things to Avoid and Why"},{"location":"developers/achievement-creation-tutorials/#see-also","text":"Point Distribution Badge Creation Rich Presence Leaderboards RATools Making Tutorial Videos","title":"See Also"},{"location":"developers/achievement-set-revisions/","text":"Revision Types \u00b6 Any changes to a set with existing achievements is considered a revision. They typically happens after someone present a plan in the game's forum topic and in the #revision-voting channel on Discord and the plan is approved by the achievement creators community. There are three types of revisions: Standard Revisions - Changes to an achievement set that affect another developer's work. These include adding achievements, removing achievements, and reworking existing achievements. Rescores - Changes to the point value of an achievement. Icon-Gauntlet - Changes to a game page's icon that is awarded upon mastering a set and changes to the individual achievement badges. Each are assigned their own Discord role: Type Role Getting the role Who can get the role Standard Revisions @revision-voting React with \ud83d\uddf3\ufe0f here achievement creators Rescores @rescore React with \ud83d\udcaf here achievement creators Icon Gauntlet @icon-gauntlet React with \ud83c\udfa8 here any verified discord user Standard Revisions \u00b6 Any developer wanting to revise a set need to: Prepare a plan for each (where you're not the original author) Addition Demotion Achievement rework If the original set developer(s) are still active, inform them of your plans. Not only would this be a \"courtesy call,\" they may have valuable insight or resources that you can utilize to help your revision. Present the plan in the game's forum topic. NOTE : Be as specific as possible, but if you have only a vague plan, provide a general idea of what you want to do and don't go too far from that idea. Post a link to that topic in #revision-voting . If you're not on Discord, another developer can do it for you. Once a revision vote is posted, the developer can address any comments, concerns, and objections the community may have to the plan. The vote is approved/rejected after 24 hours and is pass/fail by simple majority. Note: Anonymous revision proposals - If desired, a developer can choose to propose a revision plan while remaining anonymous throughout the voting process. Simply contact a mod or admin to request that the plan be presented on your behalf. When Making a Revision \u00b6 Try to avoid making copies of existing achievements, or clone and demote existing copies. If there are issues with current achievements make fixes to the existing ones. Resolve any open tickets for achievements that will be kept in the set. Tickets for achievements that are being demoted can simply be closed with the demotion cited. In cases where the revision is simply the demotion of one or more achievements, the developer does not need to handle the tickets for other achievements in the set. If you are adding a similar concept to one found in the set, where possible reuse the old concept and update it rather than make a new one. This prevents players from having to unnecessarily re-earn achievements, restricts needless changes to sets, and preserves good quality developer work and concepts. Since revisions vary in the amount of adjusted content, they are treated the same as an achievement set reservation. If three months have passed since your revision plan was approved, you will need to provide an update that details the current progress. Not doing so will invalidate the revision and the plan will need to be approved again with a new vote. No Need for Approval \u00b6 Making changes to an achievement or to an achievement set where you are the original author and no other developer has revised it; it is still a good idea to post the plan for your changes in the forum. Resolving tickets or bugs on achievements made by developers who are listed as inactive in the list of developers . In these cases you're only allowed to fix the achievement to match the description; do not change the intention of the achievement without going through the revision process above. If you find a problem with an achievement that has an active developer either create a ticket or contact them to assist in resolution. Adding battery save, cheat code, or password protections to achievements where the developer is inactive . (be sure to properly test your changes). If they are active , either create a ticket or contact them to assist applying the improvements. Fixing misspellings, grammatical errors, and other typos in the achievement names or descriptions. In some cases, these are intentional, so be sure to make note of it in the forum. Making updates to game page information and title / screenshot / box art images. Merging Sets \u00b6 In the event that a revision includes merging two sets together (e.g. the Pokemon Red/Blue merge), the developer who does the revision needs to keep track of achievements in the demoted set and their equivalent achievements in the set it is being merged with. If the revision vote passes, this information must be sent to an admin so the achievements from the merged set can be manually awarded to the earners of the demoted set. Respecting Revision Plans \u00b6 If you are one of or the original set developer(s) for a set that is currently undergoing a revision, you must communicate with the developer carrying out the revision before making changes to the set. This is to prevent potential extra work for the revision, overlapping or redundant changes, etc. Rescores \u00b6 Up until June 2019, RetroAchievements sets had a cap of 400 points, with no restrictions on individual achievements. The set cap was removed to focus less on overall set totals and more on the achievements themselves. This initiative was also meant to eliminate the misconception that a set worth 400 points is a \"complete\" set, but is also an ongoing community effort to promote fairness across the board. Information on the scoring process can be found here . Anyone wanting to rescore a set needs to: Prepare a rescore plan that shows the original scores and the proposed scores. A quick and easy way to do this is by utilizing this sheet ; you can enter the Game ID in F2 to bring up a full list of that game's achievements and scores. Post the plan in the game's forum topic. Post a link to the topic in the #revision-voting channel on Discord. Prepare to do some negotiating with other users and try to find a good middle-ground. Voting will be active for 24 hours. If a rescore passes, you can make the necessary changes. No Need for Approval \u00b6 Some achievement sets can be rescored without going through the voting process: If you are the only credited author of an achievement set being rescored and no other developer has rescored it. If a co-author you collaborated with on an achievement set gives you their blessing to do a rescore and no other developer has rescored it. Icon Gauntlet \u00b6 The Icon Gauntlet is used to vote for new game icons or new badges for a set. With the vote it is checked which version is preferred by the community. Any user wanting to change the game icon or badges of a set need to: Create the game icon or new badges. For more info, see Badge and Icon Creation . Upload the work on an image sharing site. Post your images in the correct forum topic . Add the [game=GameID] tag and insert the Game ID which can be found in the URL of the game's page. Add the [img=http://YourImageURL.png] tag and insert the URL from your image into it along side the one which should be replaced and mark which of them is the new one. An example of a typical game icon vote can be seen here . An example of a typical badge vote can be seen here . Post links to the old icon/badges and their contenders in the #revision-voting channel on Discord by using the following template: Discord Templates \ud83d\udcca 1 vs. 1 proposal: `?quickpoll (game/hub page link) | Current (current icon/badges link) | Contender (contender icon/badges link)` \ud83d\udcca 1 vs. 2 or 3 proposal: `?quickpoll (game/hub page link) | Current (current icon link) | Contender 1 (contender 1 icon link) | Contender 2 (contender 2 icon link) | Contender 3 (contender 3 icon link)` Discord only embeds 4 images at maximum in a single post (current icon vs. 3 contenders), so if there's at least 5 images required (current icon vs. 4+ contenders), you'll have to do a montage with all icons: \ud83d\udcca 1 vs. 4+ proposal: `?quickpoll (game/hub page link) | Current | Contender 1 | Contender 2 | Contender 3 | Contender 4 | Contender 5 | Contender 6 (single image montage link with all icons)` Voting will be active for 24 hours. If the voting passes, a developer can replace the Icon/Badges. Notes: In cases where there are several designs, the contender list can be extended. Remember to add the letter emojis, in alphabetical order, as soon as you post the proposal so people can vote by clicking on them. If you are not active on Discord, you may have someone else post the vote on your behalf. No Need for Approval \u00b6 The game does not have an achievement set, nor is it reserved by a developer. The entry has no game icon or badges. The new icon/badge(s) display the same content, but are of better quality. You are the existing set's sole developer and no other developer has changed the icon/badge(s). You are one of the existing set's original developers as part of a collaborative set, all parties agree to the change, and no other developer has changed the icon/badge(s). Voting and Discussion \u00b6 Revision voting is currently dev-only. While voting is exclusive to Discord, please remember that anyone can express their comments, questions, concerns, criticisms, etc. in the forum thread in which the plan was posted. The issues regarding Discord exclusivity will be addressed in a future version of the website. If you vote against changes in an achievement set, please state your reasoning in the discussion channel. This is so potential compromises can be made for a broader acceptance of the changes. Hijacking revision, rescore, or icon-gauntlet votes will not be tolerated. Votes from alt accounts will be discarded if discovered and repeated occurrences will result in the alt account being removed from the server. If the alt's primary account is confirmed, they will have their vote(s) discarded and may face suspension from future votes. If a revision plan that involves the demotion of achievements is proven to contain misleading or false information regarding the in-game requirements, the current proposal will be considered invalid. If evidence of this is found after a vote has already passed, the demoted achievements must be reinstated until a new vote is held.","title":"Achievement Set Revisions"},{"location":"developers/achievement-set-revisions/#revision-types","text":"Any changes to a set with existing achievements is considered a revision. They typically happens after someone present a plan in the game's forum topic and in the #revision-voting channel on Discord and the plan is approved by the achievement creators community. There are three types of revisions: Standard Revisions - Changes to an achievement set that affect another developer's work. These include adding achievements, removing achievements, and reworking existing achievements. Rescores - Changes to the point value of an achievement. Icon-Gauntlet - Changes to a game page's icon that is awarded upon mastering a set and changes to the individual achievement badges. Each are assigned their own Discord role: Type Role Getting the role Who can get the role Standard Revisions @revision-voting React with \ud83d\uddf3\ufe0f here achievement creators Rescores @rescore React with \ud83d\udcaf here achievement creators Icon Gauntlet @icon-gauntlet React with \ud83c\udfa8 here any verified discord user","title":"Revision Types"},{"location":"developers/achievement-set-revisions/#standard-revisions","text":"Any developer wanting to revise a set need to: Prepare a plan for each (where you're not the original author) Addition Demotion Achievement rework If the original set developer(s) are still active, inform them of your plans. Not only would this be a \"courtesy call,\" they may have valuable insight or resources that you can utilize to help your revision. Present the plan in the game's forum topic. NOTE : Be as specific as possible, but if you have only a vague plan, provide a general idea of what you want to do and don't go too far from that idea. Post a link to that topic in #revision-voting . If you're not on Discord, another developer can do it for you. Once a revision vote is posted, the developer can address any comments, concerns, and objections the community may have to the plan. The vote is approved/rejected after 24 hours and is pass/fail by simple majority. Note: Anonymous revision proposals - If desired, a developer can choose to propose a revision plan while remaining anonymous throughout the voting process. Simply contact a mod or admin to request that the plan be presented on your behalf.","title":"Standard Revisions"},{"location":"developers/achievement-set-revisions/#when-making-a-revision","text":"Try to avoid making copies of existing achievements, or clone and demote existing copies. If there are issues with current achievements make fixes to the existing ones. Resolve any open tickets for achievements that will be kept in the set. Tickets for achievements that are being demoted can simply be closed with the demotion cited. In cases where the revision is simply the demotion of one or more achievements, the developer does not need to handle the tickets for other achievements in the set. If you are adding a similar concept to one found in the set, where possible reuse the old concept and update it rather than make a new one. This prevents players from having to unnecessarily re-earn achievements, restricts needless changes to sets, and preserves good quality developer work and concepts. Since revisions vary in the amount of adjusted content, they are treated the same as an achievement set reservation. If three months have passed since your revision plan was approved, you will need to provide an update that details the current progress. Not doing so will invalidate the revision and the plan will need to be approved again with a new vote.","title":"When Making a Revision"},{"location":"developers/achievement-set-revisions/#no-need-for-approval","text":"Making changes to an achievement or to an achievement set where you are the original author and no other developer has revised it; it is still a good idea to post the plan for your changes in the forum. Resolving tickets or bugs on achievements made by developers who are listed as inactive in the list of developers . In these cases you're only allowed to fix the achievement to match the description; do not change the intention of the achievement without going through the revision process above. If you find a problem with an achievement that has an active developer either create a ticket or contact them to assist in resolution. Adding battery save, cheat code, or password protections to achievements where the developer is inactive . (be sure to properly test your changes). If they are active , either create a ticket or contact them to assist applying the improvements. Fixing misspellings, grammatical errors, and other typos in the achievement names or descriptions. In some cases, these are intentional, so be sure to make note of it in the forum. Making updates to game page information and title / screenshot / box art images.","title":"No Need for Approval"},{"location":"developers/achievement-set-revisions/#merging-sets","text":"In the event that a revision includes merging two sets together (e.g. the Pokemon Red/Blue merge), the developer who does the revision needs to keep track of achievements in the demoted set and their equivalent achievements in the set it is being merged with. If the revision vote passes, this information must be sent to an admin so the achievements from the merged set can be manually awarded to the earners of the demoted set.","title":"Merging Sets"},{"location":"developers/achievement-set-revisions/#respecting-revision-plans","text":"If you are one of or the original set developer(s) for a set that is currently undergoing a revision, you must communicate with the developer carrying out the revision before making changes to the set. This is to prevent potential extra work for the revision, overlapping or redundant changes, etc.","title":"Respecting Revision Plans"},{"location":"developers/achievement-set-revisions/#rescores","text":"Up until June 2019, RetroAchievements sets had a cap of 400 points, with no restrictions on individual achievements. The set cap was removed to focus less on overall set totals and more on the achievements themselves. This initiative was also meant to eliminate the misconception that a set worth 400 points is a \"complete\" set, but is also an ongoing community effort to promote fairness across the board. Information on the scoring process can be found here . Anyone wanting to rescore a set needs to: Prepare a rescore plan that shows the original scores and the proposed scores. A quick and easy way to do this is by utilizing this sheet ; you can enter the Game ID in F2 to bring up a full list of that game's achievements and scores. Post the plan in the game's forum topic. Post a link to the topic in the #revision-voting channel on Discord. Prepare to do some negotiating with other users and try to find a good middle-ground. Voting will be active for 24 hours. If a rescore passes, you can make the necessary changes.","title":"Rescores"},{"location":"developers/achievement-set-revisions/#no-need-for-approval_1","text":"Some achievement sets can be rescored without going through the voting process: If you are the only credited author of an achievement set being rescored and no other developer has rescored it. If a co-author you collaborated with on an achievement set gives you their blessing to do a rescore and no other developer has rescored it.","title":"No Need for Approval"},{"location":"developers/achievement-set-revisions/#icon-gauntlet","text":"The Icon Gauntlet is used to vote for new game icons or new badges for a set. With the vote it is checked which version is preferred by the community. Any user wanting to change the game icon or badges of a set need to: Create the game icon or new badges. For more info, see Badge and Icon Creation . Upload the work on an image sharing site. Post your images in the correct forum topic . Add the [game=GameID] tag and insert the Game ID which can be found in the URL of the game's page. Add the [img=http://YourImageURL.png] tag and insert the URL from your image into it along side the one which should be replaced and mark which of them is the new one. An example of a typical game icon vote can be seen here . An example of a typical badge vote can be seen here . Post links to the old icon/badges and their contenders in the #revision-voting channel on Discord by using the following template: Discord Templates \ud83d\udcca 1 vs. 1 proposal: `?quickpoll (game/hub page link) | Current (current icon/badges link) | Contender (contender icon/badges link)` \ud83d\udcca 1 vs. 2 or 3 proposal: `?quickpoll (game/hub page link) | Current (current icon link) | Contender 1 (contender 1 icon link) | Contender 2 (contender 2 icon link) | Contender 3 (contender 3 icon link)` Discord only embeds 4 images at maximum in a single post (current icon vs. 3 contenders), so if there's at least 5 images required (current icon vs. 4+ contenders), you'll have to do a montage with all icons: \ud83d\udcca 1 vs. 4+ proposal: `?quickpoll (game/hub page link) | Current | Contender 1 | Contender 2 | Contender 3 | Contender 4 | Contender 5 | Contender 6 (single image montage link with all icons)` Voting will be active for 24 hours. If the voting passes, a developer can replace the Icon/Badges. Notes: In cases where there are several designs, the contender list can be extended. Remember to add the letter emojis, in alphabetical order, as soon as you post the proposal so people can vote by clicking on them. If you are not active on Discord, you may have someone else post the vote on your behalf.","title":"Icon Gauntlet"},{"location":"developers/achievement-set-revisions/#no-need-for-approval_2","text":"The game does not have an achievement set, nor is it reserved by a developer. The entry has no game icon or badges. The new icon/badge(s) display the same content, but are of better quality. You are the existing set's sole developer and no other developer has changed the icon/badge(s). You are one of the existing set's original developers as part of a collaborative set, all parties agree to the change, and no other developer has changed the icon/badge(s).","title":"No Need for Approval"},{"location":"developers/achievement-set-revisions/#voting-and-discussion","text":"Revision voting is currently dev-only. While voting is exclusive to Discord, please remember that anyone can express their comments, questions, concerns, criticisms, etc. in the forum thread in which the plan was posted. The issues regarding Discord exclusivity will be addressed in a future version of the website. If you vote against changes in an achievement set, please state your reasoning in the discussion channel. This is so potential compromises can be made for a broader acceptance of the changes. Hijacking revision, rescore, or icon-gauntlet votes will not be tolerated. Votes from alt accounts will be discarded if discovered and repeated occurrences will result in the alt account being removed from the server. If the alt's primary account is confirmed, they will have their vote(s) discarded and may face suspension from future votes. If a revision plan that involves the demotion of achievements is proven to contain misleading or false information regarding the in-game requirements, the current proposal will be considered invalid. If evidence of this is found after a vote has already passed, the demoted achievements must be reinstated until a new vote is held.","title":"Voting and Discussion"},{"location":"developers/achievement-templates/","text":"WARNING: EVERY GAME IS DIFFERENT! \u00b6 Here you'll see examples of some typical achievements. You can use them as inspiration to create your own achievement. But keep in mind the following: EVERY GAME IS DIFFERENT! The memory has a different behavior from game to game. So do NOT take these templates as a rule. They are here just for educational purposes. In these examples we use the following convention 0xLEVEL is the memory address with the level ID; 0xLIFE is the address used for the character life; 0xTIME for time, 0xITEM for getting an item, etc... Collecting an Item N times \u00b6 There are some situations where you want to award an achievement for collecting an item (like a coin or a ring) N times. You'll need to find in the memory the address responsible to count how much of the item you have. Once you have the address, this logic usually does the job: ID Special? Memory Cmp Type Mem/Val Hits 1 0xCOUNT > Delta 0xCOUNT (N) But you most likely will want to be more specific, for example \"get item N times without dying\". Then you should use another condition with a ResetIf , like this: ID Special? Memory Cmp Type Mem/Val Hits 1 0xCOUNT > Delta 0xCOUNT (N) 2 ResetIf 0xLIVES < Delta 0xLIVES The ResetIf condition could be \"while in level X\", \"without using a bomb\", etc. Finish Level N \u00b6 In this example we want to award when the player finish the level N and goes to level N+1 . ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE Requirements 1: On level N at least one time 2: Currently at level N+1 3: The level has been increased 4: Reset the hit counter when back to title screen The value 0xTITLE means \"at game's title screen\". You need to ResetIf going to the title screen to avoid the awarding at a wrong time. Here is an example of game flow that could make the achievement trigger at a wrong time if it wasn't for that ResetIf: Start the game and reach level 2 (this make the hit counter goes to 1) Get a game over while on level 2 Go back to the title screen Use a password for level 3 If not using the ResetIf we will have these conditions: Hit level 2: TRUE Current level = level 3: TRUE Level increased (from title/password screen to level 3): TRUE And it would be enough to trigger the cheevo (at a wrong time). That's why we're using the ResetIf in this example. Finish Level N before Time reaches T \u00b6 In this example we consider a game where the time decreases (e.g.: Super Mario Bros). Adapt it accordingly the time on your game has a different behavior. We want to award if the player finishes the level N while time is greater than T . ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE 5 0xTIME >= Value T Requirements Requirements 1-4 are the same as Finish Level N template. 5: timer is greater than T . Keep in mind that besides knowing how the time behaves in game you also need to research how it behaves in memory. Finish Level N without Dying (or getting hit, using a weapon, etc.) \u00b6 ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE 5 0xSCREEN = Value LVL_N_INTRO (1) 6 ResetIf 0xLIFE < Delta 0xLIFE Requirements Requirements 1-4 are the same as Finish Level N template. 5: a checkpoint to represent the point from where the player is suposed to start the chalenge of not losing a life. If the game has a level intro screen, it can be a good checkpoint. 6: reset hit count if life decreased. The requirement 6 can also be used to reset hit count if a weapon was used, damage taken, or anything else that you want the player to NOT do. Finish Level N with Item \u00b6 ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE 5 0xITEM = Value TRUE Requirements Requirements 1-4 are the same as Finish Level N template. 5: the player have the item Collect an Item in a specific Level \u00b6 This template is for battery save or password protection for items. It avoids awarding \"get item X\" by loading to where player already has the item. It checks that an item is collected in the level/room ID it is supposed to be collected, and only allows it be earned at that time. ID Special? Memory Cmp Type Mem/Val Hits 1 0xITEM = Value FALSE (1) 2 0xITEM = Value TRUE 3 ResetIf 0xLEVEL != Value collect level Requirements 1: Do not have the item when entered the collect level, the hit is a checkpoint so 1&2 can both be true at once. 2: Have the item 3: Reset hit counter if in a level different than the one where the item must be obtained Requirements 1 and 3 together mean \"arrived the level/Room ID without the item\". Even if the player loads a savestate and goes to the required level they will not be able to add hits to condition 1, thus they can't get it except in normal gameplay. It does not necessarily have to be level/Room ID. There are other ways to approach this problem, for example a unique Mem/Val that only occurs on collection. Etc. Collected 100% of Something \u00b6 This is limited battery save /password protection for when a player will collect 100% of something like clearing each stage in Super Mario world, or getting a 100% collection rate in Super Metroid. It's necessary so that a player cannot just load a save at 100% and get the achievement for free. (As usual there are other ways to approach this problem too.) ID Special? Type Memory Cmp Type Mem/Val Hits 1 Delta 0xCollectPercent < Value 100% value 2 Mem 0xCollectPercent = Value 100% value 3 PauseIf Mem 0xPlayerState != Value Specific mode/point in game where % is increased Using the correct address value for condition 3 is especially important. You need to find an address that represents a unique time in the game where this percent increases. You'd not want the achievement to trigger when the player is loading their in game save file, which means this achievement must be paused at that time. Example : In Super Mario World this change happens while the player sees the world map after completing a stage. Note: This is similar in behavior and result to Collect an Item in a specific Level . Circumvent the Problem of a Counter Incrementing Twice in the Same Frame \u00b6 In the Collecting an Item N times we are counting how many times the counter goes up. But in some games there are situations where the counter goes up twice in the same frame, and the hit counter is incremented only by one. This behavior, obviously, ruins our logic. We're going to see a way to circumvent this issue. The technique used here relies on two other ones: using SubSource to count specific increments AddHits Flag Here's the trick: ID Special? Type Memory Cmp Type Mem/Val Hits 1 SubSource Delta 0xCOUNT 2 AddHits Mem 0xCOUNT = Value 0x02 3 Mem 0xCOUNT > Delta 0xCOUNT (N) 4 ResetIf Mem 0xLIVES < Delta 0xLIVES It can looks a bit confusing at a first sight, but maybe using a real example it can be more clear. Check the Circumvent the Problem of a Counter Incrementing Twice in the Same Frame . Check for a specific value changing to another specific value ten times \u00b6 In this example we want to detect a value changing from V1 to V2 ten times: ID Special? Type Memory Cmp Type Mem/Val Hits 1 AndNext Delta 0xADDRESS = Value 0xV1 2 Mem 0xADDRESS = Value 0xV2 (10) Requirements 1: If value in 0xADDRESS in the previous frame is 0xV1 2: AND If the current value in 0xADDRESS is 0xV2 , increases the hitcount (up to 10). Conditional Resets \u00b6 Conditional resets can be used for many things. Lets say you want to have a reset if a player enters a certain X and Y zone of a level: CORE The Core is whatever condition(s) you need for your achievement to be true. It can also include normal reset behavior. ALT1 ID Special? Type Memory Cmp Type Mem/Val 1 ResetIf Mem 0xLEVEL = Value LEVELID 2 PauseIf Mem 0xX-COORDS > Value RESET-X-ZONE 3 PauseIf Mem 0xX-COORDS < Value RESET-X-ZONE 4 PauseIf Mem 0xY-COORDS > Value RESET-Y-ZONE 5 PauseIf Mem 0xY-COORDS < Value RESET-Y-ZONE The reset will only happen if all of the Pauseif conditions are not true. The pause is local to the alt but the reset resets the entire achievement. ALT2 ID Special? Type Memory Cmp Type Mem/Val 1 Mem 0x1 = Mem 0x1 Any true condition. (to satisfy alt behavior having an always true alt is needed) Note: You can use multiple conditional resets, each one in their own alt group to have far greater control of reset behavior.","title":"Achievement Templates"},{"location":"developers/achievement-templates/#warning-every-game-is-different","text":"Here you'll see examples of some typical achievements. You can use them as inspiration to create your own achievement. But keep in mind the following: EVERY GAME IS DIFFERENT! The memory has a different behavior from game to game. So do NOT take these templates as a rule. They are here just for educational purposes. In these examples we use the following convention 0xLEVEL is the memory address with the level ID; 0xLIFE is the address used for the character life; 0xTIME for time, 0xITEM for getting an item, etc...","title":"WARNING: EVERY GAME IS DIFFERENT!"},{"location":"developers/achievement-templates/#collecting-an-item-n-times","text":"There are some situations where you want to award an achievement for collecting an item (like a coin or a ring) N times. You'll need to find in the memory the address responsible to count how much of the item you have. Once you have the address, this logic usually does the job: ID Special? Memory Cmp Type Mem/Val Hits 1 0xCOUNT > Delta 0xCOUNT (N) But you most likely will want to be more specific, for example \"get item N times without dying\". Then you should use another condition with a ResetIf , like this: ID Special? Memory Cmp Type Mem/Val Hits 1 0xCOUNT > Delta 0xCOUNT (N) 2 ResetIf 0xLIVES < Delta 0xLIVES The ResetIf condition could be \"while in level X\", \"without using a bomb\", etc.","title":"Collecting an Item N times"},{"location":"developers/achievement-templates/#finish-level-n","text":"In this example we want to award when the player finish the level N and goes to level N+1 . ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE Requirements 1: On level N at least one time 2: Currently at level N+1 3: The level has been increased 4: Reset the hit counter when back to title screen The value 0xTITLE means \"at game's title screen\". You need to ResetIf going to the title screen to avoid the awarding at a wrong time. Here is an example of game flow that could make the achievement trigger at a wrong time if it wasn't for that ResetIf: Start the game and reach level 2 (this make the hit counter goes to 1) Get a game over while on level 2 Go back to the title screen Use a password for level 3 If not using the ResetIf we will have these conditions: Hit level 2: TRUE Current level = level 3: TRUE Level increased (from title/password screen to level 3): TRUE And it would be enough to trigger the cheevo (at a wrong time). That's why we're using the ResetIf in this example.","title":"Finish Level N"},{"location":"developers/achievement-templates/#finish-level-n-before-time-reaches-t","text":"In this example we consider a game where the time decreases (e.g.: Super Mario Bros). Adapt it accordingly the time on your game has a different behavior. We want to award if the player finishes the level N while time is greater than T . ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE 5 0xTIME >= Value T Requirements Requirements 1-4 are the same as Finish Level N template. 5: timer is greater than T . Keep in mind that besides knowing how the time behaves in game you also need to research how it behaves in memory.","title":"Finish Level N before Time reaches T"},{"location":"developers/achievement-templates/#finish-level-n-without-dying-or-getting-hit-using-a-weapon-etc","text":"ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE 5 0xSCREEN = Value LVL_N_INTRO (1) 6 ResetIf 0xLIFE < Delta 0xLIFE Requirements Requirements 1-4 are the same as Finish Level N template. 5: a checkpoint to represent the point from where the player is suposed to start the chalenge of not losing a life. If the game has a level intro screen, it can be a good checkpoint. 6: reset hit count if life decreased. The requirement 6 can also be used to reset hit count if a weapon was used, damage taken, or anything else that you want the player to NOT do.","title":"Finish Level N without Dying (or getting hit, using a weapon, etc.)"},{"location":"developers/achievement-templates/#finish-level-n-with-item","text":"ID Special? Memory Cmp Type Mem/Val Hits 1 0xLEVEL = Value N (1) 2 0xLEVEL = Value N+1 3 0xLEVEL > Delta 0xLEVEL 4 ResetIf 0xLEVEL = Value TITLE 5 0xITEM = Value TRUE Requirements Requirements 1-4 are the same as Finish Level N template. 5: the player have the item","title":"Finish Level N with Item"},{"location":"developers/achievement-templates/#collect-an-item-in-a-specific-level","text":"This template is for battery save or password protection for items. It avoids awarding \"get item X\" by loading to where player already has the item. It checks that an item is collected in the level/room ID it is supposed to be collected, and only allows it be earned at that time. ID Special? Memory Cmp Type Mem/Val Hits 1 0xITEM = Value FALSE (1) 2 0xITEM = Value TRUE 3 ResetIf 0xLEVEL != Value collect level Requirements 1: Do not have the item when entered the collect level, the hit is a checkpoint so 1&2 can both be true at once. 2: Have the item 3: Reset hit counter if in a level different than the one where the item must be obtained Requirements 1 and 3 together mean \"arrived the level/Room ID without the item\". Even if the player loads a savestate and goes to the required level they will not be able to add hits to condition 1, thus they can't get it except in normal gameplay. It does not necessarily have to be level/Room ID. There are other ways to approach this problem, for example a unique Mem/Val that only occurs on collection. Etc.","title":"Collect an Item in a specific Level"},{"location":"developers/achievement-templates/#collected-100-of-something","text":"This is limited battery save /password protection for when a player will collect 100% of something like clearing each stage in Super Mario world, or getting a 100% collection rate in Super Metroid. It's necessary so that a player cannot just load a save at 100% and get the achievement for free. (As usual there are other ways to approach this problem too.) ID Special? Type Memory Cmp Type Mem/Val Hits 1 Delta 0xCollectPercent < Value 100% value 2 Mem 0xCollectPercent = Value 100% value 3 PauseIf Mem 0xPlayerState != Value Specific mode/point in game where % is increased Using the correct address value for condition 3 is especially important. You need to find an address that represents a unique time in the game where this percent increases. You'd not want the achievement to trigger when the player is loading their in game save file, which means this achievement must be paused at that time. Example : In Super Mario World this change happens while the player sees the world map after completing a stage. Note: This is similar in behavior and result to Collect an Item in a specific Level .","title":"Collected 100% of Something"},{"location":"developers/achievement-templates/#circumvent-the-problem-of-a-counter-incrementing-twice-in-the-same-frame","text":"In the Collecting an Item N times we are counting how many times the counter goes up. But in some games there are situations where the counter goes up twice in the same frame, and the hit counter is incremented only by one. This behavior, obviously, ruins our logic. We're going to see a way to circumvent this issue. The technique used here relies on two other ones: using SubSource to count specific increments AddHits Flag Here's the trick: ID Special? Type Memory Cmp Type Mem/Val Hits 1 SubSource Delta 0xCOUNT 2 AddHits Mem 0xCOUNT = Value 0x02 3 Mem 0xCOUNT > Delta 0xCOUNT (N) 4 ResetIf Mem 0xLIVES < Delta 0xLIVES It can looks a bit confusing at a first sight, but maybe using a real example it can be more clear. Check the Circumvent the Problem of a Counter Incrementing Twice in the Same Frame .","title":"Circumvent the Problem of a Counter Incrementing Twice in the Same Frame"},{"location":"developers/achievement-templates/#check-for-a-specific-value-changing-to-another-specific-value-ten-times","text":"In this example we want to detect a value changing from V1 to V2 ten times: ID Special? Type Memory Cmp Type Mem/Val Hits 1 AndNext Delta 0xADDRESS = Value 0xV1 2 Mem 0xADDRESS = Value 0xV2 (10) Requirements 1: If value in 0xADDRESS in the previous frame is 0xV1 2: AND If the current value in 0xADDRESS is 0xV2 , increases the hitcount (up to 10).","title":"Check for a specific value changing to another specific value ten times"},{"location":"developers/achievement-templates/#conditional-resets","text":"Conditional resets can be used for many things. Lets say you want to have a reset if a player enters a certain X and Y zone of a level: CORE The Core is whatever condition(s) you need for your achievement to be true. It can also include normal reset behavior. ALT1 ID Special? Type Memory Cmp Type Mem/Val 1 ResetIf Mem 0xLEVEL = Value LEVELID 2 PauseIf Mem 0xX-COORDS > Value RESET-X-ZONE 3 PauseIf Mem 0xX-COORDS < Value RESET-X-ZONE 4 PauseIf Mem 0xY-COORDS > Value RESET-Y-ZONE 5 PauseIf Mem 0xY-COORDS < Value RESET-Y-ZONE The reset will only happen if all of the Pauseif conditions are not true. The pause is local to the alt but the reset resets the entire achievement. ALT2 ID Special? Type Memory Cmp Type Mem/Val 1 Mem 0x1 = Mem 0x1 Any true condition. (to satisfy alt behavior having an always true alt is needed) Note: You can use multiple conditional resets, each one in their own alt group to have far greater control of reset behavior.","title":"Conditional Resets"},{"location":"developers/achievements-for-rom-hacks/","text":"Can this hack I've found/I've made be a new set on RetroAchievements? RetroAchievements opens the doorway to include fun hack sets for players to enjoy. The issue arising in such a broad category open to world of creativity being \"What is allowed, and what is not allowed to become a set at RetroAchievements?\" Game Trainer Patches \u00b6 Not allowed under any circumstance Hacks that include \"game trainers\" or integrated cheat features are (for obvious reasons) banned. Difficulty and Story Hacks \u00b6 Often allowed If a ROM hack has sufficient enough differences from the licensed game insomuch that the game can be considered an entirely different game than a unique set is usually acceptable . Consult RAdmin (shared mod mail account) for specific approval. Remember that: If a rom hack has sufficient enough differences from the licensed game insomuch that the game can be considered an entirely different game than its original existing set, it is usually acceptable . Consult RAdmin (shared mod mail account) for specific approval. These kinds of ROM hacks will get their own entry in the database. Examples: Metroid - Rogue Dawn Castlevania: The Holy Relics Super Mario 64: Last Impact Super Metroid: Redesign Bug-fix, Re-balancing and Utility Hacks \u00b6 Usually not allowed Hacks that include development-level integrated utilities such as easily accessible level select, debug menus, menus that display information or provide testing features not normally accessible via the normal game, are never allowed to be linked to core sets or get their own set. Hacks that offer gameplay utilities where it doesn't exist in the release version are almost never allowed . Utilities such as easy weapon select, in game maps, new minor upgrades or abilities, improved controls, faster movement. Utilities and bug-fix hacks that improve or patch glitches found in the released version of games are usually not allowed to be linked to the main set; they usually offer and experience that gives players an unfair competitive advantage. They are also usually not allowed to have their own achievement set because they are not unique enough to warrant it. Cosmetic bug fixes which don't alter gameplay might be allowed , see cosmetic/sprite hacks . Examples: Sonic 1 Bugfix for Sonic the Hedgehog Castlevania 2: Improved Controls for Castlevania 2: Simon's Quest Double Dragon III - Difficulty Fix for Double Dragon III - The Sacred Stones Metroid + Saving for Metroid Beta Release, Prototype and \"Testing\" Hacks \u00b6 Usually not allowed If a rom hack is incomplete or in a beta/prototype/testing state with potential game-breaking glitches, crashes, or bugs, intact as a result of hacking, it is usually not allowed . Examples: List of abandoned incomplete hacks Pokemon LeafYellow Beta 1.3 for Pokemon FireRed Fire Emblem TSS Hack INCOMPLETE testing for Fire Emblem: The Sacred Stones Translation Patches \u00b6 Usually allowed English is the Primary language of RetroAchievements. Translation Patches are sometimes applied by developers to non-English titles as the main MD5 for an achievement set where no licenced English version exists. In these cases patching instructions will be provided in the forum thread of that title. Providing an up-to-spec translation patch for an existing title is usually allowed to make a game more accessible to other native language speakers. You must deep-memory inspect your translation contribution against the core set and submit it for approval before handing it over to the developer of the set for posting in their thread along with the game. Sometimes translation patches may critically differ from the developer MD5 in memory differences that you may find online. Before linking these patches check with the original developer or do deep memory tests to ensure total compatibility. You can link translation patches you find online to core sets as long as the game's core achievements all function correctly and do not make the game more or less difficult. Tip: For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions making multi-region support difficult. Examples: Bahamut Lagoon, T+Eng1.3-Copier_DeJap ; Japanese to English translation for Bahumut Lagoon Clock Tower, T+Eng1.01_Aeon Genesis ; Japanese to English translation for Clock Tower Chrono Trigger, T+Rus_Chief-NET ; English to Russian Translation for Chrono Trigger Cosmetic / Sprite Hacks \u00b6 Usually allowed Cosmetic / Sprite hacks that do nothing to change the original game other than its graphics are not allowed to become their own set . They may be a little fun experience but they are still the same game. When linked they will be linked to the primary set. Examples: Castlevania - High Budget Remake for Castlevania (NES) Super Waluigi 64 for Super Mario 64 Chrono Trigger MSU-1 (with FMV's) for Chrono Trigger Consultation \u00b6 Consult the community via the forum and Discord for review and approval. You can get a good view-port of what the community likes to see by asking. Asking for approval before linking is an integral Developer practice, and falls within your code of conduct as a developer here at RetroAchievements.","title":"Achievements for ROM Hacks"},{"location":"developers/achievements-for-rom-hacks/#game-trainer-patches","text":"Not allowed under any circumstance Hacks that include \"game trainers\" or integrated cheat features are (for obvious reasons) banned.","title":"Game Trainer Patches"},{"location":"developers/achievements-for-rom-hacks/#difficulty-and-story-hacks","text":"Often allowed If a ROM hack has sufficient enough differences from the licensed game insomuch that the game can be considered an entirely different game than a unique set is usually acceptable . Consult RAdmin (shared mod mail account) for specific approval. Remember that: If a rom hack has sufficient enough differences from the licensed game insomuch that the game can be considered an entirely different game than its original existing set, it is usually acceptable . Consult RAdmin (shared mod mail account) for specific approval. These kinds of ROM hacks will get their own entry in the database. Examples: Metroid - Rogue Dawn Castlevania: The Holy Relics Super Mario 64: Last Impact Super Metroid: Redesign","title":"Difficulty and Story Hacks"},{"location":"developers/achievements-for-rom-hacks/#bug-fix-re-balancing-and-utility-hacks","text":"Usually not allowed Hacks that include development-level integrated utilities such as easily accessible level select, debug menus, menus that display information or provide testing features not normally accessible via the normal game, are never allowed to be linked to core sets or get their own set. Hacks that offer gameplay utilities where it doesn't exist in the release version are almost never allowed . Utilities such as easy weapon select, in game maps, new minor upgrades or abilities, improved controls, faster movement. Utilities and bug-fix hacks that improve or patch glitches found in the released version of games are usually not allowed to be linked to the main set; they usually offer and experience that gives players an unfair competitive advantage. They are also usually not allowed to have their own achievement set because they are not unique enough to warrant it. Cosmetic bug fixes which don't alter gameplay might be allowed , see cosmetic/sprite hacks . Examples: Sonic 1 Bugfix for Sonic the Hedgehog Castlevania 2: Improved Controls for Castlevania 2: Simon's Quest Double Dragon III - Difficulty Fix for Double Dragon III - The Sacred Stones Metroid + Saving for Metroid","title":"Bug-fix, Re-balancing and Utility Hacks"},{"location":"developers/achievements-for-rom-hacks/#beta-release-prototype-and-testing-hacks","text":"Usually not allowed If a rom hack is incomplete or in a beta/prototype/testing state with potential game-breaking glitches, crashes, or bugs, intact as a result of hacking, it is usually not allowed . Examples: List of abandoned incomplete hacks Pokemon LeafYellow Beta 1.3 for Pokemon FireRed Fire Emblem TSS Hack INCOMPLETE testing for Fire Emblem: The Sacred Stones","title":"Beta Release, Prototype and \"Testing\" Hacks"},{"location":"developers/achievements-for-rom-hacks/#translation-patches","text":"Usually allowed English is the Primary language of RetroAchievements. Translation Patches are sometimes applied by developers to non-English titles as the main MD5 for an achievement set where no licenced English version exists. In these cases patching instructions will be provided in the forum thread of that title. Providing an up-to-spec translation patch for an existing title is usually allowed to make a game more accessible to other native language speakers. You must deep-memory inspect your translation contribution against the core set and submit it for approval before handing it over to the developer of the set for posting in their thread along with the game. Sometimes translation patches may critically differ from the developer MD5 in memory differences that you may find online. Before linking these patches check with the original developer or do deep memory tests to ensure total compatibility. You can link translation patches you find online to core sets as long as the game's core achievements all function correctly and do not make the game more or less difficult. Tip: For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions making multi-region support difficult. Examples: Bahamut Lagoon, T+Eng1.3-Copier_DeJap ; Japanese to English translation for Bahumut Lagoon Clock Tower, T+Eng1.01_Aeon Genesis ; Japanese to English translation for Clock Tower Chrono Trigger, T+Rus_Chief-NET ; English to Russian Translation for Chrono Trigger","title":"Translation Patches"},{"location":"developers/achievements-for-rom-hacks/#cosmetic-sprite-hacks","text":"Usually allowed Cosmetic / Sprite hacks that do nothing to change the original game other than its graphics are not allowed to become their own set . They may be a little fun experience but they are still the same game. When linked they will be linked to the primary set. Examples: Castlevania - High Budget Remake for Castlevania (NES) Super Waluigi 64 for Super Mario 64 Chrono Trigger MSU-1 (with FMV's) for Chrono Trigger","title":"Cosmetic / Sprite Hacks"},{"location":"developers/achievements-for-rom-hacks/#consultation","text":"Consult the community via the forum and Discord for review and approval. You can get a good view-port of what the community likes to see by asking. Asking for approval before linking is an integral Developer practice, and falls within your code of conduct as a developer here at RetroAchievements.","title":"Consultation"},{"location":"developers/code-review-checklist/","text":"This is a list of things that code reviewers usually check when someone submits a set to be reviewed. Code Notes \u00b6 Clearly written! Example For all addresses used in logic Describing appropriate values used where applicable Achievement Logic \u00b6 No achievements with only one condition. Demo mode protection (when applicable). Cheat codes protection (when applicable). No redundant logic (like 0xADDRESS = 1 and ResetIf 0xADDRESS != 1 ). Understanding the difference and the right use of PauseIf and ResetIf. On a \"get 100 coins\" like achievement, use >= 100 rather than = 100 . Achievement Design \u00b6 No unwelcome concepts . Achievements for \"Finish level N\" rather than \"Reach level N+1\". No \"two for one\" achievements (like one for defeating a boss and another one for getting the dropped item).","title":"Code Review Checklist"},{"location":"developers/code-review-checklist/#code-notes","text":"Clearly written! Example For all addresses used in logic Describing appropriate values used where applicable","title":"Code Notes"},{"location":"developers/code-review-checklist/#achievement-logic","text":"No achievements with only one condition. Demo mode protection (when applicable). Cheat codes protection (when applicable). No redundant logic (like 0xADDRESS = 1 and ResetIf 0xADDRESS != 1 ). Understanding the difference and the right use of PauseIf and ResetIf. On a \"get 100 coins\" like achievement, use >= 100 rather than = 100 .","title":"Achievement Logic"},{"location":"developers/code-review-checklist/#achievement-design","text":"No unwelcome concepts . Achievements for \"Finish level N\" rather than \"Reach level N+1\". No \"two for one\" achievements (like one for defeating a boss and another one for getting the dropped item).","title":"Achievement Design"},{"location":"developers/console-specific-tips/","text":"When excavating the memory of these old consoles it helps to know what the original creators of the games were working with in the first place. If you familiarize yourself with the quirks of your favorite console then set making will be easier and more accurate. NES (RANes) \u00b6 Memory Mirroring \u00b6 When using the memory inspector to find variables for NES games, there will be 4 copies of everything you find. If you're wondering \"which one do I use?\" or \"should I check for all of them?\" it's not as complicated as it seems. This is a feature of the NES that gave developers more ways of looking at memory. Because the NES itself only has 2KB of RAM, the first result (the one below 0x800) should be used for consistency, and applying additional conditions on the others will do nothing. This applies to RPS and leaderboards as well. Game Boy (RAVBA) \u00b6 Memory Map \u00b6 Certain ranges of values mean different things in the context of the Game Boy hardware, so having a map of what's where can help you with eliminating useless addresses. Here's the lowdown: \u274c 0x0000 - 0x7FFF: ROM Data (No reason to use. This area contains header information that's only read on certain emulators.) \u274c 0x8000 - 0x9FFF: Graphics Data (Some things here might correlate with what you're looking for if you're trying to find a map ID or animation, but there will always be a better way of going about what you're doing than using any of these) \u2714\ufe0f 0xA000 - 0xBFFF: Cartridge RAM (IE. save data. Sometimes using these addresses will be unavoidable but then your set could be prone to cheating by loading 100% save files. More info on protecting against save files to come) \u2714\ufe0f 0xC000 - 0xDFFF: Work RAM (The good stuff; almost everything you should use will fall inside this range) \u274c 0xE000 - 0xFDFF: ECHO RAM (Do not use, see below) \u274c 0xFE00 - 0xFE9F: More Graphics Data (same as Graphics Data above) \u274c 0xFEA0 - 0xFFFF: Miscellaneous (Do not use) For more info see: http://gameboy.mongenel.com/dmg/asmmemmap.html ECHO RAM \u00b6 Similarly to the NES, certain variables may show up twice when searching in the Memory Inspector. The second result is in what's called the ECHO RAM, which is a mirror of the actual memory. Since some emulators tend to ignore this area or emulate it incorrectly, it's recommended to NOT use it at all and always use the first result. The Game Boy has 8KB of RAM starting at 0xC000. ECHO RAM starts at 0xE000, so if your address begins with an E you'll want to replace the first non-zero character with a C. Remember: C is correct, E is echo! GBC \u00b6 On the GBC, the 4KB of memory from 0xD000-0xDFFF is a bank from a larger 32KB memory block not directly accessible by the processor. Bits 0-2 of 0xFF70 indicate which bank is loaded into the 0xD000-0xDFFF memory block. It's a \"feature\" used to expand the storage available to GBC ROMs while still supporting GB ROMs. Bank switching (changing the value of 0xFF70) causes the memory in the 0xD000-0xDFFF range to update. This appears as flickering in the Memory Viewer and makes tracking down values in that memory range difficult. If you are writing conditions dependent on memory in that block, you should also require that 0xFF70 have a specific value to ensure you are looking at the correct bank. The 4KB of memory from 0xC000-0xCFFF is not bank-switched and can be used safely without additional conditions. It is not advisable to use these addresses for achievements if there is any alternative to doing so. As of January 2018, RALibretro will only display bank 0x00 at 0xFF70. RetroArch has fluctuating memory banks, but the various addresses do not function in the same manner as RAVisualBoyAdvance. At least until RetroArch receives a memory inspector, achievements using addresses from 0xD000-0xDFFF will only work within RAVisualBoyAdvance. GB/GBC BIOS \u00b6 RALibRetro and RetroArch support the GB/GBC BIOS, which shows the \"Nintendo\" and \"GameBoy\" logo before starting the game. This provides approximately four seconds where the main memory ( C000- C000- DFFF) hasn't been initialized and can't be trusted, and may cause achievements to trigger while loading the game for a subset of users who have the BIOS enabled. To enable this feature, put the bios file (named gb_bios.bin or gbc_bios.bin ) into the system directory of either RALibRetro or RetroArch. When you start the game, you will see the \"Nintendo\" and \"GameBoy\" logos before proceeding into the actual game. If this is causing you problems, you may need to add logic to prevent the achievements from triggering while the BIOS is executing, but it would be preferable to use in-game logic if possible (i.e. a specific screen is being displayed). The BIOS code is loaded from 0000- 0000- 00FF, so identify some chunk of that memory that's unique while the BIOS is running and ignore it. For example, the last four bytes of the GBC BIOS block are 3E 11 E0 50 , so you could add this condition to the achievement to prevent it from triggering while the BIOS is running. 32-bit 0x00FC != 0x50E0113E After the BIOS completes, the block is blanked out with FF's, and repurposed for interrupt vectors. For more detail, see A Look at the GameBoy bootstrap . NOTE : The last four bytes of the GB BIOS are 3E 01 E0 50 . So the GB condition would be: 32-bit 0x00FC != 0x50E0013E Nintendo 64 (RAP64) \u00b6 Using GameShark Codes for Addresses \u00b6 GameShark codes can be a valuable resource for finding addresses you can't or don't feel like finding. They have 12 characters per line and are fairly easy to parse. [AA][BBBBBB] [CCCC] [AA] is the codetype. This is a short instruction to the GameShark that defines what to do with the next value. If you understand what the GameShark code does you can use it to help with condition-making. 80, 88: The address is 8-bit. Sets the value [00CC] to the address [BBBBBB]. 81, 89: The address is 16-bit. Sets the value [CCCC] to the address [BBBBBB]. D0: The address is 8-bit. Checks if [00CC] is equal to the value at address [BBBBBB] then executes the next line if it is. D2: The address is 8-bit. Checks if [00CC] is DIFFERENT to the value at address [BBBBBB] then executes the next line if it is. D1: The address is 16-bit. Checks if [CCCC] is equal to the value at address [BBBBBB] then executes the next line if it is. D3: The address is 16-bit. Checks if [CCCC] is DIFFERENT to the value at address [BBBBBB] then executes the next line if it is. Here are some examples: * Paper Mario: Infinite HP: [80][10F292] [0032] Sets the 8-bit value at 0x10F292 to 0x32 (50). So this means Mario's HP is an 8-bit value at 0x10F292. Donkey Kong 64: Play as Rambi: [80][74E77C] [0006] Sets the 8-bit value at 0x74E77C to 6. So this means the character you're playing as is an 8-bit value at 0x74E77C. Chameleon Twist 2: Hold L to Moon Jump: [D0][18BAB5] [0020] <- Looking at this one [81][18B9E0] [4200] Checks if the 8-bit value at 0x18BAB5 is equal to 0x20. This means 0x18BAB5 contains a button press variable and Bit5 (0x20) corresponds to L. Anti-GSC and GameHacking are both good resources for finding GameShark codes. Neo Geo \u00b6 Mandatory UniBIOS protection \u00b6 UniBIOS allows several debugging options, and also access the database of individual cheats for every game. Therefore all achievements for Neo Geo need to be protected from abusing it. The simpliest solution here is disallowing UniBIOS usage completely, directly from the level of achievement code. Fortunately part of UniBIOS data seems to be reflected in two address strings in the RAM: 0x00fe30 and 0x00fe50 . While UniBIOS is active 0x00fe30 in 32-bit size seems to always brings the same value (for every Neo Geo game) which is 80025632 , and it doesn't seem to change after the ROM was loaded. For any other BIOS, the value is always 0, (except for the moment the RAM is overloaded by the diagnostic program, after the ROM was loaded). To protect achievements from using UniBIOS all we need to do is to include a simple protection which will reset when 0x00fe30 in 32-bit size is not equal to 0 . This additionally, eventually protect the achievement from unlocking during RAM diagnostic process. Here is how the protection should look alike (selected in the Achievement Editor): Here is how the same RAM region looks when other BIOS are used (here MSV): PlayStation \u00b6 The RAM from 0000- 0000- FFFF is reserved for the kernel. The boot executable name appears to reliably be placed at $9E18 AND $B8B0. The boot executable name almost always contains the disc serial, which is unique per region, so this can often be used to determine which version of a game the player is using. Spyro the Dragon SCUS_942.28 9E18 5C 53 43 55 53 5F 39 34 32 2E 32 38 3B 31 \\ S C U S _ 9 4 2 . 2 8 ; 1 B8B0 63 64 72 6F 6D 3A 5C 53 43 55 53 5F 39 34 32 2E 32 38 3B 31 c d r o m : \\ S C U S _ 9 4 2 . 2 8 ; 1","title":"Console Specific Tips"},{"location":"developers/console-specific-tips/#nes-ranes","text":"","title":"NES (RANes)"},{"location":"developers/console-specific-tips/#memory-mirroring","text":"When using the memory inspector to find variables for NES games, there will be 4 copies of everything you find. If you're wondering \"which one do I use?\" or \"should I check for all of them?\" it's not as complicated as it seems. This is a feature of the NES that gave developers more ways of looking at memory. Because the NES itself only has 2KB of RAM, the first result (the one below 0x800) should be used for consistency, and applying additional conditions on the others will do nothing. This applies to RPS and leaderboards as well.","title":"Memory Mirroring"},{"location":"developers/console-specific-tips/#game-boy-ravba","text":"","title":"Game Boy (RAVBA)"},{"location":"developers/console-specific-tips/#memory-map","text":"Certain ranges of values mean different things in the context of the Game Boy hardware, so having a map of what's where can help you with eliminating useless addresses. Here's the lowdown: \u274c 0x0000 - 0x7FFF: ROM Data (No reason to use. This area contains header information that's only read on certain emulators.) \u274c 0x8000 - 0x9FFF: Graphics Data (Some things here might correlate with what you're looking for if you're trying to find a map ID or animation, but there will always be a better way of going about what you're doing than using any of these) \u2714\ufe0f 0xA000 - 0xBFFF: Cartridge RAM (IE. save data. Sometimes using these addresses will be unavoidable but then your set could be prone to cheating by loading 100% save files. More info on protecting against save files to come) \u2714\ufe0f 0xC000 - 0xDFFF: Work RAM (The good stuff; almost everything you should use will fall inside this range) \u274c 0xE000 - 0xFDFF: ECHO RAM (Do not use, see below) \u274c 0xFE00 - 0xFE9F: More Graphics Data (same as Graphics Data above) \u274c 0xFEA0 - 0xFFFF: Miscellaneous (Do not use) For more info see: http://gameboy.mongenel.com/dmg/asmmemmap.html","title":"Memory Map"},{"location":"developers/console-specific-tips/#echo-ram","text":"Similarly to the NES, certain variables may show up twice when searching in the Memory Inspector. The second result is in what's called the ECHO RAM, which is a mirror of the actual memory. Since some emulators tend to ignore this area or emulate it incorrectly, it's recommended to NOT use it at all and always use the first result. The Game Boy has 8KB of RAM starting at 0xC000. ECHO RAM starts at 0xE000, so if your address begins with an E you'll want to replace the first non-zero character with a C. Remember: C is correct, E is echo!","title":"ECHO RAM"},{"location":"developers/console-specific-tips/#gbc","text":"On the GBC, the 4KB of memory from 0xD000-0xDFFF is a bank from a larger 32KB memory block not directly accessible by the processor. Bits 0-2 of 0xFF70 indicate which bank is loaded into the 0xD000-0xDFFF memory block. It's a \"feature\" used to expand the storage available to GBC ROMs while still supporting GB ROMs. Bank switching (changing the value of 0xFF70) causes the memory in the 0xD000-0xDFFF range to update. This appears as flickering in the Memory Viewer and makes tracking down values in that memory range difficult. If you are writing conditions dependent on memory in that block, you should also require that 0xFF70 have a specific value to ensure you are looking at the correct bank. The 4KB of memory from 0xC000-0xCFFF is not bank-switched and can be used safely without additional conditions. It is not advisable to use these addresses for achievements if there is any alternative to doing so. As of January 2018, RALibretro will only display bank 0x00 at 0xFF70. RetroArch has fluctuating memory banks, but the various addresses do not function in the same manner as RAVisualBoyAdvance. At least until RetroArch receives a memory inspector, achievements using addresses from 0xD000-0xDFFF will only work within RAVisualBoyAdvance.","title":"GBC"},{"location":"developers/console-specific-tips/#gbgbc-bios","text":"RALibRetro and RetroArch support the GB/GBC BIOS, which shows the \"Nintendo\" and \"GameBoy\" logo before starting the game. This provides approximately four seconds where the main memory ( C000- C000- DFFF) hasn't been initialized and can't be trusted, and may cause achievements to trigger while loading the game for a subset of users who have the BIOS enabled. To enable this feature, put the bios file (named gb_bios.bin or gbc_bios.bin ) into the system directory of either RALibRetro or RetroArch. When you start the game, you will see the \"Nintendo\" and \"GameBoy\" logos before proceeding into the actual game. If this is causing you problems, you may need to add logic to prevent the achievements from triggering while the BIOS is executing, but it would be preferable to use in-game logic if possible (i.e. a specific screen is being displayed). The BIOS code is loaded from 0000- 0000- 00FF, so identify some chunk of that memory that's unique while the BIOS is running and ignore it. For example, the last four bytes of the GBC BIOS block are 3E 11 E0 50 , so you could add this condition to the achievement to prevent it from triggering while the BIOS is running. 32-bit 0x00FC != 0x50E0113E After the BIOS completes, the block is blanked out with FF's, and repurposed for interrupt vectors. For more detail, see A Look at the GameBoy bootstrap . NOTE : The last four bytes of the GB BIOS are 3E 01 E0 50 . So the GB condition would be: 32-bit 0x00FC != 0x50E0013E","title":"GB/GBC BIOS"},{"location":"developers/console-specific-tips/#nintendo-64-rap64","text":"","title":"Nintendo 64 (RAP64)"},{"location":"developers/console-specific-tips/#using-gameshark-codes-for-addresses","text":"GameShark codes can be a valuable resource for finding addresses you can't or don't feel like finding. They have 12 characters per line and are fairly easy to parse. [AA][BBBBBB] [CCCC] [AA] is the codetype. This is a short instruction to the GameShark that defines what to do with the next value. If you understand what the GameShark code does you can use it to help with condition-making. 80, 88: The address is 8-bit. Sets the value [00CC] to the address [BBBBBB]. 81, 89: The address is 16-bit. Sets the value [CCCC] to the address [BBBBBB]. D0: The address is 8-bit. Checks if [00CC] is equal to the value at address [BBBBBB] then executes the next line if it is. D2: The address is 8-bit. Checks if [00CC] is DIFFERENT to the value at address [BBBBBB] then executes the next line if it is. D1: The address is 16-bit. Checks if [CCCC] is equal to the value at address [BBBBBB] then executes the next line if it is. D3: The address is 16-bit. Checks if [CCCC] is DIFFERENT to the value at address [BBBBBB] then executes the next line if it is. Here are some examples: * Paper Mario: Infinite HP: [80][10F292] [0032] Sets the 8-bit value at 0x10F292 to 0x32 (50). So this means Mario's HP is an 8-bit value at 0x10F292. Donkey Kong 64: Play as Rambi: [80][74E77C] [0006] Sets the 8-bit value at 0x74E77C to 6. So this means the character you're playing as is an 8-bit value at 0x74E77C. Chameleon Twist 2: Hold L to Moon Jump: [D0][18BAB5] [0020] <- Looking at this one [81][18B9E0] [4200] Checks if the 8-bit value at 0x18BAB5 is equal to 0x20. This means 0x18BAB5 contains a button press variable and Bit5 (0x20) corresponds to L. Anti-GSC and GameHacking are both good resources for finding GameShark codes.","title":"Using GameShark Codes for Addresses"},{"location":"developers/console-specific-tips/#neo-geo","text":"","title":"Neo Geo"},{"location":"developers/console-specific-tips/#mandatory-unibios-protection","text":"UniBIOS allows several debugging options, and also access the database of individual cheats for every game. Therefore all achievements for Neo Geo need to be protected from abusing it. The simpliest solution here is disallowing UniBIOS usage completely, directly from the level of achievement code. Fortunately part of UniBIOS data seems to be reflected in two address strings in the RAM: 0x00fe30 and 0x00fe50 . While UniBIOS is active 0x00fe30 in 32-bit size seems to always brings the same value (for every Neo Geo game) which is 80025632 , and it doesn't seem to change after the ROM was loaded. For any other BIOS, the value is always 0, (except for the moment the RAM is overloaded by the diagnostic program, after the ROM was loaded). To protect achievements from using UniBIOS all we need to do is to include a simple protection which will reset when 0x00fe30 in 32-bit size is not equal to 0 . This additionally, eventually protect the achievement from unlocking during RAM diagnostic process. Here is how the protection should look alike (selected in the Achievement Editor): Here is how the same RAM region looks when other BIOS are used (here MSV):","title":"Mandatory UniBIOS protection"},{"location":"developers/console-specific-tips/#playstation","text":"The RAM from 0000- 0000- FFFF is reserved for the kernel. The boot executable name appears to reliably be placed at $9E18 AND $B8B0. The boot executable name almost always contains the disc serial, which is unique per region, so this can often be used to determine which version of a game the player is using. Spyro the Dragon SCUS_942.28 9E18 5C 53 43 55 53 5F 39 34 32 2E 32 38 3B 31 \\ S C U S _ 9 4 2 . 2 8 ; 1 B8B0 63 64 72 6F 6D 3A 5C 53 43 55 53 5F 39 34 32 2E 32 38 3B 31 c d r o m : \\ S C U S _ 9 4 2 . 2 8 ; 1","title":"PlayStation"},{"location":"developers/design/","text":"This is a guide on how to think about and design good achievements. Not the technical side but the conceptual. This content is a summary of what was originally written by RA user cirellio on a forum topic . Progression Based Achievements \u00b6 There are 3 types of progression based achievements: simple progression, story-based progression, and progression/collection achievements. Simple Progression \u00b6 Progression-based achievements are usually simplest ones, especially if the game you are doing is nothing but linear stages. Or doesn't have much going on in the way of storylines. In this case, let's look at some GOOD and BAD examples of this: Good: Clear stage 1. Bad: Reach stage 2. It takes slightly more work to code an achievement where the player is required to clear the stage rather than simply reach the next one. But it is also much more satisfying for the player, and it is much more professional-looking. It is also less susceptible to problems with players loading save games or savestates for freebie achievements en masse . Good: Complete the game. Bad: Start the game. While it is true progression-based achievements are often freebies, it is generally agreed upon here that an achievement to start the game is a bit too easy, and not at all memorable for the player. It's just a formality. The ending of the game, however, is often the most memorable part of a game for a player, and completing a game is definitely an achievement in itself. It's a good practice to make such achievement work like \"Beat last stage and beat the game\". Good: Cleared the ice theme stages, or Cleared the first five stages, or Cleared the first ten stages. Bad: Complete Stage 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11-200 (all separate achievements) One of the worst things you can do is create achievement spam. Puzzle games are notorious for these kinds of problems, because the stages are short and often, there are one-hundred of them or more. As a result, the main page feed ends up with a lot of micro-updates, which spams other folks' achievements down and off the front page quickly. The way to come off as more professional in this matter is to space out the achievements a bit more, into groups of stages. For instance, if stages 1-10 are all fire themed, and stages 11-20 are all outer-space themed, you can create achievements around these themes. Be creative. Story Based Progression: \u00b6 The most memorable moments in gaming history are often not related to item collection or sidequests, but to specific scenes relating to the story. Examples: First encounter with Pyramid Head in the Silent Hill series. Finding out the truth about Darth Revan in Knights of the Old Republic. Finding out what will happen in the future in Chrono Trigger. Launching the Cow in Earthworm Jim. Pretty much any character death. The thing you have to be extra-careful with here is spoilers. If you catch a progression-based achievement that has a spoiler in it, by all means contact the dev about it. And devs, please be receptive when it comes to constructive criticism! Also, the number and even percentage of these will vary from game to game--The dependance lies heavily upon how story-driven the game is. Progression/Collection \u00b6 Progression/Collection is a common hybrid. Not only are you collecting an item, but it also launches into a memorable (and mandatory) scene. Examples: Obtaining the Master Sword in Link to the Past, which lifts the curse in the Lost Woods. Finding the sword on the beach in Link's Awakening, which launches into the first scene where the wise owl speaks to you. Picking your starter Pokemon, which happens during a beginning scene, but is a 'rite of passage' for most gamers. Achievements in this hybrid category are often more satisfying because they are pulling double-duty. The player is not only obtaining an item, but watching a memorable scene and nabbing an achievement all at once. Quite the rush of endorphins! Progression Pros and Cons \u00b6 Progression Achievements are guaranteed to the player on a normal play-through. So why even have them? Pros \u00b6 A player deserves points for playing through a game! They do! Remember, a lot of folks are playing through these games for the very first time, and most games are quite hard to beat. Why shouldn't we reward players for a good ol' normal play-through? Periodic progression awards go a long way to encourage players to complete a game. Some players are more casual and don't intend to do much more than beat games on this website. Not everyone feels the need to Master every game in Hardcore mode. Many are perfectly happy grabbing whatever convenient side-achievements they can during a normal play-through, and there's nothing wrong with that. Some scenes are so memorable, they deserve achievements all their own! People who grew up with these games and love them look for these scenes in achievement lists, and it might just warm their heart when they see it was acknowledged. Progression Achievements help other people on the website gauge how far along a player is in a game, a bit like Rich Presence. We can drop a line to the player and say, \"Good luck!\" because we know the next section is pretty tricky. It encourages the community to interact. Order matters! Progression Achievements can tell us a lot about a play-through just by the order they occurred. If you pop that optional boss achievement and saved up a million dollars AFTER you've already done all the sidequests, that's much less impressive than if you manage to pull it off well before the mid-point of the game. In other words, Progression Achievements allow us to show-off a bit! We can show the world that we can beat that final boss before we've reached level 10, or that we can beat Expert mode on our first go before Easy and Normal. It can even reveal if we've used glitches or cheats to skip certain portions of the game . So, as you can see, Progression Achievements have great SYNERGY with other kinds of achievements. These kinds of achievements are the easiest to code and are generally error-free. Cons \u00b6 Too many Progression Achievements can over-saturate a game with 'freebies', and that's a Very Bad Thing. If your entire game has nothing but these kinds of achievements, it's just another boring run through the game for players. Reach stage 2, Reach stage 3, Reach stage 4, Complete the Game. This is a great 'base' for you to start adding achievements from the other categories, but don't leave your list at just Progression Achievements if you can help it. Otherwise you're just rewarding players full points for going through the motions like they've done a million times before. Sidequest/Optional Achievements \u00b6 Vintage games, on their own, offer little-to-no incentive to beat a bonus mode, other than that it's something to do on a rainy day after you've beaten the game. Old games didn't have internet connectivity. And they had no social aspects other than 2-player mode, and maybe telling your friends at school that you beat something. But now, with RetroAchievements.org, we can display our vintage trophies (even though it requires us to redo what we've probably already done many years ago). These trophies are badges of honor. You can look at another member's Challenge Achievements and begin to understand how far they went, how skilled they are. Along with that comes respect from the other members. We socialize, we congratulate each other on a job well done. We feel like we belong, and we are in good company. Sidequests \u00b6 There are often things the player can do that are confined to the rules of the game, but aren't necessary to complete it. In other words, a challenge built into the game by the original game developers. Usually they are fun, or sometimes not so fun, but deserve an award because they require hard work and persistence to achieve. You have to walk a fine tightrope between if dedicated players are likely to do something, vs. if the goal is stupid. People will have differing views over this, so steel yourself. Often times, these types of achievements are even Easter Eggs or things the player never knew existed in their entire lives! Many players adore these types of achievements. I think it's because they learn something new about a game they grew up with, or feel like maybe they were the only ones who knew about a given secret and were excited to see it supported here. It's important for us developers to REALLY know a game inside-and-out before creating an achievement set. Examples of Sidequests: Delivering tails to the Tail Collector in Final Fantasy IV. Finding the owner of the Insignificant Item in Earthbound. Giving the Jerky to the King in Guardia Castle. Anju sidequest in Majora's Mask. Learning about Wrex's past in Mass Effect. Diplomat/VIP escort missions in Flashback: The Quest for Identity. Discovering a secret room. Sidequests are most often found in RPGs, but especially these days, sidequests are finding their way into just about every genre. Keep your eyes peeled - Even the unsuspecting platformer may have a sidequest or three. The Kirby series, for instance, has many hidden rooms and areas. Often times, sidequests end up awarding an item, which falls under a hybrid: Sidequest/Collection. Optional Achievements \u00b6 Examples of Optional Achievements: Optional bosses. Clearing a challenge dungeon (which is a hybrid of Sidequest). Completing Expert Mode (which is a hybrid of Progression). Completing a secret challenge level. Getting an exceptionally rare drop off of a monster. Clearing the game with an optional character. Getting a high score. Completing features only unlocked on a second playthrough. Game modes that are only unlocked on multiple playthroughs. Optional game endings. Codes you can enter during the title screen to make the game harder. This is the game makers hoping you'll like their game enough to keep coming back for more, even after those ending credits scroll by. They are trying to reward the player for completing their game, and create some form of satisfying re-playability. If the game makers went to the trouble making things like this an integral part of the game, we as achievement developers should recognize these challenges and create appropriate achievements for at least a few of them. Chrono Trigger, Chrono Cross, and Star Ocean: The Second Story are famous for this. The Game Boy Advance Castlevania entries also do this. In fact, many games do this. If you aren't sure if your game has any extra modes or challenges, be sure to do some research and check out some FAQs. Or ask the community here, many of us are experts on the games supported here. Sidequest/Optional Pros and Cons \u00b6 Sidequest/Optional Achievements make fantastic supplements to Progression Achievements. Pros \u00b6 This is the bread-and-butter of achievement making. Chances are, a good deal of your achievements will come from this category. All games have optional things to do. Collect all the coins in a stage! Gain 9 lives! Creating achievements for this stuff is easy, and it rewards the player for their dedication. Game makers love appreciative players. They like it when players bother to dig deeper into their games, appreciating their hard work, otherwise we wouldn't see hidden 'fun' things in games like Easter Eggs, bonus scenes, etc. If game makers reward the players for doing it, why shouldn't we? Us devs should also recognize that the player has gone the extra mile. Game players love telling their friends when they find something unusual and off the beaten path in a game. With this site, they can show their friends that they did indeed slay the elusive 'yellow frog' rarely seen in the marsh, or found the warp to the 'mystery dimension'. If we include these curiosities in our achievement lists, we show the players that we are 'in the know', which builds confidence that we can competently guide them through the game. Sidequest/Optional Achievements give players something to strive for after they've beaten the game. These kinds of achievements can often be earned at any time and are not on a predictable schedule. Players feel an extra rush of endorphins when an achievement pops that they weren't expecting, but it was earned. These kinds of achievements are usually easy to code, second only to progression-style achievements. Cons \u00b6 Some players don't care to explore beyond what a typical play-through has to offer, so a high percentage of these types of achievements in a game can leave a player under-rewarded. (Granted, this type of gamer is a bit of a rare bird on a website centered around achievements.) Some people may feel a specific challenge is too hard, even if it's something the original game developers included in-game for players to achieve. When you create a Sidequest/Optional Achievement for, say, running away from 999 battles (or other stat-maxing achievements), you risk that the people on this website may not feel this particular achievement offers a challenge and is just a 'grind-fest'. Achievements like this may very well end up getting demoted unless they serve a second purpose, like in Final Fantasy V where running away from battles actually powers up a weapon called the 'Chicken Knife'. This has SYNERGY with the game, as opposed to creating an achievement based upon raising a stat that has no other use. Collection Based Achievements \u00b6 Most collection-based achievements are optional, unless the items themselves are MacGuffins, which in that case they would fall squarely under Progression/Collection. Examples: Finding the Mickey hats hidden in the background to obtain 1-ups in Genesis Aladdin. Finding exceptionally well-hidden items. Bestiaries. Unlocking an optional character. Maxing out Money/kills/stats. Finding all the different ways to die in games like Prince of Persia or Shadowgate. Opening every treasure chest in a game/finding every powerup. All items/Collecting 99 or 255 (etc.) of an item. Catching them all in Pokemon (any monster collection, really.) If the game keeps track of a stat, the game developer is practically daring you to max it out. Now you might be that kind of player, and you might not. You have to ask yourself, as a dev, whether or not other players are likely to get 9999 vampire bat kills, even if you wouldn't. The advantages to this are that people who wouldn't normally do this always have something to come back and work for when they feel like playing the game again. The disadvantage is that other players who wouldn't normally go that far and never would, but also feel like they have to MASTER every game quickly (a rare breed), will complain. If you get enough complaints, you might want to bring down that 9999 to something more reasonable, like 500. If no one's having fun with an achievement, it's not in the spirit of playing games or making achievements. You have to use your better judgment here and think of what the player would enjoy the most. As a rule of thumb, it's better to have a few Sidequest/Optional Achievements than none at all. But with a little extra effort, these achievements can make your list very memorable. Next, it's time to roll up our sleeves as devs and get REALLY creative when the devs themselves challenge the player beyond the rules of the game. For-Fun achievements \u00b6 This kind of achievements usually worths just a few points, but they are still fun Examples of For Fun: Letting the clock hit 99:59 in Valkyrie Profile. Interactive backgrounds, such as poking the hanging dead body in stage 1 of Castlevania: Bloodlines. Cooking the hamster in the microwave in Maniac Mansion. Watching the apocalypse in Majora's Mask. Finding John Romero in Doom 2. Sometimes, game makers add fun easter eggs. They went the extra mile to entertain the player with 'what if's'. Again, it is our job as devs to recognize and support these as much as we can. Challenges \u00b6 One thing that you have to remember about retro gamers - and the games they play - is that most of us have played these games a million times before. This is the same old song and dance for most of us, and we often need motivation to do it again. Some of us can clear Contra without losing a single life. Well, now is our chance to prove it! I mean, think about it: Before this website, about the only way to prove you can do a flawless run of Contra was to invite a friend over, sit him down, and show him, or figure out recording software and make a YouTube video. But even then, a lot of those videos are doctored to look like flawless playthroughs. This site, however, has Hardcore mode, which help to indicate no one is cheating. You may have Progression Achievements and Sidequest/Optional Achievements, but if you want to create an achievement list that's truly great, you need at least a few Challenge Achievements. Try to think back to all the games you've played here at this website. What are some of the most memorable achievements? I can almost guarantee you that they were Challenge Achievements. There are exceptions to the rule, of course, but the typical player isn't going to fondly recall, 'Cleared Stage 2-6', or 'Reached Level 30'. They are more likely to fondly remember achievements that made their play-throughs a unique experience, such as... get through the entire game without ever picking up a powerup or coin defeat a boss without getting hit finish a stage without losing a life That is what makes this website so special, and what makes achievements something more than just beating a game. Even the most vocal critics who hate the idea of Achievements may say, \"Well, except for THIS one. This one was okay.\" And I guarantee you that ONE example they're talking about is a Challenge Achievement, something that challenged the player beyond the game itself. A good achievement developer will keep their eyes peeled, their wits about them, and their senses sharp when developing a game, looking for good, unusual challenges. They may notice something in the game that's a difficult feat. Speedrun Challenges \u00b6 Timers introduce an added pressure players may have never felt before while playing their favorite games. Few things get the heart pumping more than an imposing ticking clock. Add a timer element, and a game that was previously so easy they could beat it blindfolded could suddenly be transformed into the ultimate gaming challenge of their lives. Examples of Speedrun Challenges: Completing a game in under one hour. Clearing a specific stage in under three minutes. Undercut the timer by a certain number of seconds. Kill 30 vampire bats during the escape sequence. Collect 99 bonus coins before the bonus screen fades away. Go from point A to point B before day changes to night. Leaderboard - Complete the game with the fastest time possible. Leaderboard - Complete a given stage with the fastest time possible. A dev may want to head out to YouTube or Twitch and see how fast people are finishing a game (And please ignore TAS - \"Tool Assisted Speedruns\"). Some pro speed-runners are so fast, the typical player here won't stand a chance at the times being posted, but you should be able to find a happy medium. And if you can't figure out a good time to challenge the players here, that's what Leaderboards are for - Turn it into a competition! In fact, some of your favorite celebrity speed-runners may come to this very site and submit a time or two. You'll know when you're facing a pressure achievement when your palms are sweating and you find yourself nervously glancing at the timer. Like I said before, nothing screams, \"Wake up!\" louder than a timer, especially when developers start weaving this kind of achievement with OTHER kinds of achievements (and even leaderboards) during a timed portion of a game. Timer Challenges have an insane amount of synergy with other types of achievements. Limitation Challenges \u00b6 Examples of Limitation Challenges: Clear a battle or even an entire game with all characters of a specific job class. (One famous example of this is clearing the original Final Fantasy with a group of White Mages.) Beat a final boss with no equipment on. Clear a stage without ever jumping. Solve a puzzle in only two moves. One-hit KOs. Low level games (LLGs). No hit achievements. Never hit certain button(s) during a challenge. Never lose invincibility through an entire Mario 3 stage by finding enough Starmen. Defeat a certain enemy without using a certain move. Reaching Ganon in Legend of Zelda, sword-less. Defeat a certain enemy ONLY using a certain move. Stumble your way through a maze while drunk/confused. Clear the game with a status ailment. Community websites built around certain games are a fantastic resource for these kinds of achievements They'll have a good idea about what's possible and impossible, and have likely written up FAQs discussing alternative and challenging ways to play the entire game. Often times, though, there will be no community. No FAQs. No Message Board. And maybe even no useful videos. In these cases, you'll need to be an idea person to come up with new and interesting ways to challenge the player. Be aware that these kinds of achievements take a lot of practice, time, and experience to create. The takeaway here is to BE CREATIVE! And remember to keep it FUN! Score Challenges \u00b6 Examples of Score Challenges: Completing a game or level with the lowest possible score. Complete a minigame with a perfect score (not just topping the CPU leaderboard). Leaderboard - Complete the game with the highest score/most money/best kill count/etc. possible. Leaderboard - Complete a given stage with the highest score/most money/best kill count/etc. possible. Challenge Pros and Cons \u00b6 Challenge Achievements are your chance to show players how to play their favorite games in different, unique, and even mind-bending ways. While these achievements can breathe life into an otherwise dull achievement set, you generally only want a small handful of these to be in your final list. Pros \u00b6 Hardcore players love sinking their teeth into these kinds of achievements. If some players are too hardcore, you can find a happy medium by implementing Leaderboards, which satisfies both the casual achievement hunters and the hardcore players all at once. This is your chance to be very creative and come up with new challenges for players they never expected. This can be a pleasant surprise and really make your lists memorable. Cons \u00b6 These types of achievements require a fair amount of creativity to dream up, though there are many ways to research unusual ways to play games by watching things like speed runs. May require a deep research. These can be notoriously difficult to code. They require you to make a lot of code notes, make tons of game mechanic observations, and often times they require bug testing before they even work. In fact, you may not even be ready to tackle achievements like this until you've had a few games under your belt with a set of baseline achievements. Fortunately, Challenge Achievements can always be added later. External Resources \u00b6 Best practices achievement creation guide written by Jeff Sullivan, Developer Account Manager of XNA Developer Connection (XDC) regarding XBox 360 Achievements. Make them Work for it an achievement design guide written by by Darran Jamieson on 1 Jan 2013. The Achievement Machine: Understanding Xbox 360 Achievements in Gaming Practices - by Mikael Jakobsson","title":"Achievement Design"},{"location":"developers/design/#progression-based-achievements","text":"There are 3 types of progression based achievements: simple progression, story-based progression, and progression/collection achievements.","title":"Progression Based Achievements"},{"location":"developers/design/#simple-progression","text":"Progression-based achievements are usually simplest ones, especially if the game you are doing is nothing but linear stages. Or doesn't have much going on in the way of storylines. In this case, let's look at some GOOD and BAD examples of this: Good: Clear stage 1. Bad: Reach stage 2. It takes slightly more work to code an achievement where the player is required to clear the stage rather than simply reach the next one. But it is also much more satisfying for the player, and it is much more professional-looking. It is also less susceptible to problems with players loading save games or savestates for freebie achievements en masse . Good: Complete the game. Bad: Start the game. While it is true progression-based achievements are often freebies, it is generally agreed upon here that an achievement to start the game is a bit too easy, and not at all memorable for the player. It's just a formality. The ending of the game, however, is often the most memorable part of a game for a player, and completing a game is definitely an achievement in itself. It's a good practice to make such achievement work like \"Beat last stage and beat the game\". Good: Cleared the ice theme stages, or Cleared the first five stages, or Cleared the first ten stages. Bad: Complete Stage 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11-200 (all separate achievements) One of the worst things you can do is create achievement spam. Puzzle games are notorious for these kinds of problems, because the stages are short and often, there are one-hundred of them or more. As a result, the main page feed ends up with a lot of micro-updates, which spams other folks' achievements down and off the front page quickly. The way to come off as more professional in this matter is to space out the achievements a bit more, into groups of stages. For instance, if stages 1-10 are all fire themed, and stages 11-20 are all outer-space themed, you can create achievements around these themes. Be creative.","title":"Simple Progression"},{"location":"developers/design/#story-based-progression","text":"The most memorable moments in gaming history are often not related to item collection or sidequests, but to specific scenes relating to the story. Examples: First encounter with Pyramid Head in the Silent Hill series. Finding out the truth about Darth Revan in Knights of the Old Republic. Finding out what will happen in the future in Chrono Trigger. Launching the Cow in Earthworm Jim. Pretty much any character death. The thing you have to be extra-careful with here is spoilers. If you catch a progression-based achievement that has a spoiler in it, by all means contact the dev about it. And devs, please be receptive when it comes to constructive criticism! Also, the number and even percentage of these will vary from game to game--The dependance lies heavily upon how story-driven the game is.","title":"Story Based Progression:"},{"location":"developers/design/#progressioncollection","text":"Progression/Collection is a common hybrid. Not only are you collecting an item, but it also launches into a memorable (and mandatory) scene. Examples: Obtaining the Master Sword in Link to the Past, which lifts the curse in the Lost Woods. Finding the sword on the beach in Link's Awakening, which launches into the first scene where the wise owl speaks to you. Picking your starter Pokemon, which happens during a beginning scene, but is a 'rite of passage' for most gamers. Achievements in this hybrid category are often more satisfying because they are pulling double-duty. The player is not only obtaining an item, but watching a memorable scene and nabbing an achievement all at once. Quite the rush of endorphins!","title":"Progression/Collection"},{"location":"developers/design/#progression-pros-and-cons","text":"Progression Achievements are guaranteed to the player on a normal play-through. So why even have them?","title":"Progression Pros and Cons"},{"location":"developers/design/#pros","text":"A player deserves points for playing through a game! They do! Remember, a lot of folks are playing through these games for the very first time, and most games are quite hard to beat. Why shouldn't we reward players for a good ol' normal play-through? Periodic progression awards go a long way to encourage players to complete a game. Some players are more casual and don't intend to do much more than beat games on this website. Not everyone feels the need to Master every game in Hardcore mode. Many are perfectly happy grabbing whatever convenient side-achievements they can during a normal play-through, and there's nothing wrong with that. Some scenes are so memorable, they deserve achievements all their own! People who grew up with these games and love them look for these scenes in achievement lists, and it might just warm their heart when they see it was acknowledged. Progression Achievements help other people on the website gauge how far along a player is in a game, a bit like Rich Presence. We can drop a line to the player and say, \"Good luck!\" because we know the next section is pretty tricky. It encourages the community to interact. Order matters! Progression Achievements can tell us a lot about a play-through just by the order they occurred. If you pop that optional boss achievement and saved up a million dollars AFTER you've already done all the sidequests, that's much less impressive than if you manage to pull it off well before the mid-point of the game. In other words, Progression Achievements allow us to show-off a bit! We can show the world that we can beat that final boss before we've reached level 10, or that we can beat Expert mode on our first go before Easy and Normal. It can even reveal if we've used glitches or cheats to skip certain portions of the game . So, as you can see, Progression Achievements have great SYNERGY with other kinds of achievements. These kinds of achievements are the easiest to code and are generally error-free.","title":"Pros"},{"location":"developers/design/#cons","text":"Too many Progression Achievements can over-saturate a game with 'freebies', and that's a Very Bad Thing. If your entire game has nothing but these kinds of achievements, it's just another boring run through the game for players. Reach stage 2, Reach stage 3, Reach stage 4, Complete the Game. This is a great 'base' for you to start adding achievements from the other categories, but don't leave your list at just Progression Achievements if you can help it. Otherwise you're just rewarding players full points for going through the motions like they've done a million times before.","title":"Cons"},{"location":"developers/design/#sidequestoptional-achievements","text":"Vintage games, on their own, offer little-to-no incentive to beat a bonus mode, other than that it's something to do on a rainy day after you've beaten the game. Old games didn't have internet connectivity. And they had no social aspects other than 2-player mode, and maybe telling your friends at school that you beat something. But now, with RetroAchievements.org, we can display our vintage trophies (even though it requires us to redo what we've probably already done many years ago). These trophies are badges of honor. You can look at another member's Challenge Achievements and begin to understand how far they went, how skilled they are. Along with that comes respect from the other members. We socialize, we congratulate each other on a job well done. We feel like we belong, and we are in good company.","title":"Sidequest/Optional Achievements"},{"location":"developers/design/#sidequests","text":"There are often things the player can do that are confined to the rules of the game, but aren't necessary to complete it. In other words, a challenge built into the game by the original game developers. Usually they are fun, or sometimes not so fun, but deserve an award because they require hard work and persistence to achieve. You have to walk a fine tightrope between if dedicated players are likely to do something, vs. if the goal is stupid. People will have differing views over this, so steel yourself. Often times, these types of achievements are even Easter Eggs or things the player never knew existed in their entire lives! Many players adore these types of achievements. I think it's because they learn something new about a game they grew up with, or feel like maybe they were the only ones who knew about a given secret and were excited to see it supported here. It's important for us developers to REALLY know a game inside-and-out before creating an achievement set. Examples of Sidequests: Delivering tails to the Tail Collector in Final Fantasy IV. Finding the owner of the Insignificant Item in Earthbound. Giving the Jerky to the King in Guardia Castle. Anju sidequest in Majora's Mask. Learning about Wrex's past in Mass Effect. Diplomat/VIP escort missions in Flashback: The Quest for Identity. Discovering a secret room. Sidequests are most often found in RPGs, but especially these days, sidequests are finding their way into just about every genre. Keep your eyes peeled - Even the unsuspecting platformer may have a sidequest or three. The Kirby series, for instance, has many hidden rooms and areas. Often times, sidequests end up awarding an item, which falls under a hybrid: Sidequest/Collection.","title":"Sidequests"},{"location":"developers/design/#optional-achievements","text":"Examples of Optional Achievements: Optional bosses. Clearing a challenge dungeon (which is a hybrid of Sidequest). Completing Expert Mode (which is a hybrid of Progression). Completing a secret challenge level. Getting an exceptionally rare drop off of a monster. Clearing the game with an optional character. Getting a high score. Completing features only unlocked on a second playthrough. Game modes that are only unlocked on multiple playthroughs. Optional game endings. Codes you can enter during the title screen to make the game harder. This is the game makers hoping you'll like their game enough to keep coming back for more, even after those ending credits scroll by. They are trying to reward the player for completing their game, and create some form of satisfying re-playability. If the game makers went to the trouble making things like this an integral part of the game, we as achievement developers should recognize these challenges and create appropriate achievements for at least a few of them. Chrono Trigger, Chrono Cross, and Star Ocean: The Second Story are famous for this. The Game Boy Advance Castlevania entries also do this. In fact, many games do this. If you aren't sure if your game has any extra modes or challenges, be sure to do some research and check out some FAQs. Or ask the community here, many of us are experts on the games supported here.","title":"Optional Achievements"},{"location":"developers/design/#sidequestoptional-pros-and-cons","text":"Sidequest/Optional Achievements make fantastic supplements to Progression Achievements.","title":"Sidequest/Optional Pros and Cons"},{"location":"developers/design/#pros_1","text":"This is the bread-and-butter of achievement making. Chances are, a good deal of your achievements will come from this category. All games have optional things to do. Collect all the coins in a stage! Gain 9 lives! Creating achievements for this stuff is easy, and it rewards the player for their dedication. Game makers love appreciative players. They like it when players bother to dig deeper into their games, appreciating their hard work, otherwise we wouldn't see hidden 'fun' things in games like Easter Eggs, bonus scenes, etc. If game makers reward the players for doing it, why shouldn't we? Us devs should also recognize that the player has gone the extra mile. Game players love telling their friends when they find something unusual and off the beaten path in a game. With this site, they can show their friends that they did indeed slay the elusive 'yellow frog' rarely seen in the marsh, or found the warp to the 'mystery dimension'. If we include these curiosities in our achievement lists, we show the players that we are 'in the know', which builds confidence that we can competently guide them through the game. Sidequest/Optional Achievements give players something to strive for after they've beaten the game. These kinds of achievements can often be earned at any time and are not on a predictable schedule. Players feel an extra rush of endorphins when an achievement pops that they weren't expecting, but it was earned. These kinds of achievements are usually easy to code, second only to progression-style achievements.","title":"Pros"},{"location":"developers/design/#cons_1","text":"Some players don't care to explore beyond what a typical play-through has to offer, so a high percentage of these types of achievements in a game can leave a player under-rewarded. (Granted, this type of gamer is a bit of a rare bird on a website centered around achievements.) Some people may feel a specific challenge is too hard, even if it's something the original game developers included in-game for players to achieve. When you create a Sidequest/Optional Achievement for, say, running away from 999 battles (or other stat-maxing achievements), you risk that the people on this website may not feel this particular achievement offers a challenge and is just a 'grind-fest'. Achievements like this may very well end up getting demoted unless they serve a second purpose, like in Final Fantasy V where running away from battles actually powers up a weapon called the 'Chicken Knife'. This has SYNERGY with the game, as opposed to creating an achievement based upon raising a stat that has no other use.","title":"Cons"},{"location":"developers/design/#collection-based-achievements","text":"Most collection-based achievements are optional, unless the items themselves are MacGuffins, which in that case they would fall squarely under Progression/Collection. Examples: Finding the Mickey hats hidden in the background to obtain 1-ups in Genesis Aladdin. Finding exceptionally well-hidden items. Bestiaries. Unlocking an optional character. Maxing out Money/kills/stats. Finding all the different ways to die in games like Prince of Persia or Shadowgate. Opening every treasure chest in a game/finding every powerup. All items/Collecting 99 or 255 (etc.) of an item. Catching them all in Pokemon (any monster collection, really.) If the game keeps track of a stat, the game developer is practically daring you to max it out. Now you might be that kind of player, and you might not. You have to ask yourself, as a dev, whether or not other players are likely to get 9999 vampire bat kills, even if you wouldn't. The advantages to this are that people who wouldn't normally do this always have something to come back and work for when they feel like playing the game again. The disadvantage is that other players who wouldn't normally go that far and never would, but also feel like they have to MASTER every game quickly (a rare breed), will complain. If you get enough complaints, you might want to bring down that 9999 to something more reasonable, like 500. If no one's having fun with an achievement, it's not in the spirit of playing games or making achievements. You have to use your better judgment here and think of what the player would enjoy the most. As a rule of thumb, it's better to have a few Sidequest/Optional Achievements than none at all. But with a little extra effort, these achievements can make your list very memorable. Next, it's time to roll up our sleeves as devs and get REALLY creative when the devs themselves challenge the player beyond the rules of the game.","title":"Collection Based Achievements"},{"location":"developers/design/#for-fun-achievements","text":"This kind of achievements usually worths just a few points, but they are still fun Examples of For Fun: Letting the clock hit 99:59 in Valkyrie Profile. Interactive backgrounds, such as poking the hanging dead body in stage 1 of Castlevania: Bloodlines. Cooking the hamster in the microwave in Maniac Mansion. Watching the apocalypse in Majora's Mask. Finding John Romero in Doom 2. Sometimes, game makers add fun easter eggs. They went the extra mile to entertain the player with 'what if's'. Again, it is our job as devs to recognize and support these as much as we can.","title":"For-Fun achievements"},{"location":"developers/design/#challenges","text":"One thing that you have to remember about retro gamers - and the games they play - is that most of us have played these games a million times before. This is the same old song and dance for most of us, and we often need motivation to do it again. Some of us can clear Contra without losing a single life. Well, now is our chance to prove it! I mean, think about it: Before this website, about the only way to prove you can do a flawless run of Contra was to invite a friend over, sit him down, and show him, or figure out recording software and make a YouTube video. But even then, a lot of those videos are doctored to look like flawless playthroughs. This site, however, has Hardcore mode, which help to indicate no one is cheating. You may have Progression Achievements and Sidequest/Optional Achievements, but if you want to create an achievement list that's truly great, you need at least a few Challenge Achievements. Try to think back to all the games you've played here at this website. What are some of the most memorable achievements? I can almost guarantee you that they were Challenge Achievements. There are exceptions to the rule, of course, but the typical player isn't going to fondly recall, 'Cleared Stage 2-6', or 'Reached Level 30'. They are more likely to fondly remember achievements that made their play-throughs a unique experience, such as... get through the entire game without ever picking up a powerup or coin defeat a boss without getting hit finish a stage without losing a life That is what makes this website so special, and what makes achievements something more than just beating a game. Even the most vocal critics who hate the idea of Achievements may say, \"Well, except for THIS one. This one was okay.\" And I guarantee you that ONE example they're talking about is a Challenge Achievement, something that challenged the player beyond the game itself. A good achievement developer will keep their eyes peeled, their wits about them, and their senses sharp when developing a game, looking for good, unusual challenges. They may notice something in the game that's a difficult feat.","title":"Challenges"},{"location":"developers/design/#speedrun-challenges","text":"Timers introduce an added pressure players may have never felt before while playing their favorite games. Few things get the heart pumping more than an imposing ticking clock. Add a timer element, and a game that was previously so easy they could beat it blindfolded could suddenly be transformed into the ultimate gaming challenge of their lives. Examples of Speedrun Challenges: Completing a game in under one hour. Clearing a specific stage in under three minutes. Undercut the timer by a certain number of seconds. Kill 30 vampire bats during the escape sequence. Collect 99 bonus coins before the bonus screen fades away. Go from point A to point B before day changes to night. Leaderboard - Complete the game with the fastest time possible. Leaderboard - Complete a given stage with the fastest time possible. A dev may want to head out to YouTube or Twitch and see how fast people are finishing a game (And please ignore TAS - \"Tool Assisted Speedruns\"). Some pro speed-runners are so fast, the typical player here won't stand a chance at the times being posted, but you should be able to find a happy medium. And if you can't figure out a good time to challenge the players here, that's what Leaderboards are for - Turn it into a competition! In fact, some of your favorite celebrity speed-runners may come to this very site and submit a time or two. You'll know when you're facing a pressure achievement when your palms are sweating and you find yourself nervously glancing at the timer. Like I said before, nothing screams, \"Wake up!\" louder than a timer, especially when developers start weaving this kind of achievement with OTHER kinds of achievements (and even leaderboards) during a timed portion of a game. Timer Challenges have an insane amount of synergy with other types of achievements.","title":"Speedrun Challenges"},{"location":"developers/design/#limitation-challenges","text":"Examples of Limitation Challenges: Clear a battle or even an entire game with all characters of a specific job class. (One famous example of this is clearing the original Final Fantasy with a group of White Mages.) Beat a final boss with no equipment on. Clear a stage without ever jumping. Solve a puzzle in only two moves. One-hit KOs. Low level games (LLGs). No hit achievements. Never hit certain button(s) during a challenge. Never lose invincibility through an entire Mario 3 stage by finding enough Starmen. Defeat a certain enemy without using a certain move. Reaching Ganon in Legend of Zelda, sword-less. Defeat a certain enemy ONLY using a certain move. Stumble your way through a maze while drunk/confused. Clear the game with a status ailment. Community websites built around certain games are a fantastic resource for these kinds of achievements They'll have a good idea about what's possible and impossible, and have likely written up FAQs discussing alternative and challenging ways to play the entire game. Often times, though, there will be no community. No FAQs. No Message Board. And maybe even no useful videos. In these cases, you'll need to be an idea person to come up with new and interesting ways to challenge the player. Be aware that these kinds of achievements take a lot of practice, time, and experience to create. The takeaway here is to BE CREATIVE! And remember to keep it FUN!","title":"Limitation Challenges"},{"location":"developers/design/#score-challenges","text":"Examples of Score Challenges: Completing a game or level with the lowest possible score. Complete a minigame with a perfect score (not just topping the CPU leaderboard). Leaderboard - Complete the game with the highest score/most money/best kill count/etc. possible. Leaderboard - Complete a given stage with the highest score/most money/best kill count/etc. possible.","title":"Score Challenges"},{"location":"developers/design/#challenge-pros-and-cons","text":"Challenge Achievements are your chance to show players how to play their favorite games in different, unique, and even mind-bending ways. While these achievements can breathe life into an otherwise dull achievement set, you generally only want a small handful of these to be in your final list.","title":"Challenge Pros and Cons"},{"location":"developers/design/#pros_2","text":"Hardcore players love sinking their teeth into these kinds of achievements. If some players are too hardcore, you can find a happy medium by implementing Leaderboards, which satisfies both the casual achievement hunters and the hardcore players all at once. This is your chance to be very creative and come up with new challenges for players they never expected. This can be a pleasant surprise and really make your lists memorable.","title":"Pros"},{"location":"developers/design/#cons_2","text":"These types of achievements require a fair amount of creativity to dream up, though there are many ways to research unusual ways to play games by watching things like speed runs. May require a deep research. These can be notoriously difficult to code. They require you to make a lot of code notes, make tons of game mechanic observations, and often times they require bug testing before they even work. In fact, you may not even be ready to tackle achievements like this until you've had a few games under your belt with a set of baseline achievements. Fortunately, Challenge Achievements can always be added later.","title":"Cons"},{"location":"developers/design/#external-resources","text":"Best practices achievement creation guide written by Jeff Sullivan, Developer Account Manager of XNA Developer Connection (XDC) regarding XBox 360 Achievements. Make them Work for it an achievement design guide written by by Darran Jamieson on 1 Jan 2013. The Achievement Machine: Understanding Xbox 360 Achievements in Gaming Practices - by Mikael Jakobsson","title":"External Resources"},{"location":"developers/devs-home/","text":"If you want to be an achievement developer, check here how to become a developer . Every Developer must know and adhere the Developer's Code of Conduct . Now a brief description some pages you'll see in this section. How to Become an Achievement Developer : overview of the steps required in obtaining developer status Getting Started as an Achievement Developer : it's for the very first contact with cheevos development tools (Memory Inspector and other Achievements dialogs). IF YOU ARE A COMPLETE NEWBIE, START HERE! New Achievement Set Checklist : a quick list of simple steps to take before reserving a game. Achievement Scoring : a guide to deciding point totals for achievements Memory Inspector Overview : detailed look at one of an achievement developer's most used tools. Achievement Logic Features : describes the available tools a developer have in order to improve the logic behind the achievements, such as delta values, hit counts, ResetIf, PauseIf, Alt groups, etc. Real Examples : showing real examples and breaking down the logic behind them. AWESOME LEARNING RESOURCE! Achievement Templates : some generic templates to get inspiration. Tips and Tricks : general tips and tricks about memory digging and achievement creation. Difficulty Scale and Balance : guidelines/suggestions on how to balance the difficulty of your achievement set. Achievement Design : a guide on how to think about and design good achievements, not the technical side but the conceptual. Set Development Roadmap : suggestions of steps to take in order to create a really neat achievement set. Achievement Set Revisions : information on revisions, rescores, and the icon gauntlet. Badge and Icon Creation : some guidelines and tips about badge/icon creation. Leaderboards : instructions on how to create Leaderboards for a game. Rich Presence : how to write Rich Presence Scripts. Working with the Right ROM : information on using correct ROMs and hashes. Game Identification : details on the hashing methods used for each system. Emulator Support and Issues : details on both supported and unsupported cores, testing progress, etc. Subsets : an advanced topic on creating special challenge sets and how to release them. Achievements for ROM Hacks : a detailed guide for developers on the proper inclusion (and approval) of ROM Hacks. Console Specific Tips : knowing the peculiarities of your favorite console can help you with memory digging.","title":"Developers Home"},{"location":"developers/difficulty-scale-and-balance/","text":"This doc has some suggestions about difficulty, set balance and on keeping a set fun, approachable, and challenging. What you're going to see here are not rules, just suggestions. Note : be aware of Developers Code of Conduct Difficulty Scale: \u00b6 Freebie Easy Medium Med-hard Hard Very-Hard Super-Hard More details on these at the bottom . In general there should be an steady sloping balance of difficulty. One should think of the overall difficulty of a set while building it. One should not make sets excessively difficult. A good set balance on a 50 cheeves in an average set would have roughly: 4 freebies, 6 easy cheeves, 10 medium, 10 med-hard, 14 hard, and 6 very-hard, 0 kaizo. A well balanced difficulty distribution has rewards for every type of player. It gives each skill level something to accomplish until mastery. Achievements should not just be a check-mark of completing a game , (too easy) but create fun new memories for the game (diversity of challenges). It leaves space for freebies that are featuring curious or fun elements of the game. It expects enough difficulty that once you've mastered the set you are a master of the game. But it doesn't ask too much from the player either. It also shouldn't ask the player to be doing seemingly endless repetitive grinding to make a set seem harder. Doing the same task over and over isn't hard, it's typically dull. It should almost always avoid making marathon types with a hill at the end (ones that require long setup times with low or repetitive difficulty and then a spike of high difficulty at the end. Don't do it!). Sets should be mastereable by a skilled player who gives a dedicated effort. Sets should reflect the content of the game. Grinding cheeves in games that require grinding are reasonable, where in other places they would often be inappropriate. Sets should also break out of just what is expected from a game, pushing the player to need to find new solutions for problems a veteran player never considered. Set Quantity: \u00b6 Set quantity should not have such hard rules. Quality is the key factor. The set quantity strongly depends on how much fun and challenges the game can give. That's why the set developer must know the game very well. Set Variety: \u00b6 Keep it fun, give it variety, challenge the player, give the player new things to do. Some achievements can give much fun to the player when they are like a meta-game. Where the player is required to rethink the game entirely. Some notable examples: Fabulous ComboFabulous Combo (15) - it turns the game into a puzzle game, completing this can be really satifying Swordless Adventurer (20) - with no sword you are forced to rethink the entire game. You can discover how useful all the subweapons are. Very fun! There Are No Bullets in the Energy Zone (10) - pacifist challenges, when possible force a lot more agility from the player and break old habits. Very fun! Definitions of Difficulty \u00b6 0 - freebie \u00b6 Takes almost no effort for basically all players to achieve this OR the player gets it without any conscious effort. The player gets these on accident and they pop up on the screen. Sometimes the player will have no idea why they earned them. Some freebies are good some are bad. Examples: Starting the game, picking a character, collecting an easily accessible item, killing your first enemy. Stumbling on a cheeve that took no forethought but highlights elements of the game. 1 - Easy \u00b6 Most players could get these on their first attempt, Some on their second or third attempt. Rarely players can mess it up. Examples: Progress on easy stages, getting 100 coins, collecting a feather, collecting 20 rings. Getting the first upgrade, getting to a well known secret stage. Fighting a simple boss: most bosses in Super Mario World, completing early stages in Sonic. 2 - Medium \u00b6 Many players could get this on their first attempt. Many could after a few attempts. Some will need to practice. Very few will struggle with them. Examples: Getting all the colored switches in Super Mario World, collecting all of the items in a Castlevania stage, getting a bonus item in a more hidden area, like moons in SMW. Beating Contra with the Konami code. 3 - Medium-Hard \u00b6 A low amount of players could get this on their first attempt. Some after a few attempts and most will take some effort and practice to complete these. A few will find them very challenging, and give up. Examples: Getting some of the chaos emeralds in Sonic 2. Beating Super Mario World. 4 - Hard \u00b6 Very few player can get these on their first attempt, perhaps if they already know the game (not really a first attempt is it?) Most can complete these with a solid effort, many attempts and some practice, and some need to practice other games first. Examples: Getting all of the Chaos emeralds in Sonic 1,2,3. Beating Contra without the Konami code. 5 - Very Hard \u00b6 Only the rarest of players can complete these on a first attempt. Most can complete it after many attempts, Many players will drop off here and won't be willing to complete the set unless they are completionists or fans of the game. Many are not able to complete this after very many attempts. Usually takes significant practice, high skills, experience, research, or guides to complete. Examples: Beating Contra in one life. Escaping Zebes (Super Metroid) in under two minutes. Beating many of the Megaman bosses without taking damage. Many damagless stages, depending on the game. 6 - Super Hard \u00b6 Most players are not able to complete this after dozens of attempts. Many players will never be able to complete it as it could require beyond normal reaction speeds. The top-most skilled players still consider these blisteringly hard. It may take marathon efforts to restart. Examples: Completing a game without taking damage especially if the player has a lifebar, challenges that drastically restrict the player and require near frame perfect accuracy tor success. Beating contra twice in one life. Penniless plumber. Beating Megaman without taking damage.","title":"Difficulty Scale and Balance"},{"location":"developers/difficulty-scale-and-balance/#difficulty-scale","text":"Freebie Easy Medium Med-hard Hard Very-Hard Super-Hard More details on these at the bottom . In general there should be an steady sloping balance of difficulty. One should think of the overall difficulty of a set while building it. One should not make sets excessively difficult. A good set balance on a 50 cheeves in an average set would have roughly: 4 freebies, 6 easy cheeves, 10 medium, 10 med-hard, 14 hard, and 6 very-hard, 0 kaizo. A well balanced difficulty distribution has rewards for every type of player. It gives each skill level something to accomplish until mastery. Achievements should not just be a check-mark of completing a game , (too easy) but create fun new memories for the game (diversity of challenges). It leaves space for freebies that are featuring curious or fun elements of the game. It expects enough difficulty that once you've mastered the set you are a master of the game. But it doesn't ask too much from the player either. It also shouldn't ask the player to be doing seemingly endless repetitive grinding to make a set seem harder. Doing the same task over and over isn't hard, it's typically dull. It should almost always avoid making marathon types with a hill at the end (ones that require long setup times with low or repetitive difficulty and then a spike of high difficulty at the end. Don't do it!). Sets should be mastereable by a skilled player who gives a dedicated effort. Sets should reflect the content of the game. Grinding cheeves in games that require grinding are reasonable, where in other places they would often be inappropriate. Sets should also break out of just what is expected from a game, pushing the player to need to find new solutions for problems a veteran player never considered.","title":"Difficulty Scale:"},{"location":"developers/difficulty-scale-and-balance/#set-quantity","text":"Set quantity should not have such hard rules. Quality is the key factor. The set quantity strongly depends on how much fun and challenges the game can give. That's why the set developer must know the game very well.","title":"Set Quantity:"},{"location":"developers/difficulty-scale-and-balance/#set-variety","text":"Keep it fun, give it variety, challenge the player, give the player new things to do. Some achievements can give much fun to the player when they are like a meta-game. Where the player is required to rethink the game entirely. Some notable examples: Fabulous ComboFabulous Combo (15) - it turns the game into a puzzle game, completing this can be really satifying Swordless Adventurer (20) - with no sword you are forced to rethink the entire game. You can discover how useful all the subweapons are. Very fun! There Are No Bullets in the Energy Zone (10) - pacifist challenges, when possible force a lot more agility from the player and break old habits. Very fun!","title":"Set Variety:"},{"location":"developers/difficulty-scale-and-balance/#definitions-of-difficulty","text":"","title":"Definitions of Difficulty"},{"location":"developers/difficulty-scale-and-balance/#0-freebie","text":"Takes almost no effort for basically all players to achieve this OR the player gets it without any conscious effort. The player gets these on accident and they pop up on the screen. Sometimes the player will have no idea why they earned them. Some freebies are good some are bad. Examples: Starting the game, picking a character, collecting an easily accessible item, killing your first enemy. Stumbling on a cheeve that took no forethought but highlights elements of the game.","title":"0 - freebie"},{"location":"developers/difficulty-scale-and-balance/#1-easy","text":"Most players could get these on their first attempt, Some on their second or third attempt. Rarely players can mess it up. Examples: Progress on easy stages, getting 100 coins, collecting a feather, collecting 20 rings. Getting the first upgrade, getting to a well known secret stage. Fighting a simple boss: most bosses in Super Mario World, completing early stages in Sonic.","title":"1 - Easy"},{"location":"developers/difficulty-scale-and-balance/#2-medium","text":"Many players could get this on their first attempt. Many could after a few attempts. Some will need to practice. Very few will struggle with them. Examples: Getting all the colored switches in Super Mario World, collecting all of the items in a Castlevania stage, getting a bonus item in a more hidden area, like moons in SMW. Beating Contra with the Konami code.","title":"2 - Medium"},{"location":"developers/difficulty-scale-and-balance/#3-medium-hard","text":"A low amount of players could get this on their first attempt. Some after a few attempts and most will take some effort and practice to complete these. A few will find them very challenging, and give up. Examples: Getting some of the chaos emeralds in Sonic 2. Beating Super Mario World.","title":"3 - Medium-Hard"},{"location":"developers/difficulty-scale-and-balance/#4-hard","text":"Very few player can get these on their first attempt, perhaps if they already know the game (not really a first attempt is it?) Most can complete these with a solid effort, many attempts and some practice, and some need to practice other games first. Examples: Getting all of the Chaos emeralds in Sonic 1,2,3. Beating Contra without the Konami code.","title":"4 - Hard"},{"location":"developers/difficulty-scale-and-balance/#5-very-hard","text":"Only the rarest of players can complete these on a first attempt. Most can complete it after many attempts, Many players will drop off here and won't be willing to complete the set unless they are completionists or fans of the game. Many are not able to complete this after very many attempts. Usually takes significant practice, high skills, experience, research, or guides to complete. Examples: Beating Contra in one life. Escaping Zebes (Super Metroid) in under two minutes. Beating many of the Megaman bosses without taking damage. Many damagless stages, depending on the game.","title":"5 - Very Hard"},{"location":"developers/difficulty-scale-and-balance/#6-super-hard","text":"Most players are not able to complete this after dozens of attempts. Many players will never be able to complete it as it could require beyond normal reaction speeds. The top-most skilled players still consider these blisteringly hard. It may take marathon efforts to restart. Examples: Completing a game without taking damage especially if the player has a lifebar, challenges that drastically restrict the player and require near frame perfect accuracy tor success. Beating contra twice in one life. Penniless plumber. Beating Megaman without taking damage.","title":"6 - Super Hard"},{"location":"developers/getting-started-as-an-achievement-developer/","text":"Welcome to the world of Achievement Creation! Basic Concepts \u00b6 Technically, an achievement is a group of conditions that must be met in a particular frame of the video game . When you launch a game on an emulator with the RetroAchievements feature, the emulator is always checking if those conditions are met in the current frame. When all conditions for a particular achievement are met, it is awarded and the emulator stops checking the conditions for that achievement. The process of creating an achievement basically involves 3 steps: Finding a place in the game's RAM where the information you want is stored (examples: level, life bar, time, coins, holding a weapon, get an item, etc.). Create conditions that must be met in order to award an Achievement. Test if your achievement is working as expected. Most likely you'll go back to step 2 and 3 many times to refine the logic of your Achievement. In this doc we'll see how to accomplish the steps above. After you're sure your achievement is triggering at the conditions you want, you can submit it to the server. We'll see more about it later. First Steps \u00b6 Before start ensure you have an RA emulator from the RetroAchievements Download Page first and create an account so you can log in using the emulator. In this guide we'll be using RALibRetro with the Genesis Plus GX core to demonstrate, and the game Sonic the Hedgehog . We are using RALibRetro but the same applies for the standalone emulators. To begin, run the RALibRetro executable and login when prompted. If you have not used the Genesis Plus GX core before, you can install it by going to Settings -> Manage Cores -> selecting Sega Genesis in the drop down menu -> clicking Download to the right of the core name. Once the core is installed, go to File -> Select Core -> Sega Genesis -> Genesis Plus GX. Now that you have the core selected, you'll need to load the game. Go to File -> Load Game and select the Sonic the Hedgehog ROM (we recommend using No Intro ROMs by default). Memory Inspector \u00b6 You should now have your main window running Sonic. There are 3 other dialogs we'll be using, which can be found under RetroAchievements in the menu. We'll be dealing with the Memory Inspector first: The Memory Inspector can be used to find addresses in RAM for us to use. Essentially you are on a treasure hunt for memory locations - this dialog will help you examine and filter the game's RAM while the game is running. NOTE: If you want a step-by-step video explanation on finding memory addresses, this old video can be useful . See also : Memory Inspector Overview and Memory Digging Tips . To start or restart a test, click Reset near the top left. To keep things simple, we'll start by looking for the memory address which holds the number of rings we have collected. Our steps will be the following: Load the ROM and start a new game. Reset the memory dialog: click Reset . Run the first filter: click Filter Once . Return to the game and change the number of rings in memory. For example, collect a ring. In the memory dialog, we now want to filter for values that are 'greater than previous values' (symbol > ). We select this, then hit Filter again. Each time you perform 4 then 5, the number of possibilities or 'candidates' will get smaller. We will continue doing this until the number of candidates reaches a very small number (as few as possible), it can take several attempts. Next we can click in the results window, and monitor the memory address in the memory viewer at the bottom. Continue using the game and you should see the values in memory change as you collect rings. If you don't, or if something doesn't look right, try another value. With the first Sonic the Hedgehog, the memory address for the number of rings should be 0xfe20 . Note 1 : Using save states (Shift+F1-F10 to save states, F1-F10 to load states), you can switch back and forth between different states allowing you to alter what is in RAM, and use this to filter out bad candidates. You can search for values that remain the same (I.e. If you know the value didn't change, use = ), or values that are different (use 'not equal', symbol != ). Using the example above, you can collect a ring then use the \">\" filter, take a few steps then use the \"=\" filter (since the number of rings did not change), collect more rings and use the \">\" filter again, etc. Note 2 : There's unfortunately no guarantee from game to game on how the developers have stored their data (4-bit, 8-bit, 16-bit, binary-coded decimals, negative/inverted, i.e. using 0xff/0xffff to represent 'set', or plain randomly), but eventually you should come across some good addresses. Note if you are struggling to find good values, post in RetroAchievements.org Development Help forum , or RetroAchievements Discord server . There are plenty of people who will be very happy to help!! Tip : if you'd like to experiment with memory, try entering new values directly into the RAM viewer. This can have devastating effects on the game, or it might do exactly what you expect, (or nothing at all!) It can be useful though, to see if you can enter a value and get the result you expect. Use with caution! When you've found an address you're happy with, you can write a short note for what it is and hit Save Note , this will store it on database, and will be automatically restored next time you load up the memory viewer for this game, wherever you are! Note that after clicking 'Save Note', the note will be automatically stored on the database, and shared so all developers will share access to these memory notes. They will all be downloaded afresh when you load a ROM. If you try to overwrite a note, it will check with you first before submitting. You can find more useful Memory Digging Tips here . Achievement Sets \u00b6 So the memory location for the number of rings is stored at 0xfe20 - note to a non-programmer, we're dealing in hexadecimal numeral system which can be daunting, but don't worry, essentially it's just numbers and letters instead of only numbers, and not forgetting 0x at the start to show that it's a memory location in hex. We've found an address we're interested in and stored it using Save Note . We now want to create a new achievement. Go to the RetroAchievements in the menu, choose Achievement Sets and you'll see this dialog: Here we group all the achievements we know about into three sets: Core Achievements (the main, public Achievement set), Unofficial/User Achievements (public, but will not award you points: for peer review), Local Achievements (exclusive to your PC). In the Achievements dialog, click Local Achievements (top left), then Add New Achievement (top right). This will add a blank entry to the list in the center. Double click on it: if it's not already open, this should select it and open the Achievement Editor dialog. Achievement Editor \u00b6 This is how it looks: This is the final dialog where we bring all the data together. Most of the top fields are self explanatory, I.e. Title, Description, Points. The main one is the 'Requirements' part. Let's say we want to add an achievement for collecting a certain number of rings. Let's say 15 rings for simplicity. After filling out the fields at the top and selecting a suitable icon (in this example we used the gold trophy badge (00136), but you can upload a new one), we need to fill out Requirements. We have one requirement, that the number of rings is at least 15 . Next click is Add New Requirement . Clicking this button will add several default values to the Requirements list. These defaults just ensure that something relatively sensible is added to the list. For now, ignoring the field 'Special?'. When we clicked create, the default memory value will be whatever value you last left in the memory dialog. Next we will change these values to the following: Size : 16-bit - we're using 16-bit because the value can exceed 255 (which is 0xff in hex) Memory : 0xfe20 Cmp : >= - this is the comparison to make. We could have any comparison here, but it's sensible to have \"greater than or equal to\". This is important because if we get 10 rings then a super ring box to have 20, we would miss out having exactly 15 rings. Type : Value - we're comparing this memory value to a fixed value: 15 Size : Empty - this is only relevant when comparing memory to memory Mem/Val : 15 - the number of rings required: the value we are comparing the memory to Hit Count : 0 - ignore this for now, its useful for when something needs to happen a certain number of times With that set, we don't have any more conditions to add, so we return to the Achievements Dialog . To be safe, we should save our progress by hitting Save Local ! This saves everything to file locally to ensure that we won't lose any progress. Note : An achievement should have more than one requirement to avoid it triggering at the wrong time (i.e. playing demo mode). In this example, we are using only one requirement to simplify the explanation. See more Achievement Creation Tips here . Testing the Achievement \u00b6 We can now 'activate' this achievement locally by checking the box next to Active on the right-hand side in the Achievement Editor or by selecting the achievement in Achievement Sets and clicking Activate Selected . This will start monitoring these memory locations and will award the achievement once all the conditions are true. Now we can go ahead and test to see if this achievement works! If we press Esc in-game, you will see the achievement show up as a demonstration of what it would look like in the in-game overlay! Although the achievement worked fine in our tests, an achievement with logic like that is not ready to be officially released. First of all, it has only one condition: \"collected rings >= 15\". The problem is that the memory address used to record the number of collected rings is also used when the game runs in \"demo mode\" (AI playing the game after you wait a while on the title screen). So, if Sonic collects 15 rings in demo mode this achievement will trigger, which is unwanted. Check the tips in the next section below to know how to improve the logic of your achievement and then make it acceptable to be officially released. Important Tips \u00b6 Here are some tips you have to keep in mind when creating your achievements: Never Avoid making achievements with only one condition as much as you can . Otherwise it will most likely pop at the wrong time. This is the most common error by a developer If the game has a demo mode (AI plays the game after you wait a while on the title screen), make sure to find the address for it and add a condition so your achievements don't trigger in demo mode. You'll also need to know how to use PauseIf and ResetIf . PauseIf cheat codes : If the game has a cheat code to increase lives, select stages, etc., make sure to find the addresses for it and add some kind of protection in your achievements. OK, maybe it's not a very basic topic, but you have to keep it in mind when creating an official achievement set. Avoid creating achievements for just entering a stage. As it can be earned by a password or a stage select cheat code. It is preferred to make achievements for finishing stages, like in this template here . Also, do not create achievements for just starting a game or \"starting a game with character X\" . If you want to create an achievement for getting a unique item in the game, add some conditions to make sure the player obtained the item where it is supposed to be obtained, like in this template here . Otherwise the achievement can be earned by using password or loading a saved game. Avoid making too many achievements about simple things that require minimal effort . Examples of what NOT to do: get one coin or one mushroom on Super Mario Bros. Be aware of the unwelcome achievement's design concepts . Be creative with your achievements . Those covering unique features and details of the game are the most welcome. The players love when that little detail of a game they love is supported on an achievement. Reading a walkthrough on GameFAQs can give some inspiration too. It can take a while to understand how the memory works in a game, so try spending as much time with it as you can, especially if it's your first attempt at developing achievements. You can find more in the Tips and Tricks page . Next Steps \u00b6 Now that you know how to use the Memory Inspector, and the Achievement Editor. It's time to learn new techniques and practice: In order to refine your achievement logic, you can see what features you have in the Achievement Logic Features page. Another way to learn is by looking at existing achievements that other devs made with an extra explanation in the Real Examples page. You can also see some generic examples in the Achievement Templates page. Once you have learned the basic techniques, you can continue your quest to become an achievement developer by following the steps explained here: How to Become an Achievement Developer Have fun!","title":"Getting Started as an Achievement Developer"},{"location":"developers/getting-started-as-an-achievement-developer/#basic-concepts","text":"Technically, an achievement is a group of conditions that must be met in a particular frame of the video game . When you launch a game on an emulator with the RetroAchievements feature, the emulator is always checking if those conditions are met in the current frame. When all conditions for a particular achievement are met, it is awarded and the emulator stops checking the conditions for that achievement. The process of creating an achievement basically involves 3 steps: Finding a place in the game's RAM where the information you want is stored (examples: level, life bar, time, coins, holding a weapon, get an item, etc.). Create conditions that must be met in order to award an Achievement. Test if your achievement is working as expected. Most likely you'll go back to step 2 and 3 many times to refine the logic of your Achievement. In this doc we'll see how to accomplish the steps above. After you're sure your achievement is triggering at the conditions you want, you can submit it to the server. We'll see more about it later.","title":"Basic Concepts"},{"location":"developers/getting-started-as-an-achievement-developer/#first-steps","text":"Before start ensure you have an RA emulator from the RetroAchievements Download Page first and create an account so you can log in using the emulator. In this guide we'll be using RALibRetro with the Genesis Plus GX core to demonstrate, and the game Sonic the Hedgehog . We are using RALibRetro but the same applies for the standalone emulators. To begin, run the RALibRetro executable and login when prompted. If you have not used the Genesis Plus GX core before, you can install it by going to Settings -> Manage Cores -> selecting Sega Genesis in the drop down menu -> clicking Download to the right of the core name. Once the core is installed, go to File -> Select Core -> Sega Genesis -> Genesis Plus GX. Now that you have the core selected, you'll need to load the game. Go to File -> Load Game and select the Sonic the Hedgehog ROM (we recommend using No Intro ROMs by default).","title":"First Steps"},{"location":"developers/getting-started-as-an-achievement-developer/#memory-inspector","text":"You should now have your main window running Sonic. There are 3 other dialogs we'll be using, which can be found under RetroAchievements in the menu. We'll be dealing with the Memory Inspector first: The Memory Inspector can be used to find addresses in RAM for us to use. Essentially you are on a treasure hunt for memory locations - this dialog will help you examine and filter the game's RAM while the game is running. NOTE: If you want a step-by-step video explanation on finding memory addresses, this old video can be useful . See also : Memory Inspector Overview and Memory Digging Tips . To start or restart a test, click Reset near the top left. To keep things simple, we'll start by looking for the memory address which holds the number of rings we have collected. Our steps will be the following: Load the ROM and start a new game. Reset the memory dialog: click Reset . Run the first filter: click Filter Once . Return to the game and change the number of rings in memory. For example, collect a ring. In the memory dialog, we now want to filter for values that are 'greater than previous values' (symbol > ). We select this, then hit Filter again. Each time you perform 4 then 5, the number of possibilities or 'candidates' will get smaller. We will continue doing this until the number of candidates reaches a very small number (as few as possible), it can take several attempts. Next we can click in the results window, and monitor the memory address in the memory viewer at the bottom. Continue using the game and you should see the values in memory change as you collect rings. If you don't, or if something doesn't look right, try another value. With the first Sonic the Hedgehog, the memory address for the number of rings should be 0xfe20 . Note 1 : Using save states (Shift+F1-F10 to save states, F1-F10 to load states), you can switch back and forth between different states allowing you to alter what is in RAM, and use this to filter out bad candidates. You can search for values that remain the same (I.e. If you know the value didn't change, use = ), or values that are different (use 'not equal', symbol != ). Using the example above, you can collect a ring then use the \">\" filter, take a few steps then use the \"=\" filter (since the number of rings did not change), collect more rings and use the \">\" filter again, etc. Note 2 : There's unfortunately no guarantee from game to game on how the developers have stored their data (4-bit, 8-bit, 16-bit, binary-coded decimals, negative/inverted, i.e. using 0xff/0xffff to represent 'set', or plain randomly), but eventually you should come across some good addresses. Note if you are struggling to find good values, post in RetroAchievements.org Development Help forum , or RetroAchievements Discord server . There are plenty of people who will be very happy to help!! Tip : if you'd like to experiment with memory, try entering new values directly into the RAM viewer. This can have devastating effects on the game, or it might do exactly what you expect, (or nothing at all!) It can be useful though, to see if you can enter a value and get the result you expect. Use with caution! When you've found an address you're happy with, you can write a short note for what it is and hit Save Note , this will store it on database, and will be automatically restored next time you load up the memory viewer for this game, wherever you are! Note that after clicking 'Save Note', the note will be automatically stored on the database, and shared so all developers will share access to these memory notes. They will all be downloaded afresh when you load a ROM. If you try to overwrite a note, it will check with you first before submitting. You can find more useful Memory Digging Tips here .","title":"Memory Inspector"},{"location":"developers/getting-started-as-an-achievement-developer/#achievement-sets","text":"So the memory location for the number of rings is stored at 0xfe20 - note to a non-programmer, we're dealing in hexadecimal numeral system which can be daunting, but don't worry, essentially it's just numbers and letters instead of only numbers, and not forgetting 0x at the start to show that it's a memory location in hex. We've found an address we're interested in and stored it using Save Note . We now want to create a new achievement. Go to the RetroAchievements in the menu, choose Achievement Sets and you'll see this dialog: Here we group all the achievements we know about into three sets: Core Achievements (the main, public Achievement set), Unofficial/User Achievements (public, but will not award you points: for peer review), Local Achievements (exclusive to your PC). In the Achievements dialog, click Local Achievements (top left), then Add New Achievement (top right). This will add a blank entry to the list in the center. Double click on it: if it's not already open, this should select it and open the Achievement Editor dialog.","title":"Achievement Sets"},{"location":"developers/getting-started-as-an-achievement-developer/#achievement-editor","text":"This is how it looks: This is the final dialog where we bring all the data together. Most of the top fields are self explanatory, I.e. Title, Description, Points. The main one is the 'Requirements' part. Let's say we want to add an achievement for collecting a certain number of rings. Let's say 15 rings for simplicity. After filling out the fields at the top and selecting a suitable icon (in this example we used the gold trophy badge (00136), but you can upload a new one), we need to fill out Requirements. We have one requirement, that the number of rings is at least 15 . Next click is Add New Requirement . Clicking this button will add several default values to the Requirements list. These defaults just ensure that something relatively sensible is added to the list. For now, ignoring the field 'Special?'. When we clicked create, the default memory value will be whatever value you last left in the memory dialog. Next we will change these values to the following: Size : 16-bit - we're using 16-bit because the value can exceed 255 (which is 0xff in hex) Memory : 0xfe20 Cmp : >= - this is the comparison to make. We could have any comparison here, but it's sensible to have \"greater than or equal to\". This is important because if we get 10 rings then a super ring box to have 20, we would miss out having exactly 15 rings. Type : Value - we're comparing this memory value to a fixed value: 15 Size : Empty - this is only relevant when comparing memory to memory Mem/Val : 15 - the number of rings required: the value we are comparing the memory to Hit Count : 0 - ignore this for now, its useful for when something needs to happen a certain number of times With that set, we don't have any more conditions to add, so we return to the Achievements Dialog . To be safe, we should save our progress by hitting Save Local ! This saves everything to file locally to ensure that we won't lose any progress. Note : An achievement should have more than one requirement to avoid it triggering at the wrong time (i.e. playing demo mode). In this example, we are using only one requirement to simplify the explanation. See more Achievement Creation Tips here .","title":"Achievement Editor"},{"location":"developers/getting-started-as-an-achievement-developer/#testing-the-achievement","text":"We can now 'activate' this achievement locally by checking the box next to Active on the right-hand side in the Achievement Editor or by selecting the achievement in Achievement Sets and clicking Activate Selected . This will start monitoring these memory locations and will award the achievement once all the conditions are true. Now we can go ahead and test to see if this achievement works! If we press Esc in-game, you will see the achievement show up as a demonstration of what it would look like in the in-game overlay! Although the achievement worked fine in our tests, an achievement with logic like that is not ready to be officially released. First of all, it has only one condition: \"collected rings >= 15\". The problem is that the memory address used to record the number of collected rings is also used when the game runs in \"demo mode\" (AI playing the game after you wait a while on the title screen). So, if Sonic collects 15 rings in demo mode this achievement will trigger, which is unwanted. Check the tips in the next section below to know how to improve the logic of your achievement and then make it acceptable to be officially released.","title":"Testing the Achievement"},{"location":"developers/getting-started-as-an-achievement-developer/#important-tips","text":"Here are some tips you have to keep in mind when creating your achievements: Never Avoid making achievements with only one condition as much as you can . Otherwise it will most likely pop at the wrong time. This is the most common error by a developer If the game has a demo mode (AI plays the game after you wait a while on the title screen), make sure to find the address for it and add a condition so your achievements don't trigger in demo mode. You'll also need to know how to use PauseIf and ResetIf . PauseIf cheat codes : If the game has a cheat code to increase lives, select stages, etc., make sure to find the addresses for it and add some kind of protection in your achievements. OK, maybe it's not a very basic topic, but you have to keep it in mind when creating an official achievement set. Avoid creating achievements for just entering a stage. As it can be earned by a password or a stage select cheat code. It is preferred to make achievements for finishing stages, like in this template here . Also, do not create achievements for just starting a game or \"starting a game with character X\" . If you want to create an achievement for getting a unique item in the game, add some conditions to make sure the player obtained the item where it is supposed to be obtained, like in this template here . Otherwise the achievement can be earned by using password or loading a saved game. Avoid making too many achievements about simple things that require minimal effort . Examples of what NOT to do: get one coin or one mushroom on Super Mario Bros. Be aware of the unwelcome achievement's design concepts . Be creative with your achievements . Those covering unique features and details of the game are the most welcome. The players love when that little detail of a game they love is supported on an achievement. Reading a walkthrough on GameFAQs can give some inspiration too. It can take a while to understand how the memory works in a game, so try spending as much time with it as you can, especially if it's your first attempt at developing achievements. You can find more in the Tips and Tricks page .","title":"Important Tips"},{"location":"developers/getting-started-as-an-achievement-developer/#next-steps","text":"Now that you know how to use the Memory Inspector, and the Achievement Editor. It's time to learn new techniques and practice: In order to refine your achievement logic, you can see what features you have in the Achievement Logic Features page. Another way to learn is by looking at existing achievements that other devs made with an extra explanation in the Real Examples page. You can also see some generic examples in the Achievement Templates page. Once you have learned the basic techniques, you can continue your quest to become an achievement developer by following the steps explained here: How to Become an Achievement Developer Have fun!","title":"Next Steps"},{"location":"developers/how-to-become-an-achievement-developer/","text":"This document describes all the steps that any aspiring achievement developer must follow before getting Developer status. These requirement are also a checklist for Code Reviewers (developers who inspect the code of new developers). Anyone can become a RetroAchievements developer if they put in the effort. Strongly recommended : join our Discord server so you can get in contact with other achievement developers who can show you the ropes and help you along. If you already know what game you want to work on, go ahead and ask for the jr-dev role. This gives you access to the #jr-devs channel, where you can talk to code reviewers and ask any development related questions. Finding a Game to Work on \u00b6 Follow the guidelines on the Developer's Code of Conduct to find a game to work on achievements for it. The basics are that you must declare you plans to work on the game on in the forum, and then as you work on the game, add your plans for the game in the forum. Tip : for your first achievement set, it's recommended to choose a game that doesn't yet have achievements and is not very popular. Planning your Achievement Set \u00b6 Once you find a game to work on you need to plan your Achievement Set. Be sure you know enough about the game to make a good set. Check the GameFAQs or something, try to learn more about the game, its secrets and details. Here is a good guide to help you with this: Set Development Roadmap . Post your plans on the official game's forum topic, so the community can leave suggestions and provide feedback. This is required behavior for all devs and jr-dev. IMPORTANT!: be open to receive feedback and suggestions. See also : Achievement Design , it's an extensive guide on how to design good and interesting achievements. It's not about the technical side but the conceptual. Required Knowledge \u00b6 Every developer must know at least the basic concepts and techniques shown in these two docs: Getting Started as an Achievement Developer Achievement Logic Features Any aspiring dev must demonstrate understanding of the following concepts: Basic RAM digging (be familiar with the Memory Inspector ) Hexadecimal notation Delta values Hit counts Pause If Reset If Alt Groups Memory sizes: 8-bit and single bit Achievement logic comparisons besides = , such as > , < , != Adding badges to an achievment Creating accurate descriptions for achievements Add appropriate protections Make a stable achievement set Note : You do not need mastery of all these concepts to have a set published, but you do need them to have the full Developer role. Advanced Concepts \u00b6 Here is a list of some advanced concepts/techniques. They are not required to become a Developer , but are listed here to let the jr-dev know the possibilities of the Achievement's logic. Hit count as timer (like in this example and this one ) ResetIf Checkpoints ResetIf with Hitcount PauseIf with Hitcount AddSource and SubSource Flags AddHits and SubHits Flag Increment counter ( Mem > Delta Counter) Delta Hit Counter, pause technique Little endianness Memory size: Lower4, Upper4 , and 16-bit, 32-bit Dynamic Rich Presence Leaderboards Pausable Resets SubSource increment counter The Real Examples and Achievement Templates pages are useful resources to see how those techniques work. Code Notes \u00b6 Non-devs can create and delete code notes that they have created, but they cannot delete or edit any notes created by others. Developers CAN edit and remove notes by other users, and these changes are site-wide. Practicing \u00b6 In order to become familiar to those techniques you must practice. You can use any game to practice , even those that already have achievements. Just be aware about these rules: Do NOT delete/overwrite any existing Code Note. On this practicing phase, keep your work in local and do NOT upload any achievement. You'll do it later when you find a game to actually work on. Get your work reviewed \u00b6 After creating some achievements, upload them to Unofficial and then contact a @mod or @code-reviewer on our Discord server (if you don't use Discord, send a message to RAdmin ) and ask them to find someone to review your work. Do NOT ask another developer to promote your achievements to the Core without a proper review. Again, it's extremely important that you are open to receive constructive criticism and helpful advice from the community at any time . Am I ready to get the Developer status? \u00b6 Once the Code Reviewers have inspected your achievement's code and concepts, they and the admin will use the \"Required Knowledge\" checklist above to determine if you're ready. If you're not fully qualified to be a developer but but your set is complete and stable the set will get published. You can then ask which concepts you still need to demonstrate proficiency in to be given developer status. The merit of a jr-dev receiving developer status depends on: their ability to publish work that meets the standards of the Developer's Code of Conduct ; demonstration of required knowledge and advanced concepts ; the quality and complexity of their work; the time and thought they put into planning and working on achievements; showing the will to use the Developer status with care and responsibility; the extent to which the points above reflect their capabilities as a developer. Developer's Code of Conduct \u00b6 Once you get your Developer status, you MUST adhere to the Developer's Code of Conduct . That is extremely important to create a fair environment between the Achievement Developers.","title":"How to Become an Achievement Developer"},{"location":"developers/how-to-become-an-achievement-developer/#finding-a-game-to-work-on","text":"Follow the guidelines on the Developer's Code of Conduct to find a game to work on achievements for it. The basics are that you must declare you plans to work on the game on in the forum, and then as you work on the game, add your plans for the game in the forum. Tip : for your first achievement set, it's recommended to choose a game that doesn't yet have achievements and is not very popular.","title":"Finding a Game to Work on"},{"location":"developers/how-to-become-an-achievement-developer/#planning-your-achievement-set","text":"Once you find a game to work on you need to plan your Achievement Set. Be sure you know enough about the game to make a good set. Check the GameFAQs or something, try to learn more about the game, its secrets and details. Here is a good guide to help you with this: Set Development Roadmap . Post your plans on the official game's forum topic, so the community can leave suggestions and provide feedback. This is required behavior for all devs and jr-dev. IMPORTANT!: be open to receive feedback and suggestions. See also : Achievement Design , it's an extensive guide on how to design good and interesting achievements. It's not about the technical side but the conceptual.","title":"Planning your Achievement Set"},{"location":"developers/how-to-become-an-achievement-developer/#required-knowledge","text":"Every developer must know at least the basic concepts and techniques shown in these two docs: Getting Started as an Achievement Developer Achievement Logic Features Any aspiring dev must demonstrate understanding of the following concepts: Basic RAM digging (be familiar with the Memory Inspector ) Hexadecimal notation Delta values Hit counts Pause If Reset If Alt Groups Memory sizes: 8-bit and single bit Achievement logic comparisons besides = , such as > , < , != Adding badges to an achievment Creating accurate descriptions for achievements Add appropriate protections Make a stable achievement set Note : You do not need mastery of all these concepts to have a set published, but you do need them to have the full Developer role.","title":"Required Knowledge"},{"location":"developers/how-to-become-an-achievement-developer/#advanced-concepts","text":"Here is a list of some advanced concepts/techniques. They are not required to become a Developer , but are listed here to let the jr-dev know the possibilities of the Achievement's logic. Hit count as timer (like in this example and this one ) ResetIf Checkpoints ResetIf with Hitcount PauseIf with Hitcount AddSource and SubSource Flags AddHits and SubHits Flag Increment counter ( Mem > Delta Counter) Delta Hit Counter, pause technique Little endianness Memory size: Lower4, Upper4 , and 16-bit, 32-bit Dynamic Rich Presence Leaderboards Pausable Resets SubSource increment counter The Real Examples and Achievement Templates pages are useful resources to see how those techniques work.","title":"Advanced Concepts"},{"location":"developers/how-to-become-an-achievement-developer/#code-notes","text":"Non-devs can create and delete code notes that they have created, but they cannot delete or edit any notes created by others. Developers CAN edit and remove notes by other users, and these changes are site-wide.","title":"Code Notes"},{"location":"developers/how-to-become-an-achievement-developer/#practicing","text":"In order to become familiar to those techniques you must practice. You can use any game to practice , even those that already have achievements. Just be aware about these rules: Do NOT delete/overwrite any existing Code Note. On this practicing phase, keep your work in local and do NOT upload any achievement. You'll do it later when you find a game to actually work on.","title":"Practicing"},{"location":"developers/how-to-become-an-achievement-developer/#get-your-work-reviewed","text":"After creating some achievements, upload them to Unofficial and then contact a @mod or @code-reviewer on our Discord server (if you don't use Discord, send a message to RAdmin ) and ask them to find someone to review your work. Do NOT ask another developer to promote your achievements to the Core without a proper review. Again, it's extremely important that you are open to receive constructive criticism and helpful advice from the community at any time .","title":"Get your work reviewed"},{"location":"developers/how-to-become-an-achievement-developer/#am-i-ready-to-get-the-developer-status","text":"Once the Code Reviewers have inspected your achievement's code and concepts, they and the admin will use the \"Required Knowledge\" checklist above to determine if you're ready. If you're not fully qualified to be a developer but but your set is complete and stable the set will get published. You can then ask which concepts you still need to demonstrate proficiency in to be given developer status. The merit of a jr-dev receiving developer status depends on: their ability to publish work that meets the standards of the Developer's Code of Conduct ; demonstration of required knowledge and advanced concepts ; the quality and complexity of their work; the time and thought they put into planning and working on achievements; showing the will to use the Developer status with care and responsibility; the extent to which the points above reflect their capabilities as a developer.","title":"Am I ready to get the Developer status?"},{"location":"developers/how-to-become-an-achievement-developer/#developers-code-of-conduct","text":"Once you get your Developer status, you MUST adhere to the Developer's Code of Conduct . That is extremely important to create a fair environment between the Achievement Developers.","title":"Developer's Code of Conduct"},{"location":"developers/junior-devs/","text":"Junior Developers \u00b6 Stuff about the program","title":"Junior Developers"},{"location":"developers/junior-devs/#junior-developers","text":"Stuff about the program","title":"Junior Developers"},{"location":"developers/leaderboards/","text":"Currently Leaderboards can be edited by developers on the website. It's a pretty hefty interface and a difficult job to get a leaderboard working just right. It genuinely takes some care and attention to get a good leaderboard working, so in this doc we'll try to understand how it works. Overview \u00b6 This is how a game's Leaderboard List looks like on the website: In the center you can see every already made Leaderboard, and in the right column you can see the Code Notes for the game. The Code Notes are here to help with some conditions we'll see below. Here's a brief explanation of each field of a single Leaderboard: Title : the leaderboard's title. Description : the leaderboard's description. Format : specifies how the value should be displayed. \"LowerIsBetter\" checkbox : determines how the list should be sorted. When checked, lower value appear as higher ranks in the leaderboard. Time-based leaderboards usually honor faster times (lower), whereas score-based leaderboards favor higher values. Start : start conditions, aka STA . Cancel : cancel conditions, aka CAN . Submit : submit conditions, aka SUB . Value : a value interpreter, aka VAL . Note : A valid leaderboard MUST have all four of these conditions, even if they're set to always be true ( 1=1 ) or always be false ( 0=1 ). Those last 4 fields are really important and LOTS of care must be taken over the entry of any characters into these strings. That's why they deserve a further explanation: The Start ( STA ) condition is a series of values, like an achievement, that must be true in order to start looking for a leaderboard submission. If a Cancel ( CAN ) condition is true, then it will cancel the leaderboard and no score will be submitted. NOTE: Cancel is given priority over Start. If both become true in the same frame, the leaderboard will not start. If the Submit ( SUB ) condition is true, then the leaderboard score will be submitted. NOTE: Cancel is given priority over Submit. If both become true in the same frame, the score will not be submitted. Finally, the Value ( VAL ) is a special case, and will be taken from memory using the formula stated in the memory box. This is the score that gets displayed while the leaderboard is active, and the value that's submitted if SUB is true. NOTE: Once an active leaderboard is cancelled or submitted, it cannot be reactivated until the Start condition becomes false, then true again. This prevents the leaderboard from immediately reactivating after submission/cancel. Pro-tip: STA , CAN , and SUB support all logic available in the achievement editor . The easiest way to make sure you get them written correctly is to create local achievements that capture the events, then use the Copy Def button to copy the achievement definition to the clipboard so you can paste it into the editor on the website. Address Format \u00b6 The memory addresses for STA/CAN/SUB/VAL have the following format: location/size prefix (the letters can be in lower case) example bit0 0xM 0xM01234 bit1 0xN 0xN01234 bit2 0xO 0xO01234 bit3 0xP 0xP01234 bit4 0xQ 0xQ01234 bit5 0xR 0xR01234 bit6 0xS 0xS01234 bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x01234 24bit 0xW 0xW01234 32bit 0xX 0xX01234 Example \u00b6 The best place to start is to look at one of the existing leaderboards https://retroachievements.org/leaderboardList.php and break it down to see how it works. We're going to use the Green Hill Act 1 (Sonic the Hedgehog) Leaderboard for this purpose. Then let's see how it looks: The Title/Description fields are quite obvious. The Type is \"Time (Frames)\". The value we're tracking updates once a frame, and the Genesis runs at 60 frames per second. (see not below for systems that run at other speeds) The Lower Is Better flag is checked, then the one who makes the shortest time will be the #1 . Now we're going to break down the most important parts. Start Conditions \u00b6 STA : 0xfe10=h0000_0xhf601=h0c_d0xhf601!=h0c_0xfff0=0 0xfe10=h0000 : If 16-bit RAM address 0xfe10 is equivalent to hex 0000, _ : AND, 0xhf601=h0c : If 8-bit RAM address 0xf601 is equivalent to hex 0c, _ : AND, d0xhf601!=h0c : If the previous 8-bit RAM address 0xf601 is NOT equivalent to hex 0c, _ : AND, 0xfff0=0 If 16-bit RAM address 0xfff0 is equivalent to 0. This might seem daunting, because we don't know what these addresses mean. That's why the Code Notes in the right column are pretty handy! You can see how these addresses are labelled in memory. In our example we have: 0xfe10 is the level, and is expected to be 0 (the first level). 0xf601 is an 8-bit memory address, and we use the prefix 0xh instead of 0x to signify this. The 0xf601 is the screen mode. The second and third parts of the start statement are saying \"the current mode should be ingame ( 0c ), and the mode on the previous frame should NOT be ingame \". Note : that d prefix on the address represents delta, or \"the previous frame's value\". Summing up: trigger this if we've JUST arrived in a level (the start of the level, when we want to start testing their time). Finally we also expect 0xfff0 to be equivalent to 0 , because this address is used for demo mode, and we don't want to award a leaderboard entry when the demo is active! Tip : the most common mistake when creating leaderboards is forgetting the h when trying to reference an 8-bit memory address. Note : You can use HitCounts in the Start/Submit/Cancel triggers, but you are responsible for resetting them. These triggers are evaluated every frame, and the state of the leaderboard is dependent on which ones are true. As such, the HitCount will increment even when the leaderboard is not active unless you have an explicit ResetIf condition. Cancel Conditions \u00b6 CAN : 0xhfe13<d0xhfe13 0xfe13 is the number of lives. The cancel section checks if the player's LIVES counter ever becomes lower. Literally, it says \"Cancel if the CURRENT value at 0xfe13 is less than the PREVIOUS value at 0xfe13\". We want to do this because you could reach the final checkpoint and run out of time, resetting your timer to 0:00. We don't want to allow this, because it's not the correct way of completing the level. So if the player dies, we reset their leaderboard progress. Finally, if you connect two cancel conditions with s , the leaderboard will cancel when either one of them are true. Submit Conditions \u00b6 SUB : 0xf7cc!=0_d0xf7cc=0 0xf7cc is the endlevel flag, non-interactive. The submit section checks if the current frame has the 'endlevel' flag set to true (or !=0 , 'nonzero'), and the previous frame (delta) has it set to false (or =0 , 'zero'). This suggests that the player has reached the end of the level, and has proven to be a fairly sturdy benchmark. Tip : it can be useful to watch these values in memory to see how they perform, and what sort of values they end up at in different circumstances. Value \u00b6 Finally, value. Once the player has reached the start condition, they will be shown a popup which remains on-screen, showing their progress so far. If it's a time leaderboard, it will be a clock, and if it's a score, it will just be the value. If they fulfill the cancel condition, they will be told that they have failed, and the popup will be removed. If they successfully reach the submit condition, the current value will be taken and submitted as their score, and on successful submission, an in game popup will inform the player of the leaderboard so far, and their position in the leaderboard. NOTE : The value calculation is performed using 32-bit signed integers. As such, the maximum value is 2147483647 and the minimum value is -2147483648. Values above the maximum will wrap around and register as very negative numbers. The value condition is special in a few ways. It is evaluated constantly and shown on-screen all the time when the leaderboard is active. There is also a symbol which only works in this field. Connecting two value conditions with $ will cause only the one with the highest value to be used. Many games use Binary Coded Decimal to encode scores. You can have the runtime decode BCD values by putting a b prefix in front of the memory reference (i.e. b0xW1234 ) Value from Measured \u00b6 Starting with the 0.77 DLL (and RetroArch 1.8.2), you can use the Measured flag to generate a Value. This supports all logic supported by the achievement editor, but every condition must have a flag that somehow influences the Measured value (i.e. AddSource, AddAddress). VAL : A:0xhfe24_A:0xhfe25*60_M:0xhfe22*3600 The example provided above reads: AddSource 8-bit 0xfe24 AddSource 8-bit 0xfe25 * Value 60 Measured 8-bit 0xfe22 * Value 3600 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database. Value from HitCount \u00b6 Sometimes you want to count the number of times something happens and submit that as the value. You can also do this using Measured syntax. Just add a comparison to your final condition. Do not include an explicit Hit target, or that will be the maximum value that can be submitted. The HitCount on the condition will automatically be set to 0 when the leaderboard starts, and the HitCount will be submitted as the Value when the leaderboard submit trigger activates. You can use PauseIf and ResetIf within the Value conditions to further control the behavior. For example: M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed while the leaderboard was active. N:0xH1234!=20_M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed to something other than 20 while the leaderboard was active. Legacy Syntax: \u00b6 VAL : 0xhfe24*1_0xhfe25*60_0xhfe22*3600 Before the introduction of the Measured flag, Values were written using their own syntax. Some people still prefer this syntax as it's generally easier to do by hand. A legacy value is the sum of a collection of memory values multiplied by modifiers. address*modifier (address times modifier) The _ underscore operator separates the individual values and acts as 'plus'. So the example above represents: 8-bit 0xfe24 times 1, PLUS 8-bit 0xfe25 times 60, PLUS 8-bit 0xfe22 times 3600 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database. To add a constant, use _vN where N is the constant in decimal (i.e. _v10 ) will add 10 to the result. You can also use negative values for N (i.e. _v-10 will subtract 10 from the result. Tip : modifier can be a non-integer value, so if you need to divide by two, you can multiply by 0.5: 0xhfe24*0.5 Value Format \u00b6 'Format' can be any of the available formats , but the editor currently only provides Score , Time (Frames) , Time (Milliseconds) and Value . Time (Frames) is the most common one, and represents a time derived from a value that increments every frame. It does this by multiplying by 100 (to convert to hundredths of a second) and dividing by 60 (the number of frames per second). NOTE : If you're using a system that doesn't run at 60Hz, you have to use \"Time (millisecs)\" and multiply by some value to do the conversion yourself (50Hz = *2 [100/50], 60Hz = *1.666666 [100/60], 75Hz = *1.333333 [100/75]). NOTE : Time (Milliseconds) is actually hundredths of a second, not thousandths of a second. i.e. a Value of 6234 would be 62.34 seconds, not 6.234 seconds. Further help \u00b6 There are unfortunately MANY ways to get this process wrong, so if you are having any trouble feel free to ask for help in our Discord server . If you want to practice, it's highly recommended to create your own leaderboard and attempting something on a new game, rather than using an existing leaderboard. Please remember that these files are pulled directly into someone's game if they decide to play it, and a badly formed memory address or string could cause their emulator to crash, so please test your leaderboard code!","title":"Leaderboards"},{"location":"developers/leaderboards/#overview","text":"This is how a game's Leaderboard List looks like on the website: In the center you can see every already made Leaderboard, and in the right column you can see the Code Notes for the game. The Code Notes are here to help with some conditions we'll see below. Here's a brief explanation of each field of a single Leaderboard: Title : the leaderboard's title. Description : the leaderboard's description. Format : specifies how the value should be displayed. \"LowerIsBetter\" checkbox : determines how the list should be sorted. When checked, lower value appear as higher ranks in the leaderboard. Time-based leaderboards usually honor faster times (lower), whereas score-based leaderboards favor higher values. Start : start conditions, aka STA . Cancel : cancel conditions, aka CAN . Submit : submit conditions, aka SUB . Value : a value interpreter, aka VAL . Note : A valid leaderboard MUST have all four of these conditions, even if they're set to always be true ( 1=1 ) or always be false ( 0=1 ). Those last 4 fields are really important and LOTS of care must be taken over the entry of any characters into these strings. That's why they deserve a further explanation: The Start ( STA ) condition is a series of values, like an achievement, that must be true in order to start looking for a leaderboard submission. If a Cancel ( CAN ) condition is true, then it will cancel the leaderboard and no score will be submitted. NOTE: Cancel is given priority over Start. If both become true in the same frame, the leaderboard will not start. If the Submit ( SUB ) condition is true, then the leaderboard score will be submitted. NOTE: Cancel is given priority over Submit. If both become true in the same frame, the score will not be submitted. Finally, the Value ( VAL ) is a special case, and will be taken from memory using the formula stated in the memory box. This is the score that gets displayed while the leaderboard is active, and the value that's submitted if SUB is true. NOTE: Once an active leaderboard is cancelled or submitted, it cannot be reactivated until the Start condition becomes false, then true again. This prevents the leaderboard from immediately reactivating after submission/cancel. Pro-tip: STA , CAN , and SUB support all logic available in the achievement editor . The easiest way to make sure you get them written correctly is to create local achievements that capture the events, then use the Copy Def button to copy the achievement definition to the clipboard so you can paste it into the editor on the website.","title":"Overview"},{"location":"developers/leaderboards/#address-format","text":"The memory addresses for STA/CAN/SUB/VAL have the following format: location/size prefix (the letters can be in lower case) example bit0 0xM 0xM01234 bit1 0xN 0xN01234 bit2 0xO 0xO01234 bit3 0xP 0xP01234 bit4 0xQ 0xQ01234 bit5 0xR 0xR01234 bit6 0xS 0xS01234 bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x01234 24bit 0xW 0xW01234 32bit 0xX 0xX01234","title":"Address Format"},{"location":"developers/leaderboards/#example","text":"The best place to start is to look at one of the existing leaderboards https://retroachievements.org/leaderboardList.php and break it down to see how it works. We're going to use the Green Hill Act 1 (Sonic the Hedgehog) Leaderboard for this purpose. Then let's see how it looks: The Title/Description fields are quite obvious. The Type is \"Time (Frames)\". The value we're tracking updates once a frame, and the Genesis runs at 60 frames per second. (see not below for systems that run at other speeds) The Lower Is Better flag is checked, then the one who makes the shortest time will be the #1 . Now we're going to break down the most important parts.","title":"Example"},{"location":"developers/leaderboards/#start-conditions","text":"STA : 0xfe10=h0000_0xhf601=h0c_d0xhf601!=h0c_0xfff0=0 0xfe10=h0000 : If 16-bit RAM address 0xfe10 is equivalent to hex 0000, _ : AND, 0xhf601=h0c : If 8-bit RAM address 0xf601 is equivalent to hex 0c, _ : AND, d0xhf601!=h0c : If the previous 8-bit RAM address 0xf601 is NOT equivalent to hex 0c, _ : AND, 0xfff0=0 If 16-bit RAM address 0xfff0 is equivalent to 0. This might seem daunting, because we don't know what these addresses mean. That's why the Code Notes in the right column are pretty handy! You can see how these addresses are labelled in memory. In our example we have: 0xfe10 is the level, and is expected to be 0 (the first level). 0xf601 is an 8-bit memory address, and we use the prefix 0xh instead of 0x to signify this. The 0xf601 is the screen mode. The second and third parts of the start statement are saying \"the current mode should be ingame ( 0c ), and the mode on the previous frame should NOT be ingame \". Note : that d prefix on the address represents delta, or \"the previous frame's value\". Summing up: trigger this if we've JUST arrived in a level (the start of the level, when we want to start testing their time). Finally we also expect 0xfff0 to be equivalent to 0 , because this address is used for demo mode, and we don't want to award a leaderboard entry when the demo is active! Tip : the most common mistake when creating leaderboards is forgetting the h when trying to reference an 8-bit memory address. Note : You can use HitCounts in the Start/Submit/Cancel triggers, but you are responsible for resetting them. These triggers are evaluated every frame, and the state of the leaderboard is dependent on which ones are true. As such, the HitCount will increment even when the leaderboard is not active unless you have an explicit ResetIf condition.","title":"Start Conditions"},{"location":"developers/leaderboards/#cancel-conditions","text":"CAN : 0xhfe13<d0xhfe13 0xfe13 is the number of lives. The cancel section checks if the player's LIVES counter ever becomes lower. Literally, it says \"Cancel if the CURRENT value at 0xfe13 is less than the PREVIOUS value at 0xfe13\". We want to do this because you could reach the final checkpoint and run out of time, resetting your timer to 0:00. We don't want to allow this, because it's not the correct way of completing the level. So if the player dies, we reset their leaderboard progress. Finally, if you connect two cancel conditions with s , the leaderboard will cancel when either one of them are true.","title":"Cancel Conditions"},{"location":"developers/leaderboards/#submit-conditions","text":"SUB : 0xf7cc!=0_d0xf7cc=0 0xf7cc is the endlevel flag, non-interactive. The submit section checks if the current frame has the 'endlevel' flag set to true (or !=0 , 'nonzero'), and the previous frame (delta) has it set to false (or =0 , 'zero'). This suggests that the player has reached the end of the level, and has proven to be a fairly sturdy benchmark. Tip : it can be useful to watch these values in memory to see how they perform, and what sort of values they end up at in different circumstances.","title":"Submit Conditions"},{"location":"developers/leaderboards/#value","text":"Finally, value. Once the player has reached the start condition, they will be shown a popup which remains on-screen, showing their progress so far. If it's a time leaderboard, it will be a clock, and if it's a score, it will just be the value. If they fulfill the cancel condition, they will be told that they have failed, and the popup will be removed. If they successfully reach the submit condition, the current value will be taken and submitted as their score, and on successful submission, an in game popup will inform the player of the leaderboard so far, and their position in the leaderboard. NOTE : The value calculation is performed using 32-bit signed integers. As such, the maximum value is 2147483647 and the minimum value is -2147483648. Values above the maximum will wrap around and register as very negative numbers. The value condition is special in a few ways. It is evaluated constantly and shown on-screen all the time when the leaderboard is active. There is also a symbol which only works in this field. Connecting two value conditions with $ will cause only the one with the highest value to be used. Many games use Binary Coded Decimal to encode scores. You can have the runtime decode BCD values by putting a b prefix in front of the memory reference (i.e. b0xW1234 )","title":"Value"},{"location":"developers/leaderboards/#value-from-measured","text":"Starting with the 0.77 DLL (and RetroArch 1.8.2), you can use the Measured flag to generate a Value. This supports all logic supported by the achievement editor, but every condition must have a flag that somehow influences the Measured value (i.e. AddSource, AddAddress). VAL : A:0xhfe24_A:0xhfe25*60_M:0xhfe22*3600 The example provided above reads: AddSource 8-bit 0xfe24 AddSource 8-bit 0xfe25 * Value 60 Measured 8-bit 0xfe22 * Value 3600 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database.","title":"Value from Measured"},{"location":"developers/leaderboards/#value-from-hitcount","text":"Sometimes you want to count the number of times something happens and submit that as the value. You can also do this using Measured syntax. Just add a comparison to your final condition. Do not include an explicit Hit target, or that will be the maximum value that can be submitted. The HitCount on the condition will automatically be set to 0 when the leaderboard starts, and the HitCount will be submitted as the Value when the leaderboard submit trigger activates. You can use PauseIf and ResetIf within the Value conditions to further control the behavior. For example: M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed while the leaderboard was active. N:0xH1234!=20_M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed to something other than 20 while the leaderboard was active.","title":"Value from HitCount"},{"location":"developers/leaderboards/#legacy-syntax","text":"VAL : 0xhfe24*1_0xhfe25*60_0xhfe22*3600 Before the introduction of the Measured flag, Values were written using their own syntax. Some people still prefer this syntax as it's generally easier to do by hand. A legacy value is the sum of a collection of memory values multiplied by modifiers. address*modifier (address times modifier) The _ underscore operator separates the individual values and acts as 'plus'. So the example above represents: 8-bit 0xfe24 times 1, PLUS 8-bit 0xfe25 times 60, PLUS 8-bit 0xfe22 times 3600 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database. To add a constant, use _vN where N is the constant in decimal (i.e. _v10 ) will add 10 to the result. You can also use negative values for N (i.e. _v-10 will subtract 10 from the result. Tip : modifier can be a non-integer value, so if you need to divide by two, you can multiply by 0.5: 0xhfe24*0.5","title":"Legacy Syntax:"},{"location":"developers/leaderboards/#value-format","text":"'Format' can be any of the available formats , but the editor currently only provides Score , Time (Frames) , Time (Milliseconds) and Value . Time (Frames) is the most common one, and represents a time derived from a value that increments every frame. It does this by multiplying by 100 (to convert to hundredths of a second) and dividing by 60 (the number of frames per second). NOTE : If you're using a system that doesn't run at 60Hz, you have to use \"Time (millisecs)\" and multiply by some value to do the conversion yourself (50Hz = *2 [100/50], 60Hz = *1.666666 [100/60], 75Hz = *1.333333 [100/75]). NOTE : Time (Milliseconds) is actually hundredths of a second, not thousandths of a second. i.e. a Value of 6234 would be 62.34 seconds, not 6.234 seconds.","title":"Value Format"},{"location":"developers/leaderboards/#further-help","text":"There are unfortunately MANY ways to get this process wrong, so if you are having any trouble feel free to ask for help in our Discord server . If you want to practice, it's highly recommended to create your own leaderboard and attempting something on a new game, rather than using an existing leaderboard. Please remember that these files are pulled directly into someone's game if they decide to play it, and a badly formed memory address or string could cause their emulator to crash, so please test your leaderboard code!","title":"Further help"},{"location":"developers/logic-examples/","text":"Flags \u00b6 Pause If Reset If Reset Next If Add Source Sub Source Add Hits Sub Hits Add Address Indirect Pointers Direct Pointers And Next Multi-Condition Counters and Checkpoints Multi-Condition Resets and Pauses Or Next Measured Measured If Trigger Types \u00b6 Mem Value Delta Mem > Delta Comparisons Prior BCD Float Sizes \u00b6 bit0 - bit7 8-Bit 16-Bit 24-Bit 32-Bit Lower4 and Upper4 16-Bit BE 24-Bit BE 32-Bit BE BitCount Float MBF32 General Comparisons \u00b6 = < <= > >= != Flag Specific Comparisons \u00b6 * / & Other Toolkit Features \u00b6 Hit Counts Using with Reset If Using with Pause If Alt Groups Protections \u00b6 Demo Protection Finding and testing demo addresses Save Protection Delta and Prior Using in-game timers Using event flags Password Protection Cheat Protection Multiplayer Protection Other Dipswitch BIOS (PlayStation and Saturn) Logic Tips and Tricks \u00b6 Checkpoints hits Pause Locks Using Hit Counts as a timer Using Delta Values and Hit Counts to Detect an Increment Circumvent the Problem of a Counter Incrementing Twice in the Same Frame note: need to add something about how the toolkit still uses hex even if the value is in BCD Various types of chains When to use Reset If or Pause If When to use Delta or Prior Using BitCount for collectables Using Add Source with Mem / Mem comparisons Creating a Timer with Reset If hits based on the speed of the game Using bit0 to include or exclude odd-numbered values Lesser-Known Features \u00b6 Double-Clicking bitflags while in 8-bit view Right-Clicking addresses in the editor to jump to them in the Memory Inspector (also works with offsets to jump to the current address) Highlighting conditions and holding CTRL while clicking to change a field in multiple conditions at once Workflow Tips \u00b6 Using Google Sheets and Notepad++ Editing local file Things to Avoid and Why \u00b6 Redundant Reset Ifs Single-Condition achievements Text-Based addresses See Also \u00b6 Point Distribution Badge Creation Rich Presence Leaderboards RATools Making Tutorial Videos Syntax Table","title":"Logic Examples"},{"location":"developers/logic-examples/#flags","text":"Pause If Reset If Reset Next If Add Source Sub Source Add Hits Sub Hits Add Address Indirect Pointers Direct Pointers And Next Multi-Condition Counters and Checkpoints Multi-Condition Resets and Pauses Or Next Measured Measured If Trigger","title":"Flags"},{"location":"developers/logic-examples/#types","text":"Mem Value Delta Mem > Delta Comparisons Prior BCD Float","title":"Types"},{"location":"developers/logic-examples/#sizes","text":"bit0 - bit7 8-Bit 16-Bit 24-Bit 32-Bit Lower4 and Upper4 16-Bit BE 24-Bit BE 32-Bit BE BitCount Float MBF32","title":"Sizes"},{"location":"developers/logic-examples/#general-comparisons","text":"= < <= > >= !=","title":"General Comparisons"},{"location":"developers/logic-examples/#flag-specific-comparisons","text":"* / &","title":"Flag Specific Comparisons"},{"location":"developers/logic-examples/#other-toolkit-features","text":"Hit Counts Using with Reset If Using with Pause If Alt Groups","title":"Other Toolkit Features"},{"location":"developers/logic-examples/#protections","text":"Demo Protection Finding and testing demo addresses Save Protection Delta and Prior Using in-game timers Using event flags Password Protection Cheat Protection Multiplayer Protection Other Dipswitch BIOS (PlayStation and Saturn)","title":"Protections"},{"location":"developers/logic-examples/#logic-tips-and-tricks","text":"Checkpoints hits Pause Locks Using Hit Counts as a timer Using Delta Values and Hit Counts to Detect an Increment Circumvent the Problem of a Counter Incrementing Twice in the Same Frame note: need to add something about how the toolkit still uses hex even if the value is in BCD Various types of chains When to use Reset If or Pause If When to use Delta or Prior Using BitCount for collectables Using Add Source with Mem / Mem comparisons Creating a Timer with Reset If hits based on the speed of the game Using bit0 to include or exclude odd-numbered values","title":"Logic Tips and Tricks"},{"location":"developers/logic-examples/#lesser-known-features","text":"Double-Clicking bitflags while in 8-bit view Right-Clicking addresses in the editor to jump to them in the Memory Inspector (also works with offsets to jump to the current address) Highlighting conditions and holding CTRL while clicking to change a field in multiple conditions at once","title":"Lesser-Known Features"},{"location":"developers/logic-examples/#workflow-tips","text":"Using Google Sheets and Notepad++ Editing local file","title":"Workflow Tips"},{"location":"developers/logic-examples/#things-to-avoid-and-why","text":"Redundant Reset Ifs Single-Condition achievements Text-Based addresses","title":"Things to Avoid and Why"},{"location":"developers/logic-examples/#see-also","text":"Point Distribution Badge Creation Rich Presence Leaderboards RATools Making Tutorial Videos Syntax Table","title":"See Also"},{"location":"developers/memory-inspector-overview/","text":"Here is an overview of the Memory Inspector and its features. This tool can be found on \"RetroAchievements\" menu on any emulator integrated with RA. See also : Memory Digging Tips . Memory Inspector Dialog \u00b6 1. New Search \u00b6 This is the first thing you must do when you're looking for something in the memory. The first drop down allows you to quick select All memory, System RAM, or Cartridge RAM. The field below the first drop down lets you type in a custom range (i.e. 0x10000-0x100FF). The second drop down specifies the size of the data you're interested in finding. The Reset button clears out any previously captured results (part 3 of the dialog) and captures the current memory state. 2. Filter \u00b6 Filters the memory state in an attempt to locate a specific memory address. The first drop down allows you to specify the comparison to use. The second drop down is what you're comparing against. Most of the time you're going to be filtering on != Last Value , which eliminates any results where the memory has changed. The available comparisons are: Constant - comparison is made against the value entered in the field below the drop down. Last Value - comparison is made against the value captured by the last applied filter, or the initial value if no filter has been applied Last Value Plus - comparison is made against the Last Value plus the value entered in the field below the drop down. If the value were 3, the comparison would me made against a number which is three higher than the Last Value for each value captured by the last applied filter. Last Value Minus - the same as Last Value Plus, except the value entered in the field below the drop down is subtracted from each value captured by the last applied filter. Initial Value - comparison is made against the value captured when the New Search was begun. The Filter Once button immediately applies the selected filter and updates the Results. The Continuous Filter button applies the selected filter repeatedly until stopped. The fewer the results, the more frequently the filter is applied. The filter is only applied once every N ms, where N is the number of results / 1000. If there are less than 1000 results, it's applied every frame. If there are 50000 results, it's applied every 500ms (twice a second). If there are 1000000 results, it's only applied every 10 seconds. 3. Results \u00b6 As filtering is applied, the list of potential matches will appear here. On the left side is information about the results, including the number of matches, the filter applied, and how many filters have been applied. If you believe you have applied a filter incorrectly, or the filter results in no matches, you can use the << button to return to the previous set of results. You can do this all the way back to the initial results. Similarly, you can use the >> button to return to results you have backed out of. Once you apply a new filter, the forward filters are discarded and the >> button is disabled. Below the result information are two buttons. The first allows you to manually remove the selected items from the result set. You can use Ctrl and Shift to select multiple items. The second lets you create a bookmark for an item in the result set. It will appear in the Bookmarks dialog. The items in the result set show the address of the match, the current value, and a brief description of the memory at the address. If a code note exists for the address, it will be shown. Otherwise, a general classification of the address will be shown. Additionally, items in the result set can be colored. Red - the item does not currently match the filter Grey - the item does currently match the filter, but at some point since the filter was applied it did not match. Green - the item is bookmarked Blue - the item has a code note Clicking on a row will set the selected address to the associated item. 4. Code Notes \u00b6 Provides detailed information about the selected address, and allows the user to annotate addresses found by the search process. Try to keep your descriptions simple and clear, so they can be easily understood. Clear notes are important for debugging if a problem with an achievement occurs. The text field shows the currently selected address from the memory view (part 5 of the dialog). You can manually type in any address, or use the up and down arrows to jump to the next or previous address that have a code note. Just to the right of the text field is a button that opens the Code Notes dialog, which allows you to browse and search through the code notes. Below the text field is a button that will create a bookmark from the selected address. The large text area is where you can modify the code note for the selected address. NOTE: the changes are not saved unless you press the Save Note button. If you change the selected address without saving, the changes will be lost. Save Note and Delete immediately attempt to update the server - either with the modified note text, or by clearing out the note text. 5. Memory View \u00b6 Allows direct browsing of the memory. The memory updates once per frame as the emulator runs. The currently selected address appears in red. Addresses with code notes show up blue, and addresses associated to bookmarks show up green. You can click on any piece of data in the memory viewer to jump to the associated address. You can also use the keyboard to navigation around in memory (up/down/left/right/pgup/pgdn/home/end). When the memory viewer is focused, a cursor will be visible. You can type any hexadecimal character to change the character at the cursor to another value. This immediately changes the value for the emulator, and may cause unexpected behavior, so use at your own risk. Additionally, modifying memory (through any of the tools) prevents achievements from being unlocked on the server as an anti-cheat mechanism. Memory Bookmarks \u00b6 You can open the Memory Bookmarks dialog from the RetroAchievements menu. It will also automatically open when adding a bookmark from either of the buttons on the Memory Inspector dialog. With this, you can view multiple designated addresses at once instead of having to shuffle around in the Inspector. Bookmarked addresses will show in the Memory Inspector as green. If you double-click on an address, you can move straight to that address in the Memory Inspector. The bookmarks can be renamed by clicking their description. This does not update the code note for the associated address. You can change the size or format of a bookmark by clicking on the field and selecting a new value from the dropdown. Clicking on the value field will allow you to enter a new value for the bookmark. It will automatically be written to the memory. From here you can also Freeze any bookmarks. This is helpful for things like health or consumables. Keep in mind, freezing occurs 1 frame after gameplay. This means that even when frozen, the value will change for at least one frame before returning to the frozen value. Frozen bookmarks will be displayed as yellow. Reading data in the Memory Viewer \u00b6 Decimal, Binary and Hexadecimal notations \u00b6 To work well with the Memory Viewer, it's important to understand at least the basics of binary and hexadecimal numeral notations. Here are good sources of information about this matter without going into extreme details: https://simple.wikipedia.org/wiki/Binary_number https://simple.wikipedia.org/wiki/Hexadecimal_numeral_system The digits used in binary system are 0 and 1 . A binary digit is also known as bit . Eight bits is also known as one byte . The digits used in hexadecimal system are 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , A , B , C , D , E and F . The hexadecimal notation is also known as hex . The main reasons for the existence of these 2 notations, besides the traditional decimal notation, are: Decimal notation is what humans understand. Binary notation is what computers \"understand\". Hexadecimal notation can be seen as a middle ground between binary and decimal. Because a single hexadecimal digit represents 4 bits, then a shorter and more understandable notation for humans to work in a way that the computer \"understands\". The table below shows the different notations for equivalent values. Decimal Hexadecimal Binary 0 0x0 0000 1 0x1 0001 2 0x2 0010 3 0x3 0011 4 0x4 0100 5 0x5 0101 6 0x6 0110 7 0x7 0111 8 0x8 1000 9 0x9 1001 10 0xA 1010 11 0xB 1011 12 0xC 1100 13 0xD 1101 14 0xE 1110 15 0xF 1111 More facts about the different number notations: To indicate a value is written in hexadecimal, the prefix 0x is used: 0x10 = 16 , 10 = 10 . Two hex digits represent 8 bits and can range from 0 to 255 . Four hex digits represent 16 bits and can range 0 to 65535 . Eight hex digits represent 32 bits and can range from 0 to 4294967295 . Memory Viewer modes \u00b6 The bottom part of the Memory Inspector is what we call the Memory Viewer: You can see data in Memory Viewer using 8, 16 or 32-bit modes. 8-bit mode \u00b6 By default, the Memory Viewer shows data in 8-bit mode. This displays each byte of memory as a separate two-character hexadecimal value. And each byte has its own address. Sixteen bytes are shown per line. The address of a byte can be determined by adding the row index (displayed to the left of the viewer) to the column index (displayed above the viewer). Using the image above as an example, the cursor is at 0x002a7 ( 0x002a0 + 7 ). 16/32-bit mode \u00b6 Before we talk about 16-bit mode and 32-bit mode, it's important to know about endianness: Endianness \u00b6 Endianness describes the order in which a sequence of bytes are stored in computer systems memory. The two most common types are: Big-Endian (also known as BE) and Little-Endian (also known as LE). In the Big-Endian order the \"big end\" of the number (most significant value in the sequence) is stored first (placed at the lowest address). In the image below you see the number 0x12345678 stored at the address 0x100 in the big-endian order. Notice that the most significant byte 0x12 is at the address 0x100 : In the Little-Endian order the \"little end\" of the number (least significant value in the sequence) is stored first. In the image below you see the number 0x12345678 stored at the address 0x100 in the little-endian order. Notice that the least significant byte 0x78 is at the address 0x100 : Values that need more then 8-bits (in other words: larger than 255) have to be stored in multiple bytes. However, the emulated systems we use store multi-byte values in little-endian order. In the image of the Memory Viewer above you can see that at address 0x0002c0 we have the hex value ce and in 0x0002c1 the value is 39 . When you switch the viewer to 16-bit mode, the ce and 39 values are grouped at 0x0002c0 and get displayed as 39ce . This happens because it automatically groups every two bytes and displays them as 16-bit hex values. NOTE : While 16-bit values are usually aligned to even addresses, that's not always the case. There's actually a non-displayed 16-bit value at 0x0002c1 . Since the value at 0x0002c1 is 39 and the value at 0x0002c2 is 29 , the 16-bit value at 0x0002c1 address is 0x2939 . Similarly, in 32-bit mode, the four bytes from 0x0002c0 to 0x0002c3 are displayed as a single 32-bit value 0x252939ce at address 0x0002c0 , but there are also 32-bit values at 0x0002c1 , 0x0002c2 , and 0x0002c3 . Working with sizes smaller than 8-bit \u00b6 In addition to the 8-bit, 16-bit and 32-bit sizes described above, there are additional sizes that can be used when writing achievements (in the Achievement Editor). Single bits \u00b6 In the memory viewer when an 8-bit address is selected you will see something like the image below (in the image: a byte with the value 6f is selected; the bits are highlighted with an orange circle): It is very common in games to store important information as a single bit. As a bit can only have two possible values ( 1 or 0 ), sometimes it's used to mean \"yes\" or \"no\", \"on\" or \"off\", \"have item\" or \"no item\", etc. Some games, specially those with limited memory space, use bit switches a lot. Important: You can refer to each one of those bits individually in the Achievement Editor. Common meaning of bit switches in a game memory: have an item button pressed (very common) area explored in game trigger activated cheat activated in demo mode In the memory viewer you can only input hex values, then it's important to know equivalence of values between hex and binary notations. You can see the table in the \" Decimal, Binary and Hexadecimal notations \" section, but the usual is to use a calculator (the default calculator on MS Windows on the programmer view can do the job). Upper4 and Lower4 \u00b6 Upper4 is the upper four bits of a byte (bit: 7, 6, 5, 4), displayed as a single hexadecimal character. Lower4 is the lower four bits of a byte (bit: 3, 2, 1, 0), displayed as a single hexadecimal character. Looking at the memory size diagram below, a byte at address 0x00a274 is selected (value 0x23 ). The first character, 2 is the Upper4 value. The second character 3 is the Lower4 value. Occasionally you will only be interested working with a single hexadecimal digit. Using the memory size diagram as an example, an achievement condition where Upper4 0x00a274 = 0x2 would be true. A condition where Lower4 0x00a274 = 0x3 would be true. Memory Sizes diagram \u00b6","title":"Memory Inspector Overview"},{"location":"developers/memory-inspector-overview/#memory-inspector-dialog","text":"","title":"Memory Inspector Dialog"},{"location":"developers/memory-inspector-overview/#1-new-search","text":"This is the first thing you must do when you're looking for something in the memory. The first drop down allows you to quick select All memory, System RAM, or Cartridge RAM. The field below the first drop down lets you type in a custom range (i.e. 0x10000-0x100FF). The second drop down specifies the size of the data you're interested in finding. The Reset button clears out any previously captured results (part 3 of the dialog) and captures the current memory state.","title":"1. New Search"},{"location":"developers/memory-inspector-overview/#2-filter","text":"Filters the memory state in an attempt to locate a specific memory address. The first drop down allows you to specify the comparison to use. The second drop down is what you're comparing against. Most of the time you're going to be filtering on != Last Value , which eliminates any results where the memory has changed. The available comparisons are: Constant - comparison is made against the value entered in the field below the drop down. Last Value - comparison is made against the value captured by the last applied filter, or the initial value if no filter has been applied Last Value Plus - comparison is made against the Last Value plus the value entered in the field below the drop down. If the value were 3, the comparison would me made against a number which is three higher than the Last Value for each value captured by the last applied filter. Last Value Minus - the same as Last Value Plus, except the value entered in the field below the drop down is subtracted from each value captured by the last applied filter. Initial Value - comparison is made against the value captured when the New Search was begun. The Filter Once button immediately applies the selected filter and updates the Results. The Continuous Filter button applies the selected filter repeatedly until stopped. The fewer the results, the more frequently the filter is applied. The filter is only applied once every N ms, where N is the number of results / 1000. If there are less than 1000 results, it's applied every frame. If there are 50000 results, it's applied every 500ms (twice a second). If there are 1000000 results, it's only applied every 10 seconds.","title":"2. Filter"},{"location":"developers/memory-inspector-overview/#3-results","text":"As filtering is applied, the list of potential matches will appear here. On the left side is information about the results, including the number of matches, the filter applied, and how many filters have been applied. If you believe you have applied a filter incorrectly, or the filter results in no matches, you can use the << button to return to the previous set of results. You can do this all the way back to the initial results. Similarly, you can use the >> button to return to results you have backed out of. Once you apply a new filter, the forward filters are discarded and the >> button is disabled. Below the result information are two buttons. The first allows you to manually remove the selected items from the result set. You can use Ctrl and Shift to select multiple items. The second lets you create a bookmark for an item in the result set. It will appear in the Bookmarks dialog. The items in the result set show the address of the match, the current value, and a brief description of the memory at the address. If a code note exists for the address, it will be shown. Otherwise, a general classification of the address will be shown. Additionally, items in the result set can be colored. Red - the item does not currently match the filter Grey - the item does currently match the filter, but at some point since the filter was applied it did not match. Green - the item is bookmarked Blue - the item has a code note Clicking on a row will set the selected address to the associated item.","title":"3. Results"},{"location":"developers/memory-inspector-overview/#4-code-notes","text":"Provides detailed information about the selected address, and allows the user to annotate addresses found by the search process. Try to keep your descriptions simple and clear, so they can be easily understood. Clear notes are important for debugging if a problem with an achievement occurs. The text field shows the currently selected address from the memory view (part 5 of the dialog). You can manually type in any address, or use the up and down arrows to jump to the next or previous address that have a code note. Just to the right of the text field is a button that opens the Code Notes dialog, which allows you to browse and search through the code notes. Below the text field is a button that will create a bookmark from the selected address. The large text area is where you can modify the code note for the selected address. NOTE: the changes are not saved unless you press the Save Note button. If you change the selected address without saving, the changes will be lost. Save Note and Delete immediately attempt to update the server - either with the modified note text, or by clearing out the note text.","title":"4. Code Notes"},{"location":"developers/memory-inspector-overview/#5-memory-view","text":"Allows direct browsing of the memory. The memory updates once per frame as the emulator runs. The currently selected address appears in red. Addresses with code notes show up blue, and addresses associated to bookmarks show up green. You can click on any piece of data in the memory viewer to jump to the associated address. You can also use the keyboard to navigation around in memory (up/down/left/right/pgup/pgdn/home/end). When the memory viewer is focused, a cursor will be visible. You can type any hexadecimal character to change the character at the cursor to another value. This immediately changes the value for the emulator, and may cause unexpected behavior, so use at your own risk. Additionally, modifying memory (through any of the tools) prevents achievements from being unlocked on the server as an anti-cheat mechanism.","title":"5. Memory View"},{"location":"developers/memory-inspector-overview/#memory-bookmarks","text":"You can open the Memory Bookmarks dialog from the RetroAchievements menu. It will also automatically open when adding a bookmark from either of the buttons on the Memory Inspector dialog. With this, you can view multiple designated addresses at once instead of having to shuffle around in the Inspector. Bookmarked addresses will show in the Memory Inspector as green. If you double-click on an address, you can move straight to that address in the Memory Inspector. The bookmarks can be renamed by clicking their description. This does not update the code note for the associated address. You can change the size or format of a bookmark by clicking on the field and selecting a new value from the dropdown. Clicking on the value field will allow you to enter a new value for the bookmark. It will automatically be written to the memory. From here you can also Freeze any bookmarks. This is helpful for things like health or consumables. Keep in mind, freezing occurs 1 frame after gameplay. This means that even when frozen, the value will change for at least one frame before returning to the frozen value. Frozen bookmarks will be displayed as yellow.","title":"Memory Bookmarks"},{"location":"developers/memory-inspector-overview/#reading-data-in-the-memory-viewer","text":"","title":"Reading data in the Memory Viewer"},{"location":"developers/memory-inspector-overview/#decimal-binary-and-hexadecimal-notations","text":"To work well with the Memory Viewer, it's important to understand at least the basics of binary and hexadecimal numeral notations. Here are good sources of information about this matter without going into extreme details: https://simple.wikipedia.org/wiki/Binary_number https://simple.wikipedia.org/wiki/Hexadecimal_numeral_system The digits used in binary system are 0 and 1 . A binary digit is also known as bit . Eight bits is also known as one byte . The digits used in hexadecimal system are 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , A , B , C , D , E and F . The hexadecimal notation is also known as hex . The main reasons for the existence of these 2 notations, besides the traditional decimal notation, are: Decimal notation is what humans understand. Binary notation is what computers \"understand\". Hexadecimal notation can be seen as a middle ground between binary and decimal. Because a single hexadecimal digit represents 4 bits, then a shorter and more understandable notation for humans to work in a way that the computer \"understands\". The table below shows the different notations for equivalent values. Decimal Hexadecimal Binary 0 0x0 0000 1 0x1 0001 2 0x2 0010 3 0x3 0011 4 0x4 0100 5 0x5 0101 6 0x6 0110 7 0x7 0111 8 0x8 1000 9 0x9 1001 10 0xA 1010 11 0xB 1011 12 0xC 1100 13 0xD 1101 14 0xE 1110 15 0xF 1111 More facts about the different number notations: To indicate a value is written in hexadecimal, the prefix 0x is used: 0x10 = 16 , 10 = 10 . Two hex digits represent 8 bits and can range from 0 to 255 . Four hex digits represent 16 bits and can range 0 to 65535 . Eight hex digits represent 32 bits and can range from 0 to 4294967295 .","title":"Decimal, Binary and Hexadecimal notations"},{"location":"developers/memory-inspector-overview/#memory-viewer-modes","text":"The bottom part of the Memory Inspector is what we call the Memory Viewer: You can see data in Memory Viewer using 8, 16 or 32-bit modes.","title":"Memory Viewer modes"},{"location":"developers/memory-inspector-overview/#8-bit-mode","text":"By default, the Memory Viewer shows data in 8-bit mode. This displays each byte of memory as a separate two-character hexadecimal value. And each byte has its own address. Sixteen bytes are shown per line. The address of a byte can be determined by adding the row index (displayed to the left of the viewer) to the column index (displayed above the viewer). Using the image above as an example, the cursor is at 0x002a7 ( 0x002a0 + 7 ).","title":"8-bit mode"},{"location":"developers/memory-inspector-overview/#1632-bit-mode","text":"Before we talk about 16-bit mode and 32-bit mode, it's important to know about endianness:","title":"16/32-bit mode"},{"location":"developers/memory-inspector-overview/#endianness","text":"Endianness describes the order in which a sequence of bytes are stored in computer systems memory. The two most common types are: Big-Endian (also known as BE) and Little-Endian (also known as LE). In the Big-Endian order the \"big end\" of the number (most significant value in the sequence) is stored first (placed at the lowest address). In the image below you see the number 0x12345678 stored at the address 0x100 in the big-endian order. Notice that the most significant byte 0x12 is at the address 0x100 : In the Little-Endian order the \"little end\" of the number (least significant value in the sequence) is stored first. In the image below you see the number 0x12345678 stored at the address 0x100 in the little-endian order. Notice that the least significant byte 0x78 is at the address 0x100 : Values that need more then 8-bits (in other words: larger than 255) have to be stored in multiple bytes. However, the emulated systems we use store multi-byte values in little-endian order. In the image of the Memory Viewer above you can see that at address 0x0002c0 we have the hex value ce and in 0x0002c1 the value is 39 . When you switch the viewer to 16-bit mode, the ce and 39 values are grouped at 0x0002c0 and get displayed as 39ce . This happens because it automatically groups every two bytes and displays them as 16-bit hex values. NOTE : While 16-bit values are usually aligned to even addresses, that's not always the case. There's actually a non-displayed 16-bit value at 0x0002c1 . Since the value at 0x0002c1 is 39 and the value at 0x0002c2 is 29 , the 16-bit value at 0x0002c1 address is 0x2939 . Similarly, in 32-bit mode, the four bytes from 0x0002c0 to 0x0002c3 are displayed as a single 32-bit value 0x252939ce at address 0x0002c0 , but there are also 32-bit values at 0x0002c1 , 0x0002c2 , and 0x0002c3 .","title":"Endianness"},{"location":"developers/memory-inspector-overview/#working-with-sizes-smaller-than-8-bit","text":"In addition to the 8-bit, 16-bit and 32-bit sizes described above, there are additional sizes that can be used when writing achievements (in the Achievement Editor).","title":"Working with sizes smaller than 8-bit"},{"location":"developers/memory-inspector-overview/#single-bits","text":"In the memory viewer when an 8-bit address is selected you will see something like the image below (in the image: a byte with the value 6f is selected; the bits are highlighted with an orange circle): It is very common in games to store important information as a single bit. As a bit can only have two possible values ( 1 or 0 ), sometimes it's used to mean \"yes\" or \"no\", \"on\" or \"off\", \"have item\" or \"no item\", etc. Some games, specially those with limited memory space, use bit switches a lot. Important: You can refer to each one of those bits individually in the Achievement Editor. Common meaning of bit switches in a game memory: have an item button pressed (very common) area explored in game trigger activated cheat activated in demo mode In the memory viewer you can only input hex values, then it's important to know equivalence of values between hex and binary notations. You can see the table in the \" Decimal, Binary and Hexadecimal notations \" section, but the usual is to use a calculator (the default calculator on MS Windows on the programmer view can do the job).","title":"Single bits"},{"location":"developers/memory-inspector-overview/#upper4-and-lower4","text":"Upper4 is the upper four bits of a byte (bit: 7, 6, 5, 4), displayed as a single hexadecimal character. Lower4 is the lower four bits of a byte (bit: 3, 2, 1, 0), displayed as a single hexadecimal character. Looking at the memory size diagram below, a byte at address 0x00a274 is selected (value 0x23 ). The first character, 2 is the Upper4 value. The second character 3 is the Lower4 value. Occasionally you will only be interested working with a single hexadecimal digit. Using the memory size diagram as an example, an achievement condition where Upper4 0x00a274 = 0x2 would be true. A condition where Lower4 0x00a274 = 0x3 would be true.","title":"Upper4 and Lower4"},{"location":"developers/memory-inspector-overview/#memory-sizes-diagram","text":"","title":"Memory Sizes diagram"},{"location":"developers/new-achievement-set-checklist/","text":"Before you Begin \u00b6 1. Are you free of tickets? \u00b6 Before working on a new you must address all open tickets you have. Once you're free of tickets, then go ahead. 2. Is the game present on the database? \u00b6 No \u00b6 Then ask for it to be added on Discord #help-me or on our forums and some dev will add it for you. It's essential you choose the right ROM(s) to work with . If you want to work on a ROM hack, check the achievements for ROM hacks doc first. Yes \u00b6 Good! Go ahead. 3. Does the game already have an achievement set? \u00b6 Yes \u00b6 If there is an existing set, don't give up. You can still improve it, by adding/removing/reworking achievements, or make changes to titles and images, etc. However you'll need to go through the set revision process . No \u00b6 Look deeper. Often there are multiple entries in the database for the same game under different titles. Once you're sure, you'll need to check if there's another dev working on the game. Note: Only one achievement set is allowed per game per console. For details see working with the right ROM . 4. Is another developer working on the game? \u00b6 To be sure if there's another dev working on a game, check the game's official forum topic (that's the official way to reserve a game to work on ). This is needed to avoid conflicts between multiple devs working on the same game. Yes \u00b6 It may be possible that developer has stopped working on it. Developers are expected to renew their reservation every three months. Look at the time stamps to see when the developer posted a reservation for development. If the developer has not stated or renewed their reservation on the game after three months you can assume it has been abandoned and then you can post your plans to work. No \u00b6 Great! You're free to go ahead! The next step is to announce your plans to develop achievements for the game.","title":"New Achievement Set Checklist"},{"location":"developers/new-achievement-set-checklist/#before-you-begin","text":"","title":"Before you Begin"},{"location":"developers/new-achievement-set-checklist/#1-are-you-free-of-tickets","text":"Before working on a new you must address all open tickets you have. Once you're free of tickets, then go ahead.","title":"1. Are you free of tickets?"},{"location":"developers/new-achievement-set-checklist/#2-is-the-game-present-on-the-database","text":"","title":"2. Is the game present on the database?"},{"location":"developers/new-achievement-set-checklist/#no","text":"Then ask for it to be added on Discord #help-me or on our forums and some dev will add it for you. It's essential you choose the right ROM(s) to work with . If you want to work on a ROM hack, check the achievements for ROM hacks doc first.","title":"No"},{"location":"developers/new-achievement-set-checklist/#yes","text":"Good! Go ahead.","title":"Yes"},{"location":"developers/new-achievement-set-checklist/#3-does-the-game-already-have-an-achievement-set","text":"","title":"3. Does the game already have an achievement set?"},{"location":"developers/new-achievement-set-checklist/#yes_1","text":"If there is an existing set, don't give up. You can still improve it, by adding/removing/reworking achievements, or make changes to titles and images, etc. However you'll need to go through the set revision process .","title":"Yes"},{"location":"developers/new-achievement-set-checklist/#no_1","text":"Look deeper. Often there are multiple entries in the database for the same game under different titles. Once you're sure, you'll need to check if there's another dev working on the game. Note: Only one achievement set is allowed per game per console. For details see working with the right ROM .","title":"No"},{"location":"developers/new-achievement-set-checklist/#4-is-another-developer-working-on-the-game","text":"To be sure if there's another dev working on a game, check the game's official forum topic (that's the official way to reserve a game to work on ). This is needed to avoid conflicts between multiple devs working on the same game.","title":"4. Is another developer working on the game?"},{"location":"developers/new-achievement-set-checklist/#yes_2","text":"It may be possible that developer has stopped working on it. Developers are expected to renew their reservation every three months. Look at the time stamps to see when the developer posted a reservation for development. If the developer has not stated or renewed their reservation on the game after three months you can assume it has been abandoned and then you can post your plans to work.","title":"Yes"},{"location":"developers/new-achievement-set-checklist/#no_2","text":"Great! You're free to go ahead! The next step is to announce your plans to develop achievements for the game.","title":"No"},{"location":"developers/real-examples/","text":"One of the best learning resource is looking at some real examples. In this section we wil look deep into some achievements and break down the logic behind them. Using Hit Counts as a Timer Using Delta Values and Hit Counts to Detect an Increment Simple Example of How to Avoid Load State Abusing Circumvent the Problem of a Counter Incrementing Twice in the Same Frame Creating a Timer with ResetIf Hits based on the Speed of the Game Using Add Source and Deltas for Collectibles and Similar Achievements","title":"Real Examples Home"},{"location":"developers/rich-presence/","text":"Introduction \u00b6 Rich Presence (RP) is brief overview of what active players are currently doing in their game. To have RP in a game you need a Rich Presence Script (RPS) which is created by Developers. The Script checks the player's game memory and as programmed reports the values of certain addresses with definitions assigned by the Developer such as which stage the player is on, how many lives they have, if the game is paused, what game mode they are playing, what the player has accomplished, etc. This information is reported back to the website. Example of RP in action: To see the RP live in a game click on the RetroAchievements menu in your emulator and then click on Rich Presence Monitor. A small window will show you your active RP. (Good for debugging) The best way to understand Rich Presence is to look at various examples in game, look at the addresses used and look at how the text is displayed in the Rich Presence Monitor and on site. How Does it work? \u00b6 Every time a game is launched, it fetches the achievements in a 'patch' file for the ROM which details all the achievements and memory addresses (and leaderboards) that can be watched for. It will also request a Rich Presence Script for the currently loaded ROM. The emulator will report back to the website every 120 seconds. Similarly, every 120 seconds or so, the 'active players' box on the front page will refresh, detailing the last known activity of all active players. If there isn't a rich presence script given, the text will be 'earning achievements' if playing a game with achievements, 'playing [game]' if playing a game without achievements, or 'developing achievements' if the memory dialog is open and visible. The RPS for each game can be found under the development section on each game's page: Example (Super Mario Bros.) \u00b6 Format:Digit FormatType=VALUE Lookup:Mode 0=[Demo] 2=[World Complete] Lookup:Paused 0x81=\u258c\u258c 0x80=\u258c\u258c 1=\u258c\u258c Lookup:Star 5=\ud83c\udf1f 4=\ud83c\udf1f 3=\ud83c\udf1f 2=\ud83c\udf1f 1=\ud83c\udf1f Lookup:Powerup 0=Small 1=Super 2=Fire Lookup:Swimming 1= swimming Lookup:Status 0= [Loading] 1= taking a vine warp 2= entering a warp pipe 3= entering a warp pipe 4= \ud83d\udea9 5= [Stage Complete] 6= [Game Over] 7= [Entering Area] 9= growing 0xA= shrinking 0xB= \ud83d\udc80 0xC= powering up Lookup:Quest 0x0=1st 0x1=2nd Display: @Mode(0xh770)@Paused(0xh776)@Star(0xM79f_0xN79f_0xo79f_0xP79f_0xQ79f_0xR79f)@Powerup(0xh0756) Mario in @Digit(0xh75f_v1)-@Digit(0xh75c_v1)@Swimming(0xh704)@Status(0xhe), \ud83d\udeb6:@Digit(0xh75a_v1), @Quest(0xh7fc) Quest It breaks down into a series of Lookup objects, Format objects and one Display object. Lookups \u00b6 Lookups are defined like this: Lookup:NameOfLookup 1=Text When 1 2=Text When 2 ... When a Display string references a Lookup, it's Value will be located in the table and the associated text will be displayed. NOTE : Values in the Lookup should be in decimal. If you want to use hex values, include a 0x prefix. (i.e. 0x12=Eighteen ) You can also specify multiple values for a single text string: 1-5,10=Text When These Values *=Text For All Other Values In this example, the values 1, 2, 3, 4, 5, and 10 all map to the first text string. Anything that doesn't match an item defined in the lookup table will return the text associated with * . If * does not appear in the lookup table, no text will be returned if a value doesn't have an entry. Format \u00b6 Format tables are defined like this: Format:Score FormatType=VALUE Begin with Format: , then the name of the Format converter. On the next line, give FormatType= , then one of the following: VALUE : generic value, no leading zeroes. SCORE / POINTS : generic value, padded with leading 0s to 6 digits. TIME / FRAMES : value describes the number of frames elapsed, and will be turned into 00:00.00 by multiplying by 100 (hundredths of a second) and dividing by 60 (frames per second). If your system runs at something other than 60 fps, you'll have to do the conversion yourself and use MILLISECS . MILLISECS : value describes the number of hundredths of a second elapsed, and will be turned into 00:00.00 SECS : value describes the number of seconds elapsed, and will be turned into 00:00 MINUTES : value describes the number of minutes elapsed, and will be turned into 0h00 SECS_AS_MINS : value describes the number of seconds elapsed, and will be turned into 0h00 Display \u00b6 Display is a string that gets shown in the 'Active Players' box on the front page and the 'Last Seen In' section of the player's profile. It is built by replacing any macros in the display string with text from a Lookup or formatted values from a Format converter. Each macro is identified by a single '@', which is followed by the name for the Lookup or Format (case sensitive!), and immediately after, in parenthesis, a value specifying what to send to that Lookup or Format object. Using @Powerup(0xh756)! This means use the Lookup or Format that's called Powerup , and give it whatever 8-bit value is in the address 0x756. After converting, put the result in between \"Using \" and \"!\". NOTE : Lookup/Format names are case sensitive and must exactly match the usage in the Display string: @test(0x1234) will not find Format:Test NOTE : Lookup/Format definitions cannot contain spaces before or after the name. @test(0x1234) will not find Format:test or Format: test Example Lookup Breakdown \u00b6 @Mode(0xh770) - Lookup for the address that shows if the game is in demo mode or a world has been completed. @Paused(0xh776) - Lookup for the address that shows if the game is paused (3 values are used, two of them are for pausing and unpausing). @Star(0xM79f_0xN79f_0xo79f_0xP79f_0xQ79f_0xR79f) - Lookup for the address of if Mario has Star invincibility. More on this later. @Powerup(0xh756) - Lookup for the address that show if Mairo is Small, big or has fire power. Mario in - Static text to string lookup and format objects together. @Digit(0xh75f_v1) - Digit is a format object defined as a value. The address 0xh75f is the World minus 1 (because it it 0 based, as in it starts counting at 0). _v1 Means + value 1. _v+1 is also correct. - - More static text to split World and Level. as in the hypen in World 1-1. @Digit(0xh75c_v1) - Another use of the Digit format object. This time It's looking up the stage. World 1-X. @Swimming(0xh704) - Lookup for the address that shows if the player is swimming. @Status(0xhe) - Lookup for the address that shows Mario's status, such as going through pipes. , \ud83d\udeb6: - More static text. \ud83d\udeb6 is a symbol for lives. @Digit(0xh75a_v1) - Third use of the Digit format object. This time it's checking the player lives address. , - Static text. @Quest(0xh7fc) A lookup to see if the player is in normal or on the 2 nd quest, hardmode. Quest - Static Text. Address size \u00b6 To specify what size of address you are are checking there are various characters used. (capitalization is ignored) A 16bit address is default and has no character designation. At 0x10 the address is two bytes - 16 bits. An 8bit address's character is h (or H ). At 0xh10 the address is one byte - 8 bits. xxxx xxxx An upper4 address's character is u (or U ). At 0xu10 the address is one nibble - 4 bits. xxxx 0000 A lower4 address's character is l (or L ). At 0xl10 the address is one nibble - 4 bits. 0000 xxxx A bit0 address's character is m (or M ). At 0xm10 the address is one bit, the lowest bit: 0000 000x A bit1 address's character is n (or N ). At 0xn10 the address is one bit, the second bit: 0000 00x0 A bit2 address's character is o (or O ). At 0xo10 the address is one bit, the third bit: 0000 0x00 A bit3 address's character is p (or P ). At 0xp10 the address is one bit, the fourth bit: 0000 x000 A bit4 address's character is q (or Q ). At 0xq10 the address is one bit, the fifth bit: 000x 0000 A bit5 address's character is r (or R ). At 0xr10 the address is one bit, the sixth bit: 00x0 0000 A bit6 address's character is s (or S ). At 0xs10 the address is one bit, the seventh bit: 0x00 0000 A bit7 address's character is t (or T ). At 0xt10 the address is one bit, the top bit: x000 0000 A 32bit address's character is x (or X ). At 0xx10 the address is four bytes and 32 bits. A 24bit address's character is w (or W ). At 0xW10 the address three bytes and 24 bits. Summarizing on a table: location/size prefix (the letters can be in lower case) example bit0 0xM 0xM01234 bit1 0xN 0xN01234 bit2 0xO 0xO01234 bit3 0xP 0xP01234 bit4 0xQ 0xQ01234 bit5 0xR 0xR01234 bit6 0xS 0xS01234 bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x01234 24bit 0xW 0xW123 32bit 0xX 0xX01234 Conditional Display Strings \u00b6 Display: ?0x 000085=0?Title Screen ?0xT00007c=1?Custom Map in @Landscape(0xH00016c) Playing Battle @Battle(0x 00007c*0.2) in @Landscape(0xH00016c) The existing Display: marker is still used to indicate the start of the display block. If the next line starts with a question mark, it is considered to be a conditional display string. The portion of the line between the two question marks is the conditional clause. If the conditional clause evaluates true, then the remaining portion of the line is used as the display string. If it does not evaluate true, then processing proceeds to the next line. If it starts with a question mark, the same process repeats. If it does not start with a question mark, the entire line is used as the default display string. NOTE : A default display string is required in case none of the conditional display strings match. If you only have conditional display strings, the script will appear to do nothing. Looking at this example, if the 16-bit value at $0085 is 0, the display string is Title Screen . If not, the next line is examined. If the 7 th bit of $007C is 1, the display string is Custom Map in @Landscape(0xH00016c) . If not, the final line does not have a conditional clause and is used. Display strings associated with a conditional clause support all of the same syntax as the default display string. In this example, you can see the @Landscape lookup is used in both the conditional display string and the default display string. The lookup itself only has to be defined once. The conditional phrase supports all of the previously mentioned address accessors as well as AND (_) and OR (S) logic. Note that OR clauses still require a 'core' group, just like achievements . ?0xH1234=32_0xH2345=0?and example if the 8-bit value at $1234 is 32 and the 8-bit value at $2345 is 0, display and example ?0xH1234=32S0xH2345=1S0xH2345=2?or example if the 8-bit value at $1234 is 32 and the 8-bit value at $2345 is 1 or 2, display or example ?0xH1234=32_0xH5678=33S0xH2345=1S0xH2345=2?and/or example if the 8-bit value at $1234 is 32 and the 8-bit value at $5678 is 33 and the 8-bit value at $2345 is 1 or 2, display and/or example Pro-tip: Conditions can be created using the achievement editor . Once you have your condition defined, use the Copy Def button to copy the achievement definition to the clipboard so you can paste it into the rich presence script. Binary Coded Decimal (BCD) \u00b6 BCD is when the values are store in an address from as 0-9 (one digit) or 0-99 (two digits). Keep in mind that most often values are stored in hexidecimal, but sometime games will store them in this way and here's the best way to handle these addresses in your display. BCD decoding treats each hex character as a decimal digit. If the memory inspector shows 86 (in hex), the result of BCD decoding the value would be 86 (in decimal). For value objects you can use the BCD prefix, as in b0xh1234 . This also works with leaderboard values . Note that you still need to specify the size of the BCD memory address. b0x1234 reads a 16-bit value. b0xh1234 reads an 8-bit value and b0xX1234 reads a 32-bit value. NOTE : Support for 16-bit and 32-bit BCD decoding is a feature of the 0.075 toolkit. This is most commonly used for score and time, but often other types of display values. Limits \u00b6 65,535 character limit for script 255 character limit for what is displayed Unicode characters are allowed, some use more characters than 1 Tips and Tricks \u00b6 Comments can be added anywhere in the script. A double slash ( // ) indicates the remaining portion of the line should be ignored when processing the script. Note: comments still apply toward the script size limit. Lookup names can be as short as a single character if you need to squeeze in a few extra characters. Leading zeros can be removed from addresses ( 0xh0001 can be shortened to 0xh1 ). Turning all your values from hex into decimal will take up less characters. Unicode characters don't always \"take up less space\" they often take up to four system characters. Each Lookup or Format named mapping can be referenced multiple times with the same or different addresses. You can define a single Format:Number FormatType=VALUE instead of defining individual ones for Lives, Score, Level, etc. Putting spaces in your Lookups sometimes before or after can allow you to hide certain lookups when they are not needed, like how @Pause , @Star , @Swimming , and @Mode do. Value Properties \u00b6 When using lookup and format objects @object() it's possible to combine and perform calculations. Macro values support everything that leaderboard values support, so you can use multiplication, addition, and even some logic to generate values that aren't directly available in memory. Example @Score(0xh28*10_0xh29*1000_0xh26*100000) points This means use the Lookup or Format Score , and give it the sum of: - the 8-bit value at 0x28 times 10, ADD - the 8-bit value at 0x29 times 1000, ADD - the 8-bit value at 0x26 times 100000 Unicode Standard Symbols \u00b6 You can without doubt use these symbols in rich presence. \u258c\u258c=Paused \ud83d\udd01=Continues \u23f0=In Game Time/Game Clock \ud83d\udd11=Keys \ud83d\udca3=Bombs \u2764\ufe0f or \u2764=In a game with hearts (e.g. Zelda) \ud83d\udcb0=Money \ud83d\udea9=Level/Stage While making Rich Presence devs need to be careful that they are communicating clearly. If you are using non-standard symbols they will make sense to you but could be entirely confusing to others. When using non-standard symbols, check them with someone else or a few people to see if the symbols you use make sense. If they don't, use better symbols, use text or use symbols alongside of text. For custom unicode/emoji ShapeCatcher is an excellent resource, you can draw what you're looking for and an AI will find similar matches. Just be careful to not use unicode that too obscure , as they don't all display on all systems. Take note of community display preference: Developing Rich Presence \u00b6 The toolkit does not currently have an integrated Rich Presence editor, but you can test local changes before putting them on the server. Once you've started a game and the current Rich Presence has been downloaded from the server, you can find it in RACache\\Data\\XXX-Rich.txt where XXX is the game ID. The Rich Presence Monitor (openable from the RetroAchievments menu) reads this file and shows the current value every second while the window is open. If you make changes to the XXX-Rich.txt file, and reselect the menu option, it will read the new changes and allow you to immediate test them without applying the changes to the server. Continue to make changes and reselect the menu option until the script is behaving as you expect, then copy the contents to the server page to make it available to everyone else. NOTE : The XXX-Rich.txt file is overwritten with the current server data each time the game is opened. As long as you still have the file open in an editor, you can always save your changes over the updated file after reopening the game. Parse Errors \u00b6 Code Enum Description -2 INVALID_MEMORY_OPERAND A memory operand was expected and not found. Memory operands start with 0x , then a size indicator. The most common causes of this are forgetting the 0x or having an _S or __ in the script. -3 INVALID_CONST_OPERAND A lookup key could not be evaluated. The most common cause of this is using hex without the 0x prefix. This may also occur on older versions of RetroArch when using CSV or range keys for lookups. -6 INVALID_OPERATOR An unknown operator was encountered. The most common cause of this is using ! instead of != -16 MISSING_VALUE A macro was encountered without providing a value (i.e. @Points instead of @Points(0xh1234) ) -18 MISSING_DISPLAY_STRING The rich presence script did not contain a Display: element, or contained only conditional display strings -20 RC_INVALID_VALUE_FLAG A non-combining flag is used in a non-trigger context. Combining flags are AddSource, SubSource, AddHits, AddAddress and AndNext. Additionally, if you see [Unknown macro] , that means the macro name could not be resolved. For example @Points(0xh1234) without defining Format:Points would generate [Unknown macro]Points(0xh1234) . This issue happens sometimes when a Rich Presence is created in the <GameID>-Rich.txt file in the RACache>Data folder. In this case the issue can be fixed by adding an empty line at the start of the file.","title":"Rich Presence"},{"location":"developers/rich-presence/#introduction","text":"Rich Presence (RP) is brief overview of what active players are currently doing in their game. To have RP in a game you need a Rich Presence Script (RPS) which is created by Developers. The Script checks the player's game memory and as programmed reports the values of certain addresses with definitions assigned by the Developer such as which stage the player is on, how many lives they have, if the game is paused, what game mode they are playing, what the player has accomplished, etc. This information is reported back to the website. Example of RP in action: To see the RP live in a game click on the RetroAchievements menu in your emulator and then click on Rich Presence Monitor. A small window will show you your active RP. (Good for debugging) The best way to understand Rich Presence is to look at various examples in game, look at the addresses used and look at how the text is displayed in the Rich Presence Monitor and on site.","title":"Introduction"},{"location":"developers/rich-presence/#how-does-it-work","text":"Every time a game is launched, it fetches the achievements in a 'patch' file for the ROM which details all the achievements and memory addresses (and leaderboards) that can be watched for. It will also request a Rich Presence Script for the currently loaded ROM. The emulator will report back to the website every 120 seconds. Similarly, every 120 seconds or so, the 'active players' box on the front page will refresh, detailing the last known activity of all active players. If there isn't a rich presence script given, the text will be 'earning achievements' if playing a game with achievements, 'playing [game]' if playing a game without achievements, or 'developing achievements' if the memory dialog is open and visible. The RPS for each game can be found under the development section on each game's page:","title":"How Does it work?"},{"location":"developers/rich-presence/#example-super-mario-bros","text":"Format:Digit FormatType=VALUE Lookup:Mode 0=[Demo] 2=[World Complete] Lookup:Paused 0x81=\u258c\u258c 0x80=\u258c\u258c 1=\u258c\u258c Lookup:Star 5=\ud83c\udf1f 4=\ud83c\udf1f 3=\ud83c\udf1f 2=\ud83c\udf1f 1=\ud83c\udf1f Lookup:Powerup 0=Small 1=Super 2=Fire Lookup:Swimming 1= swimming Lookup:Status 0= [Loading] 1= taking a vine warp 2= entering a warp pipe 3= entering a warp pipe 4= \ud83d\udea9 5= [Stage Complete] 6= [Game Over] 7= [Entering Area] 9= growing 0xA= shrinking 0xB= \ud83d\udc80 0xC= powering up Lookup:Quest 0x0=1st 0x1=2nd Display: @Mode(0xh770)@Paused(0xh776)@Star(0xM79f_0xN79f_0xo79f_0xP79f_0xQ79f_0xR79f)@Powerup(0xh0756) Mario in @Digit(0xh75f_v1)-@Digit(0xh75c_v1)@Swimming(0xh704)@Status(0xhe), \ud83d\udeb6:@Digit(0xh75a_v1), @Quest(0xh7fc) Quest It breaks down into a series of Lookup objects, Format objects and one Display object.","title":"Example (Super Mario Bros.)"},{"location":"developers/rich-presence/#lookups","text":"Lookups are defined like this: Lookup:NameOfLookup 1=Text When 1 2=Text When 2 ... When a Display string references a Lookup, it's Value will be located in the table and the associated text will be displayed. NOTE : Values in the Lookup should be in decimal. If you want to use hex values, include a 0x prefix. (i.e. 0x12=Eighteen ) You can also specify multiple values for a single text string: 1-5,10=Text When These Values *=Text For All Other Values In this example, the values 1, 2, 3, 4, 5, and 10 all map to the first text string. Anything that doesn't match an item defined in the lookup table will return the text associated with * . If * does not appear in the lookup table, no text will be returned if a value doesn't have an entry.","title":"Lookups"},{"location":"developers/rich-presence/#format","text":"Format tables are defined like this: Format:Score FormatType=VALUE Begin with Format: , then the name of the Format converter. On the next line, give FormatType= , then one of the following: VALUE : generic value, no leading zeroes. SCORE / POINTS : generic value, padded with leading 0s to 6 digits. TIME / FRAMES : value describes the number of frames elapsed, and will be turned into 00:00.00 by multiplying by 100 (hundredths of a second) and dividing by 60 (frames per second). If your system runs at something other than 60 fps, you'll have to do the conversion yourself and use MILLISECS . MILLISECS : value describes the number of hundredths of a second elapsed, and will be turned into 00:00.00 SECS : value describes the number of seconds elapsed, and will be turned into 00:00 MINUTES : value describes the number of minutes elapsed, and will be turned into 0h00 SECS_AS_MINS : value describes the number of seconds elapsed, and will be turned into 0h00","title":"Format"},{"location":"developers/rich-presence/#display","text":"Display is a string that gets shown in the 'Active Players' box on the front page and the 'Last Seen In' section of the player's profile. It is built by replacing any macros in the display string with text from a Lookup or formatted values from a Format converter. Each macro is identified by a single '@', which is followed by the name for the Lookup or Format (case sensitive!), and immediately after, in parenthesis, a value specifying what to send to that Lookup or Format object. Using @Powerup(0xh756)! This means use the Lookup or Format that's called Powerup , and give it whatever 8-bit value is in the address 0x756. After converting, put the result in between \"Using \" and \"!\". NOTE : Lookup/Format names are case sensitive and must exactly match the usage in the Display string: @test(0x1234) will not find Format:Test NOTE : Lookup/Format definitions cannot contain spaces before or after the name. @test(0x1234) will not find Format:test or Format: test","title":"Display"},{"location":"developers/rich-presence/#example-lookup-breakdown","text":"@Mode(0xh770) - Lookup for the address that shows if the game is in demo mode or a world has been completed. @Paused(0xh776) - Lookup for the address that shows if the game is paused (3 values are used, two of them are for pausing and unpausing). @Star(0xM79f_0xN79f_0xo79f_0xP79f_0xQ79f_0xR79f) - Lookup for the address of if Mario has Star invincibility. More on this later. @Powerup(0xh756) - Lookup for the address that show if Mairo is Small, big or has fire power. Mario in - Static text to string lookup and format objects together. @Digit(0xh75f_v1) - Digit is a format object defined as a value. The address 0xh75f is the World minus 1 (because it it 0 based, as in it starts counting at 0). _v1 Means + value 1. _v+1 is also correct. - - More static text to split World and Level. as in the hypen in World 1-1. @Digit(0xh75c_v1) - Another use of the Digit format object. This time It's looking up the stage. World 1-X. @Swimming(0xh704) - Lookup for the address that shows if the player is swimming. @Status(0xhe) - Lookup for the address that shows Mario's status, such as going through pipes. , \ud83d\udeb6: - More static text. \ud83d\udeb6 is a symbol for lives. @Digit(0xh75a_v1) - Third use of the Digit format object. This time it's checking the player lives address. , - Static text. @Quest(0xh7fc) A lookup to see if the player is in normal or on the 2 nd quest, hardmode. Quest - Static Text.","title":"Example Lookup Breakdown"},{"location":"developers/rich-presence/#address-size","text":"To specify what size of address you are are checking there are various characters used. (capitalization is ignored) A 16bit address is default and has no character designation. At 0x10 the address is two bytes - 16 bits. An 8bit address's character is h (or H ). At 0xh10 the address is one byte - 8 bits. xxxx xxxx An upper4 address's character is u (or U ). At 0xu10 the address is one nibble - 4 bits. xxxx 0000 A lower4 address's character is l (or L ). At 0xl10 the address is one nibble - 4 bits. 0000 xxxx A bit0 address's character is m (or M ). At 0xm10 the address is one bit, the lowest bit: 0000 000x A bit1 address's character is n (or N ). At 0xn10 the address is one bit, the second bit: 0000 00x0 A bit2 address's character is o (or O ). At 0xo10 the address is one bit, the third bit: 0000 0x00 A bit3 address's character is p (or P ). At 0xp10 the address is one bit, the fourth bit: 0000 x000 A bit4 address's character is q (or Q ). At 0xq10 the address is one bit, the fifth bit: 000x 0000 A bit5 address's character is r (or R ). At 0xr10 the address is one bit, the sixth bit: 00x0 0000 A bit6 address's character is s (or S ). At 0xs10 the address is one bit, the seventh bit: 0x00 0000 A bit7 address's character is t (or T ). At 0xt10 the address is one bit, the top bit: x000 0000 A 32bit address's character is x (or X ). At 0xx10 the address is four bytes and 32 bits. A 24bit address's character is w (or W ). At 0xW10 the address three bytes and 24 bits. Summarizing on a table: location/size prefix (the letters can be in lower case) example bit0 0xM 0xM01234 bit1 0xN 0xN01234 bit2 0xO 0xO01234 bit3 0xP 0xP01234 bit4 0xQ 0xQ01234 bit5 0xR 0xR01234 bit6 0xS 0xS01234 bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x01234 24bit 0xW 0xW123 32bit 0xX 0xX01234","title":"Address size"},{"location":"developers/rich-presence/#conditional-display-strings","text":"Display: ?0x 000085=0?Title Screen ?0xT00007c=1?Custom Map in @Landscape(0xH00016c) Playing Battle @Battle(0x 00007c*0.2) in @Landscape(0xH00016c) The existing Display: marker is still used to indicate the start of the display block. If the next line starts with a question mark, it is considered to be a conditional display string. The portion of the line between the two question marks is the conditional clause. If the conditional clause evaluates true, then the remaining portion of the line is used as the display string. If it does not evaluate true, then processing proceeds to the next line. If it starts with a question mark, the same process repeats. If it does not start with a question mark, the entire line is used as the default display string. NOTE : A default display string is required in case none of the conditional display strings match. If you only have conditional display strings, the script will appear to do nothing. Looking at this example, if the 16-bit value at $0085 is 0, the display string is Title Screen . If not, the next line is examined. If the 7 th bit of $007C is 1, the display string is Custom Map in @Landscape(0xH00016c) . If not, the final line does not have a conditional clause and is used. Display strings associated with a conditional clause support all of the same syntax as the default display string. In this example, you can see the @Landscape lookup is used in both the conditional display string and the default display string. The lookup itself only has to be defined once. The conditional phrase supports all of the previously mentioned address accessors as well as AND (_) and OR (S) logic. Note that OR clauses still require a 'core' group, just like achievements . ?0xH1234=32_0xH2345=0?and example if the 8-bit value at $1234 is 32 and the 8-bit value at $2345 is 0, display and example ?0xH1234=32S0xH2345=1S0xH2345=2?or example if the 8-bit value at $1234 is 32 and the 8-bit value at $2345 is 1 or 2, display or example ?0xH1234=32_0xH5678=33S0xH2345=1S0xH2345=2?and/or example if the 8-bit value at $1234 is 32 and the 8-bit value at $5678 is 33 and the 8-bit value at $2345 is 1 or 2, display and/or example Pro-tip: Conditions can be created using the achievement editor . Once you have your condition defined, use the Copy Def button to copy the achievement definition to the clipboard so you can paste it into the rich presence script.","title":"Conditional Display Strings"},{"location":"developers/rich-presence/#binary-coded-decimal-bcd","text":"BCD is when the values are store in an address from as 0-9 (one digit) or 0-99 (two digits). Keep in mind that most often values are stored in hexidecimal, but sometime games will store them in this way and here's the best way to handle these addresses in your display. BCD decoding treats each hex character as a decimal digit. If the memory inspector shows 86 (in hex), the result of BCD decoding the value would be 86 (in decimal). For value objects you can use the BCD prefix, as in b0xh1234 . This also works with leaderboard values . Note that you still need to specify the size of the BCD memory address. b0x1234 reads a 16-bit value. b0xh1234 reads an 8-bit value and b0xX1234 reads a 32-bit value. NOTE : Support for 16-bit and 32-bit BCD decoding is a feature of the 0.075 toolkit. This is most commonly used for score and time, but often other types of display values.","title":"Binary Coded Decimal (BCD)"},{"location":"developers/rich-presence/#limits","text":"65,535 character limit for script 255 character limit for what is displayed Unicode characters are allowed, some use more characters than 1","title":"Limits"},{"location":"developers/rich-presence/#tips-and-tricks","text":"Comments can be added anywhere in the script. A double slash ( // ) indicates the remaining portion of the line should be ignored when processing the script. Note: comments still apply toward the script size limit. Lookup names can be as short as a single character if you need to squeeze in a few extra characters. Leading zeros can be removed from addresses ( 0xh0001 can be shortened to 0xh1 ). Turning all your values from hex into decimal will take up less characters. Unicode characters don't always \"take up less space\" they often take up to four system characters. Each Lookup or Format named mapping can be referenced multiple times with the same or different addresses. You can define a single Format:Number FormatType=VALUE instead of defining individual ones for Lives, Score, Level, etc. Putting spaces in your Lookups sometimes before or after can allow you to hide certain lookups when they are not needed, like how @Pause , @Star , @Swimming , and @Mode do.","title":"Tips and Tricks"},{"location":"developers/rich-presence/#value-properties","text":"When using lookup and format objects @object() it's possible to combine and perform calculations. Macro values support everything that leaderboard values support, so you can use multiplication, addition, and even some logic to generate values that aren't directly available in memory. Example @Score(0xh28*10_0xh29*1000_0xh26*100000) points This means use the Lookup or Format Score , and give it the sum of: - the 8-bit value at 0x28 times 10, ADD - the 8-bit value at 0x29 times 1000, ADD - the 8-bit value at 0x26 times 100000","title":"Value Properties"},{"location":"developers/rich-presence/#unicode-standard-symbols","text":"You can without doubt use these symbols in rich presence. \u258c\u258c=Paused \ud83d\udd01=Continues \u23f0=In Game Time/Game Clock \ud83d\udd11=Keys \ud83d\udca3=Bombs \u2764\ufe0f or \u2764=In a game with hearts (e.g. Zelda) \ud83d\udcb0=Money \ud83d\udea9=Level/Stage While making Rich Presence devs need to be careful that they are communicating clearly. If you are using non-standard symbols they will make sense to you but could be entirely confusing to others. When using non-standard symbols, check them with someone else or a few people to see if the symbols you use make sense. If they don't, use better symbols, use text or use symbols alongside of text. For custom unicode/emoji ShapeCatcher is an excellent resource, you can draw what you're looking for and an AI will find similar matches. Just be careful to not use unicode that too obscure , as they don't all display on all systems. Take note of community display preference:","title":"Unicode Standard Symbols"},{"location":"developers/rich-presence/#developing-rich-presence","text":"The toolkit does not currently have an integrated Rich Presence editor, but you can test local changes before putting them on the server. Once you've started a game and the current Rich Presence has been downloaded from the server, you can find it in RACache\\Data\\XXX-Rich.txt where XXX is the game ID. The Rich Presence Monitor (openable from the RetroAchievments menu) reads this file and shows the current value every second while the window is open. If you make changes to the XXX-Rich.txt file, and reselect the menu option, it will read the new changes and allow you to immediate test them without applying the changes to the server. Continue to make changes and reselect the menu option until the script is behaving as you expect, then copy the contents to the server page to make it available to everyone else. NOTE : The XXX-Rich.txt file is overwritten with the current server data each time the game is opened. As long as you still have the file open in an editor, you can always save your changes over the updated file after reopening the game.","title":"Developing Rich Presence"},{"location":"developers/rich-presence/#parse-errors","text":"Code Enum Description -2 INVALID_MEMORY_OPERAND A memory operand was expected and not found. Memory operands start with 0x , then a size indicator. The most common causes of this are forgetting the 0x or having an _S or __ in the script. -3 INVALID_CONST_OPERAND A lookup key could not be evaluated. The most common cause of this is using hex without the 0x prefix. This may also occur on older versions of RetroArch when using CSV or range keys for lookups. -6 INVALID_OPERATOR An unknown operator was encountered. The most common cause of this is using ! instead of != -16 MISSING_VALUE A macro was encountered without providing a value (i.e. @Points instead of @Points(0xh1234) ) -18 MISSING_DISPLAY_STRING The rich presence script did not contain a Display: element, or contained only conditional display strings -20 RC_INVALID_VALUE_FLAG A non-combining flag is used in a non-trigger context. Combining flags are AddSource, SubSource, AddHits, AddAddress and AndNext. Additionally, if you see [Unknown macro] , that means the macro name could not be resolved. For example @Points(0xh1234) without defining Format:Points would generate [Unknown macro]Points(0xh1234) . This issue happens sometimes when a Rich Presence is created in the <GameID>-Rich.txt file in the RACache>Data folder. In this case the issue can be fixed by adding an empty line at the start of the file.","title":"Parse Errors"},{"location":"developers/set-development-roadmap/","text":"The following is a detailed road-map of most things you would want to consider while making an achievement set. It's not required to follow this exactly but is meant as a guide. Initial Research \u00b6 Game manual : Review Game Faqs : Read/check Game Cheats : Find, note Longplay : Review/watch Similar sets : Compare, note favorite ideas Partimes : check if they exist Speedruns : check if they exist Conceptual Design \u00b6 Achievements 1 : Brainstorm, include ideas from similar sets, manual, etc. Note secrets, progress, key events, collectibles, scores benchmarks, Easter eggs, bosses, key items, par times, internal rewards. Research 2 : Check/test that designs are possible. Memory 1 : Estimate needed addresses for achievements. Memory hunt \u00b6 Memory 2 : Search for needed memory addresses. Achievement Design \u00b6 Balance 1 : Balance set for difficulty distribution, remove or redesign those that don't fit. Achievements 2 : Build the list, push complete to unofficial (not required). Memory 3 : Search for solutions missing, depending on the game's memory. Achievements 3 : Add new ideas as they come. Achievements 4 : Rework or remove ideas that are impossible. Pre-release Final steps \u00b6 Titles & Descriptions : Finalize Bugs 1 : Test achievements for bugs, possibly make/use movies. Game page : Update. Game icon, images, info, resources, similar games. Leaderboards (optional): Code Rich presence : Code Badges : Create Release \u00b6 Achievements 7 : Push to core Points : Balance to your cap Ordering : Do it Forum post : Make announcement Post Release \u00b6 Bugs 2 : Fix those that come. Balance 2 : Re-balance set difficulty based on feedback.","title":"Set Development Roadmap"},{"location":"developers/set-development-roadmap/#initial-research","text":"Game manual : Review Game Faqs : Read/check Game Cheats : Find, note Longplay : Review/watch Similar sets : Compare, note favorite ideas Partimes : check if they exist Speedruns : check if they exist","title":"Initial Research"},{"location":"developers/set-development-roadmap/#conceptual-design","text":"Achievements 1 : Brainstorm, include ideas from similar sets, manual, etc. Note secrets, progress, key events, collectibles, scores benchmarks, Easter eggs, bosses, key items, par times, internal rewards. Research 2 : Check/test that designs are possible. Memory 1 : Estimate needed addresses for achievements.","title":"Conceptual Design"},{"location":"developers/set-development-roadmap/#memory-hunt","text":"Memory 2 : Search for needed memory addresses.","title":"Memory hunt"},{"location":"developers/set-development-roadmap/#achievement-design","text":"Balance 1 : Balance set for difficulty distribution, remove or redesign those that don't fit. Achievements 2 : Build the list, push complete to unofficial (not required). Memory 3 : Search for solutions missing, depending on the game's memory. Achievements 3 : Add new ideas as they come. Achievements 4 : Rework or remove ideas that are impossible.","title":"Achievement Design"},{"location":"developers/set-development-roadmap/#pre-release-final-steps","text":"Titles & Descriptions : Finalize Bugs 1 : Test achievements for bugs, possibly make/use movies. Game page : Update. Game icon, images, info, resources, similar games. Leaderboards (optional): Code Rich presence : Code Badges : Create","title":"Pre-release Final steps"},{"location":"developers/set-development-roadmap/#release","text":"Achievements 7 : Push to core Points : Balance to your cap Ordering : Do it Forum post : Make announcement","title":"Release"},{"location":"developers/set-development-roadmap/#post-release","text":"Bugs 2 : Fix those that come. Balance 2 : Re-balance set difficulty based on feedback.","title":"Post Release"},{"location":"developers/subsets/","text":"Advanced Developer Topic What are Subsets? Types of Subsets Bonus Sets Multi Sets Challenge Runs DLC and Expansions Regional Differences Naming Schemes Claims Approval How Do I Create a Subset? To Do What are Subsets? \u00b6 When browsing the list of games , you will see that some games have a [Subset] tag in the title. Each of these contain achievements that for some reason or another, are not available in a game's base set. Subsets are typically home to specific types of challenge runs. They have also inherited what have been known simply as [Bonus] and [Multi] sets. The methods to create a Subset and means to play them will change once they become a more integrated feature. As of now, they require a patch to generate a unique hash and are separate entries from the base set, so achievements must be obtained separately as well. Types of Subsets \u00b6 Bonus Sets \u00b6 While Bonus sets are subject to debate amongst both players and achievement creators, the overall purpose of a bonus set is for achievements that were not fit for the base set to have a home and still be obtainable by a devoted player. Think of them as \"deluxe\" challenges. The following types of achievements are the most suitable for Bonus Sets: - Extreme Challenges : If it's generally voiced a challenge is too difficult , it's a prime candidate for a Bonus set. However, just because the achievement(s) are possible to code does not mean they are possible to obtain; therefore, the achievement must still be obtainable. A good example of this is the infamous Mr. Perfect from Mega Man (NES) , which requires the player to complete the entire game without taking damage. - Grind Sessions : If achievements involve overly long and frustrating grinds that have no meaningful purpose, they're better suited for Bonus sets. These include leveling characters to the maximum level, maxing out stats, performing a task an absurd amount of times, etc. when none of those things award the player. A good example of something grindy that awards the player, thus making it suitable for a base set, is One of a Kind from Final Fantasy IV (SNES) , which requires a highly RNG-reliant grind for an item to trade for said armor. - Variety Packs - Want to do a mixture of Subset ideas all within one set because you don't want to do several different Subsets? Then do it and throw it in a Bonus set. - Showcasing of or Abuse of Glitches : Glitching can have unpredictable effects in a game's memory, which can result in unwanted behavior for some achievements, thus making them not suitable for a base set. Some examples of this are Replica from Final Fantasy VII (PlayStation) and Rare Candy Addiction from Pokemon - Red and Blue Versions (Game Boy . Multi Sets \u00b6 This one is simple. If an achievement requires input from more than one player in order to unlock it, then it cannot be in the base set. Challenge Runs \u00b6 While many base sets include plenty of challenges, developers have the option to add challenges that last the duration of a game's playthrough to a Subset. These are typically self-imposed challenges that go against how a game is normally played. Examples: - Chrono Trigger - No Level Up - requires players to complete the game without ever leveling up their characters. - EarthBound - Rare Drops - requires players to obtain all the rare drops from enemies. - Final Fantasy - Solo Class - requires players to complete the game using only one character class, but they need to do it with every class to master the set. - Pokemon - Professor Oak Challenge - There are several of these so far! This challenge requires players to catch and/or evolve every Pokemon possible between major story points in the game. - Trails in the Sky FC - NG Nightmare - requires players to obtain 100% completion in a single, NG (New Game) playthrough on the Nightmare difficulty setting, as opposed to doing it on NG+ with carryovers. DLC and Expansions \u00b6 Not very common, but will become more common as our console support expands. Achievements in these sets are exclusive to a game's downloadable content or expansion pack(s). Examples: - Arc the Lad 2 - Arc Arena: Monster Tournament - released as a bonus disc in the Arc the Lad Collection, this requires save data from Arc the Lad 2 in order to play. - F-Zero X - Expansion Kit - achievements are for content exclusive to the 64DD expansion of the game. - Return Fire - Maps o' Death - a separate release that provides additional maps to the game. It requires save data from the original game in order to play. Regional Differences \u00b6 If a regional variant of a game does not have enough differences to warrant a \"full\" set, but you don't want to include it with the base set due to interference with base challenges, you can make a Subset to showcase the differences. Naming Scheme \u00b6 To prevent players from getting confused, there is a specific naming scheme required for all Subsets: - Bonus Sets : Must have [Subset - Bonus] following the base game title. For example: Castlevania [Subset - Bonus] and Darkwing Duck [Subset - Bonus] . - Multi Sets : Must have [Subset - Multi] following the base game title. For example: Contra [Subset - Multi] and Kirby 64: THe Crystal Shards [Subset - Multi] . - Challenge Runs : Must have [Subset - Challenge Name/Type] following the base game title. For example: Chrono Trigger [Subset - No Level Up] and Pocket Monsters Midori [Subset - Monotype Challenge] . - DLC and Expansions : Must have [Subset - DLC/Expansion Name following the base game title. For example: Return Fire - [Subset - Maps o' Death] and F-Zero X [Subset - Expansion Kit] Claims \u00b6 A developer does not need to claim an approved Subset if they are the sole author of the base set. If the developer is not the sole author of the base set, then they will need to post a plan in the forum and have it approved via revision voting. If a junior developer wants to publish a Subset alongside a core set, they need to have their plan approved by code reviewers. Approval \u00b6 The following are types of Subsets that are approved by default: - Bonus - Multi - DLC/Expansions - Glitch Showcases - Regional Differences - Challenge Run: Low Level Game/No Leveling Runs - Challenge Run: Solo Class/Monotype Runs - Challenge Run: Checkpoint Challenges, such as Professor Oak Challenges - Challenge Run: Perma-Death Challenges, such as Nuzlocke Challenges Subsets that deviate from the above list, such as Rare Drops, will need to be approved by DevCompliance, which in turn may require a revision vote. How Do I Create a Subset? \u00b6 In their current state, Subsets require a patch to modify the ROM. This ensures that the hash will be different so it can be linked to a separate entry. You should not use existing patches or alternate versions of the ROM since this can flag the hash when ran against existing DATs. In other words, the hash needs to be unique . If you do not know how to create one of these patches, you can contact RAdmin and request for one to be made. Step 1 - Create a copy of the original game ROM \u00b6 This will be the file you will be editing to become the bonus set ROM Step 2 - Grab a hex editor or sprite-hacking tool. \u00b6 You can skip this if you already have one. Several games already special ROM hacking tool chains. A lot of them are available on GitHub, but there's a plethora of them on ROMHacking.net that make the task easier. You'll need to use a more generic tool for a game that doesn't have one. The edit needs to be enough to create a new hash for the ROM file. Tools to edit your ROM can be found on ROMHacking.net's Utilities Page . Here are some narrowed searches which may help: Sprite Hacking tools - ROMHacking.net Filtered Search Text and text table hex editors - ROMHacking.net Filtered Search Step 3 - Create a BPS Patch for the RAPatches Repository \u00b6 The easiest way to do this is with Floating IPS ; all you do is click \"Create Patch,\", select the unmodified ROM then modified ROM, and save a BPS patch. Providing this patch is a must as it ensures players will be able to play the bonus set. You can put the patch in the RAPatches repository by opening a pull request to add it to appropriate directory. If for any reason, you are not able to or are not comfortable doing so, you can contact RAdmin to make sure the patch finds its way into the repository. Step 4 - Link the Hash to the Bonus Set Entry \u00b6 Linking the hash is no different than any other game. Be sure to provide the hash information in #hash-links-log on the RetroAchievements Discord or in the game's forum topic. Make sure all necessary information in the bonus set's game entry is filled out. Step 5 - Create achievements for the set, announce, and release. \u00b6 Again, just like any other set. Make sure the patch is linked in the forum so players are able to use it! Also, remember that it is against the rules to release the patched ROM itself! You must release the patch by itself to meet with guidelines on not publicly releasing copyrighted content on RetroAchievements). To Do \u00b6 Game Icon guidelines for Subsets + include the border templates for Bonus and Multi icons.","title":"Subsets"},{"location":"developers/subsets/#what-are-subsets","text":"When browsing the list of games , you will see that some games have a [Subset] tag in the title. Each of these contain achievements that for some reason or another, are not available in a game's base set. Subsets are typically home to specific types of challenge runs. They have also inherited what have been known simply as [Bonus] and [Multi] sets. The methods to create a Subset and means to play them will change once they become a more integrated feature. As of now, they require a patch to generate a unique hash and are separate entries from the base set, so achievements must be obtained separately as well.","title":"What are Subsets?"},{"location":"developers/subsets/#types-of-subsets","text":"","title":"Types of Subsets"},{"location":"developers/subsets/#bonus-sets","text":"While Bonus sets are subject to debate amongst both players and achievement creators, the overall purpose of a bonus set is for achievements that were not fit for the base set to have a home and still be obtainable by a devoted player. Think of them as \"deluxe\" challenges. The following types of achievements are the most suitable for Bonus Sets: - Extreme Challenges : If it's generally voiced a challenge is too difficult , it's a prime candidate for a Bonus set. However, just because the achievement(s) are possible to code does not mean they are possible to obtain; therefore, the achievement must still be obtainable. A good example of this is the infamous Mr. Perfect from Mega Man (NES) , which requires the player to complete the entire game without taking damage. - Grind Sessions : If achievements involve overly long and frustrating grinds that have no meaningful purpose, they're better suited for Bonus sets. These include leveling characters to the maximum level, maxing out stats, performing a task an absurd amount of times, etc. when none of those things award the player. A good example of something grindy that awards the player, thus making it suitable for a base set, is One of a Kind from Final Fantasy IV (SNES) , which requires a highly RNG-reliant grind for an item to trade for said armor. - Variety Packs - Want to do a mixture of Subset ideas all within one set because you don't want to do several different Subsets? Then do it and throw it in a Bonus set. - Showcasing of or Abuse of Glitches : Glitching can have unpredictable effects in a game's memory, which can result in unwanted behavior for some achievements, thus making them not suitable for a base set. Some examples of this are Replica from Final Fantasy VII (PlayStation) and Rare Candy Addiction from Pokemon - Red and Blue Versions (Game Boy .","title":"Bonus Sets"},{"location":"developers/subsets/#multi-sets","text":"This one is simple. If an achievement requires input from more than one player in order to unlock it, then it cannot be in the base set.","title":"Multi Sets"},{"location":"developers/subsets/#challenge-runs","text":"While many base sets include plenty of challenges, developers have the option to add challenges that last the duration of a game's playthrough to a Subset. These are typically self-imposed challenges that go against how a game is normally played. Examples: - Chrono Trigger - No Level Up - requires players to complete the game without ever leveling up their characters. - EarthBound - Rare Drops - requires players to obtain all the rare drops from enemies. - Final Fantasy - Solo Class - requires players to complete the game using only one character class, but they need to do it with every class to master the set. - Pokemon - Professor Oak Challenge - There are several of these so far! This challenge requires players to catch and/or evolve every Pokemon possible between major story points in the game. - Trails in the Sky FC - NG Nightmare - requires players to obtain 100% completion in a single, NG (New Game) playthrough on the Nightmare difficulty setting, as opposed to doing it on NG+ with carryovers.","title":"Challenge Runs"},{"location":"developers/subsets/#dlc-and-expansions","text":"Not very common, but will become more common as our console support expands. Achievements in these sets are exclusive to a game's downloadable content or expansion pack(s). Examples: - Arc the Lad 2 - Arc Arena: Monster Tournament - released as a bonus disc in the Arc the Lad Collection, this requires save data from Arc the Lad 2 in order to play. - F-Zero X - Expansion Kit - achievements are for content exclusive to the 64DD expansion of the game. - Return Fire - Maps o' Death - a separate release that provides additional maps to the game. It requires save data from the original game in order to play.","title":"DLC and Expansions"},{"location":"developers/subsets/#regional-differences","text":"If a regional variant of a game does not have enough differences to warrant a \"full\" set, but you don't want to include it with the base set due to interference with base challenges, you can make a Subset to showcase the differences.","title":"Regional Differences"},{"location":"developers/subsets/#naming-scheme","text":"To prevent players from getting confused, there is a specific naming scheme required for all Subsets: - Bonus Sets : Must have [Subset - Bonus] following the base game title. For example: Castlevania [Subset - Bonus] and Darkwing Duck [Subset - Bonus] . - Multi Sets : Must have [Subset - Multi] following the base game title. For example: Contra [Subset - Multi] and Kirby 64: THe Crystal Shards [Subset - Multi] . - Challenge Runs : Must have [Subset - Challenge Name/Type] following the base game title. For example: Chrono Trigger [Subset - No Level Up] and Pocket Monsters Midori [Subset - Monotype Challenge] . - DLC and Expansions : Must have [Subset - DLC/Expansion Name following the base game title. For example: Return Fire - [Subset - Maps o' Death] and F-Zero X [Subset - Expansion Kit]","title":"Naming Scheme"},{"location":"developers/subsets/#claims","text":"A developer does not need to claim an approved Subset if they are the sole author of the base set. If the developer is not the sole author of the base set, then they will need to post a plan in the forum and have it approved via revision voting. If a junior developer wants to publish a Subset alongside a core set, they need to have their plan approved by code reviewers.","title":"Claims"},{"location":"developers/subsets/#approval","text":"The following are types of Subsets that are approved by default: - Bonus - Multi - DLC/Expansions - Glitch Showcases - Regional Differences - Challenge Run: Low Level Game/No Leveling Runs - Challenge Run: Solo Class/Monotype Runs - Challenge Run: Checkpoint Challenges, such as Professor Oak Challenges - Challenge Run: Perma-Death Challenges, such as Nuzlocke Challenges Subsets that deviate from the above list, such as Rare Drops, will need to be approved by DevCompliance, which in turn may require a revision vote.","title":"Approval"},{"location":"developers/subsets/#how-do-i-create-a-subset","text":"In their current state, Subsets require a patch to modify the ROM. This ensures that the hash will be different so it can be linked to a separate entry. You should not use existing patches or alternate versions of the ROM since this can flag the hash when ran against existing DATs. In other words, the hash needs to be unique . If you do not know how to create one of these patches, you can contact RAdmin and request for one to be made.","title":"How Do I Create a Subset?"},{"location":"developers/subsets/#step-1-create-a-copy-of-the-original-game-rom","text":"This will be the file you will be editing to become the bonus set ROM","title":"Step 1 - Create a copy of the original game ROM"},{"location":"developers/subsets/#step-2-grab-a-hex-editor-or-sprite-hacking-tool","text":"You can skip this if you already have one. Several games already special ROM hacking tool chains. A lot of them are available on GitHub, but there's a plethora of them on ROMHacking.net that make the task easier. You'll need to use a more generic tool for a game that doesn't have one. The edit needs to be enough to create a new hash for the ROM file. Tools to edit your ROM can be found on ROMHacking.net's Utilities Page . Here are some narrowed searches which may help: Sprite Hacking tools - ROMHacking.net Filtered Search Text and text table hex editors - ROMHacking.net Filtered Search","title":"Step 2 - Grab a hex editor or sprite-hacking tool."},{"location":"developers/subsets/#step-3-create-a-bps-patch-for-the-rapatches-repository","text":"The easiest way to do this is with Floating IPS ; all you do is click \"Create Patch,\", select the unmodified ROM then modified ROM, and save a BPS patch. Providing this patch is a must as it ensures players will be able to play the bonus set. You can put the patch in the RAPatches repository by opening a pull request to add it to appropriate directory. If for any reason, you are not able to or are not comfortable doing so, you can contact RAdmin to make sure the patch finds its way into the repository.","title":"Step 3 - Create a BPS Patch for the RAPatches Repository"},{"location":"developers/subsets/#step-4-link-the-hash-to-the-bonus-set-entry","text":"Linking the hash is no different than any other game. Be sure to provide the hash information in #hash-links-log on the RetroAchievements Discord or in the game's forum topic. Make sure all necessary information in the bonus set's game entry is filled out.","title":"Step 4 - Link the Hash to the Bonus Set Entry"},{"location":"developers/subsets/#step-5-create-achievements-for-the-set-announce-and-release","text":"Again, just like any other set. Make sure the patch is linked in the forum so players are able to use it! Also, remember that it is against the rules to release the patched ROM itself! You must release the patch by itself to meet with guidelines on not publicly releasing copyrighted content on RetroAchievements).","title":"Step 5 - Create achievements for the set, announce, and release."},{"location":"developers/subsets/#to-do","text":"Game Icon guidelines for Subsets + include the border templates for Bonus and Multi icons.","title":"To Do"},{"location":"developers/tips-and-tricks/","text":"Memory Digging Tips \u00b6 See also: Memory Inspector Overview . Start with 8-bit view in the Memory Viewer. Looking at larger chunks of memory will complicate things, but it will make a seasoned developer's job easier. If you're just starting out and unaware of terms like endianess and bit ordering (or when the eyes are tired), its best to make your observations in 8-bit view. Its just easier! Uncheck \"Show Decimal Values\" in the Achievement Editor so you can enter the hex values you see in the Memory Viewer. Its better than using a programmers calculator! If you find an address, also search the same region surrounding it and you could find many more useful addresses. You can input values in the memory viewer to see if it affects the game. Even if something is visibly decreasing in-game, like health, memory can behave differently. It's possible for it to be increasing, so since it's uncommon for you to know for sure, prefer the != and = filters. If you absolutely cannot reduce the results of a filter, you can try guessing some values or at least how the value is acting ( > or < ). For example, no health is usually 0 , Stage 1 is usually value 0 , Stage 2 is usually value 1 depending on the type of game. 16/32 bit view : remember that when working with 16 or 32 bit address the address to the right comes first. Example: if in 8bit it looks like AB CD WX YZ , in 16 bit it becomes CDAB YZWX . This is called \" big endian byte ordering \". You can safely ignore the geek-speak by just remembering things are stored backwards in 16 bit view and above. Bit fields : Use single bits for things that only change a single bit. In the Memory Inspector, when an address is selected, there will be Bits: 7 6 5 4 3 2 1 0 above the addresses. And below those numbers will be either 0 or 1 , like 0 0 1 0 0 0 1 1 in the image below. If bit5 has 1 under it, then bit3=1 for that address. Single bit usage is very common for game items/events/unlocks/etc. This may be confusing, but it's very important to understand. Some games with limited memory space use bit fields a lot! Its an important technique to learn. Achievement Creation Tips \u00b6 See also: Unwelcome Concepts and Achievement Design . Never Avoid using only one condition as much as you can . When using only one condition the achievement will most likely pop at the wrong time. This is the most common error by a developer . If the game has a demo mode (AI plays the game after you wait a while on the title screen), make sure to find the address for it and add a condition so your achievements don't trigger in demo mode. You'll probably need to know how to use PauseIf and ResetIf . PauseIf cheat codes : If the game has a cheat code to increase lives, select stages, etc. Make sure to find the addresses for it and add some kind of protection in your achievements. If you wanna create an achievement for collecting a specific and unique item in the game, add some conditions to make sure the player got the item where it is supposed to be obtained, like in this template here . Otherwise the achievement may trigger by using password, loading a save game, etc. OR conditions : if you need OR conditions, you'll need Alt groups . Avoid Achievement spam . If a game has 100 levels, do not make an achievement for each level. Do every 25 or so. Consider the time segment a casual player would unlock these progressive Achievements in. If generally you could unlock all in a progressive set of Achievements of this nature in under half an hour as a casual player, that's filler design, and not recommended. Be Creative and Fun : Get as creative as possible with achievements. \"Beat X without using/doing Y\", \"Beat X in 5 seconds\", \"3 heart run\". Be sure casual players can still get these with their best effort. It isn't fun if its way too difficult for a casual player! (See: Bonus Set Tips below for the real challenges!). There is a whole page about Achievement Design that can give good advices on how to think about good achievements. Glitchless, please! : Do not make achievements requiring glitches. Glitches, in most cases, corrupt and destabilize game memory and RAM. They break the rest of the set to include. It is however, wise to code block walls stopping players from using them to get easy mastery. Avoid relying on text and graphics : Most of the time, an achievement that requires triggering a special event can be tied to an event flag (usually a single bit or byte), or to an item received by the player. It is better practice to use these values than to check the ID of text being displayed in a text box, or, even worse, video RAM (memory tied to the actual graphics displaying on the screen) as they are often less stable. Especially between different versions of a single game, and they are more difficult to debug. We love Art : Pretty badges are rewarding badges! It should visually represent the achievement itself, or hint at the location in the game for secrets. Matching to the game's art style works well. Google Image searches for \"Sprite Sheets\" is an useful tip to include some game art. If you're a good graphics artist, updating badges is your time to shine! More info can be found at the Badge and Icon Creation page . Regional Consideration : For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions making multi-region support difficult. Naming Convention Tips \u00b6 No Symbols : Do not use accented/special characters like the \u00e9 in Pokemon, as they currently break a few things (like feed). They are also not visible in search without the special character. Same for UTF-8 Universal Emoji codes. Allowed exception : Rich Presence Scripts . Mind your English : avoid grammar mistakes. As RetroAchievements is an international community, using English for Code Notes is a good practice, as another developer can use your notes in the future. Tricks \u00b6 Finding the address for Demo Mode \u00b6 An usual trick to start filtering addresses to find the Demo Mode is to let the demo begin and then start to filter = \"Last Known Value\" and press \"Filter\" many times, stopping right before the demo ends (be careful to not filter after the demo ends). Now start the game normally and when you're able to control the character change the filter to != and then filter one single time . The filtered addresses are the ones that has changed since the demo mode. Now change the filtering back to = and then start a sequence of play-and-filter. Which means play a bit, move around then scenario, defeat some enemies, and then filter. Pro tip : It is very very very useful to have savestates in different levels of the game, so you can do the play-and-filter in different scenarios and make the filtering more effective. After getting a few addresses as result, quite often the demo value will be 1 (sometimes it's also ff ). If you find a potential address edit it to 0 and check if you become able to control the character. If yes, BINGO!, that's the address you're looking for. Address Watcher \u00b6 Here's an easy trick using a dummy achievement to watch an address for any changes, which is something you'll quite often want to know. Conditions Explained Value 1 = Value 0 ; This is to prevent the achievement from ever being true, as the value 0 never equals 1. Value 1 = Value 1 ; For this trick to work the achievement needs hits to reset. When 1 = 1 hits will be added to this condition. ResetIf Mem 0x10 != Delta 0x10 ; This is the address you want to watch. Any time there is a change the achievement will reset. Last of all make sure that Pause on Reset and Active are both checked. Now you will get a pop-up and emulation will pause each time this address changes.","title":"Tips and Tricks"},{"location":"developers/tips-and-tricks/#memory-digging-tips","text":"See also: Memory Inspector Overview . Start with 8-bit view in the Memory Viewer. Looking at larger chunks of memory will complicate things, but it will make a seasoned developer's job easier. If you're just starting out and unaware of terms like endianess and bit ordering (or when the eyes are tired), its best to make your observations in 8-bit view. Its just easier! Uncheck \"Show Decimal Values\" in the Achievement Editor so you can enter the hex values you see in the Memory Viewer. Its better than using a programmers calculator! If you find an address, also search the same region surrounding it and you could find many more useful addresses. You can input values in the memory viewer to see if it affects the game. Even if something is visibly decreasing in-game, like health, memory can behave differently. It's possible for it to be increasing, so since it's uncommon for you to know for sure, prefer the != and = filters. If you absolutely cannot reduce the results of a filter, you can try guessing some values or at least how the value is acting ( > or < ). For example, no health is usually 0 , Stage 1 is usually value 0 , Stage 2 is usually value 1 depending on the type of game. 16/32 bit view : remember that when working with 16 or 32 bit address the address to the right comes first. Example: if in 8bit it looks like AB CD WX YZ , in 16 bit it becomes CDAB YZWX . This is called \" big endian byte ordering \". You can safely ignore the geek-speak by just remembering things are stored backwards in 16 bit view and above. Bit fields : Use single bits for things that only change a single bit. In the Memory Inspector, when an address is selected, there will be Bits: 7 6 5 4 3 2 1 0 above the addresses. And below those numbers will be either 0 or 1 , like 0 0 1 0 0 0 1 1 in the image below. If bit5 has 1 under it, then bit3=1 for that address. Single bit usage is very common for game items/events/unlocks/etc. This may be confusing, but it's very important to understand. Some games with limited memory space use bit fields a lot! Its an important technique to learn.","title":"Memory Digging Tips"},{"location":"developers/tips-and-tricks/#achievement-creation-tips","text":"See also: Unwelcome Concepts and Achievement Design . Never Avoid using only one condition as much as you can . When using only one condition the achievement will most likely pop at the wrong time. This is the most common error by a developer . If the game has a demo mode (AI plays the game after you wait a while on the title screen), make sure to find the address for it and add a condition so your achievements don't trigger in demo mode. You'll probably need to know how to use PauseIf and ResetIf . PauseIf cheat codes : If the game has a cheat code to increase lives, select stages, etc. Make sure to find the addresses for it and add some kind of protection in your achievements. If you wanna create an achievement for collecting a specific and unique item in the game, add some conditions to make sure the player got the item where it is supposed to be obtained, like in this template here . Otherwise the achievement may trigger by using password, loading a save game, etc. OR conditions : if you need OR conditions, you'll need Alt groups . Avoid Achievement spam . If a game has 100 levels, do not make an achievement for each level. Do every 25 or so. Consider the time segment a casual player would unlock these progressive Achievements in. If generally you could unlock all in a progressive set of Achievements of this nature in under half an hour as a casual player, that's filler design, and not recommended. Be Creative and Fun : Get as creative as possible with achievements. \"Beat X without using/doing Y\", \"Beat X in 5 seconds\", \"3 heart run\". Be sure casual players can still get these with their best effort. It isn't fun if its way too difficult for a casual player! (See: Bonus Set Tips below for the real challenges!). There is a whole page about Achievement Design that can give good advices on how to think about good achievements. Glitchless, please! : Do not make achievements requiring glitches. Glitches, in most cases, corrupt and destabilize game memory and RAM. They break the rest of the set to include. It is however, wise to code block walls stopping players from using them to get easy mastery. Avoid relying on text and graphics : Most of the time, an achievement that requires triggering a special event can be tied to an event flag (usually a single bit or byte), or to an item received by the player. It is better practice to use these values than to check the ID of text being displayed in a text box, or, even worse, video RAM (memory tied to the actual graphics displaying on the screen) as they are often less stable. Especially between different versions of a single game, and they are more difficult to debug. We love Art : Pretty badges are rewarding badges! It should visually represent the achievement itself, or hint at the location in the game for secrets. Matching to the game's art style works well. Google Image searches for \"Sprite Sheets\" is an useful tip to include some game art. If you're a good graphics artist, updating badges is your time to shine! More info can be found at the Badge and Icon Creation page . Regional Consideration : For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions making multi-region support difficult.","title":"Achievement Creation Tips"},{"location":"developers/tips-and-tricks/#naming-convention-tips","text":"No Symbols : Do not use accented/special characters like the \u00e9 in Pokemon, as they currently break a few things (like feed). They are also not visible in search without the special character. Same for UTF-8 Universal Emoji codes. Allowed exception : Rich Presence Scripts . Mind your English : avoid grammar mistakes. As RetroAchievements is an international community, using English for Code Notes is a good practice, as another developer can use your notes in the future.","title":"Naming Convention Tips"},{"location":"developers/tips-and-tricks/#tricks","text":"","title":"Tricks"},{"location":"developers/tips-and-tricks/#finding-the-address-for-demo-mode","text":"An usual trick to start filtering addresses to find the Demo Mode is to let the demo begin and then start to filter = \"Last Known Value\" and press \"Filter\" many times, stopping right before the demo ends (be careful to not filter after the demo ends). Now start the game normally and when you're able to control the character change the filter to != and then filter one single time . The filtered addresses are the ones that has changed since the demo mode. Now change the filtering back to = and then start a sequence of play-and-filter. Which means play a bit, move around then scenario, defeat some enemies, and then filter. Pro tip : It is very very very useful to have savestates in different levels of the game, so you can do the play-and-filter in different scenarios and make the filtering more effective. After getting a few addresses as result, quite often the demo value will be 1 (sometimes it's also ff ). If you find a potential address edit it to 0 and check if you become able to control the character. If yes, BINGO!, that's the address you're looking for.","title":"Finding the address for Demo Mode"},{"location":"developers/tips-and-tricks/#address-watcher","text":"Here's an easy trick using a dummy achievement to watch an address for any changes, which is something you'll quite often want to know. Conditions Explained Value 1 = Value 0 ; This is to prevent the achievement from ever being true, as the value 0 never equals 1. Value 1 = Value 1 ; For this trick to work the achievement needs hits to reset. When 1 = 1 hits will be added to this condition. ResetIf Mem 0x10 != Delta 0x10 ; This is the address you want to watch. Any time there is a change the achievement will reset. Last of all make sure that Pause on Reset and Active are both checked. Now you will get a pop-up and emulation will pause each time this address changes.","title":"Address Watcher"},{"location":"developers/working-with-the-right-rom/","text":"Related: Achievements for ROM hacks , Subsets Only one achievement set is allowed per game per console. This is true in cases of existing official revisions (ex. Rev 1), official and unofficial fix patches, and alternate regions. Subsets are an exception to this rule, but are considered an extension to a standard set and follow different rules for what types of achievements are allowed. Regional exceptions may exist -rarely- when regional variations massively change the game. ROM Selection \u00b6 Almost every game has multiple ROM versions available, sometimes dozens. Often there are major differences under the hood that prevent achievement compatibility between version. Because of this, finding the best ROM for achievements is critical and should be done carefully. Region Selection : For TV-connected consoles, when possible choose No-Intro (cartridge) or Redump (disc) NTSC USA release ROMs, because 60Hz is a smoother gaming experience and generally matches the intended play speed. PAL European releases run at 50Hz, and are to be avoided in most cases. NTSC Japan releases also run at 60Hz, but are only the best choice if the game was a Japan-exclusive release. PAL European releases should be used as a last resort only (Europe-only exclusive), and are typically limited to a very select few unique games from the entire console's library. Handheld consoles don't have regional timing differences, so language options should be prioritized there whenever possible. Revision Selection : Since revisions primarily contain bug and typo fixes, unless you have a -specific- reason not to, always choose the final revision. This will often save both players and developers headaches in the long run. Before working on a game, do a quick search for known revisional changes and take a look at TCRF to see if there's a reason to prefer an earlier revision. Ring Codes : Some systems, such as Sega Saturn, have multiple version of the game with different \"ring codes\". These are alphanumeric identifiers stamped on the inner ring of the physical discs. In most cases these will have no functional effect on the game or perhaps even the hash, but as mentioned with Revisions, check to see if there are known differences first. Format : For most systems this won't be an issue if you've used verified good dumps. For N64 in particular, games can exist in three formats based on the order of the bytes in the file: n64 (little endian), v64 (byteswapped), and z64 (big endian). Despite producing unique hashes, these three formats are identical for the same dump. Because big endian is the most accurate representation of the N64's cartridges, the big endian (z64) hash -must- be linked for any N64 game, in addition to whatever format you may wish to use personally as a developer. This ensures a single set of roms can consistently be used to play. If required, Tool64 can be used to change byte order. Arcade : Arcade ROMs are a bit of a special case because FBNeo mandates the exact contents of the game's archive. When different versions exist, the base version of the name should be preferred in general (for instance, mslug2 should be preferred over mslug2dg or mslug2t). This is merely a guideline, as there may be various reasons to prefer a different version. No Mods : Use a clean ROM. Do not use a ROM with a modded/custom launch screen such as Mode7 and RisingSun have because it changes RAM values and complicates users' ability to use their own legally dumped ROMs. No Trainers : Do not use a ROM that includes an integrated cheat feature. These are most often refereed to as after-market ROM trainers , are not official, and are not in any way supported by RetroAchievements. These ROMs cannot be linked even as secondary options. Preservation Groups \u00b6 No-Intro and Redump are the primary groups responsible for verifying clean dumps of console games, excluding all modifications and untrustworthy sources in the process. They offer dat files that can be used to verify your own dumps via a ROM manager. ROMs verified by these groups are preferred whenever possible, and can generally be identified by the following naming scheme: Game Name (Region) (Available Languages if Applicable) (Current Revision if Applicable) Example: Diddy Kong Racing (USA) (En,Fr) (Rev 1) TOSEC is another less restrictive preservation group. Their hashes often will match Redump for discs, but will frequently contain less thoroughly verified dumps. For floppy discs, cassettes, and less well-known systems where No-Intro and/or Redump verification aren't avaliable, TOSEC is a good fallback choice. You can verify that your ROM checksum matches the databases of No-Intro, Redump, or TOSEC either by using a rom manager with a dat provided by the preferred group or by verifying checksum manually and searching the dat for it in a text editor. Bear in mind that unlike a manual check, the rom manager may be able to skip over external headers to accurately verify integrity. Standard choices are clrmamepro and Romulus . Preferred Groups Per Console \u00b6 Console ID Console Name Preferred Group 01 Genesis Mega Drive No Intro 02 Nintendo 64 No Intro 03 Super Nintendo Super Famicom No Intro 03 Sufami Turbo No Intro 03 Satellaview No Intro 04 Game Boy No Intro 05 Game Boy Advance No Intro 06 Game Boy Color No Intro 07 NES Famicom No Intro 07 Famicom Disk System No Intro 08 TurboGrafx-16 PC Engine No Intro 08 SuperGrafx No Intro 08 TurboGrafx-CD PC Engine CD Redump 09 Sega CD Mega CD Redump 10 Sega 32X No Intro 11 Master System Mark III No Intro 12 PlayStation Redump 13 Atari Lynx No Intro 14 Neo Geo Pocket No Intro 14 Neo Geo Pocket Color No Intro 15 Game Gear No Intro 17 Atari Jaguar No Intro 18 Nintendo DS No Intro 23 Magnavox Odyssey 2 No Intro 24 Pokemon Mini No Intro 25 Atari 2600 No Intro 27 Arcade Final Burn Neo 28 Virtual Boy No Intro 29 MSX (Cartridges) No Intro 29 MSX (Disks) TOSEC 29 MSX2 (Cartridges) No Intro 29 MSX2 (Disks) TOSEC 33 SG-1000 No Intro 38 Apple II TOSEC 39 Sega Saturn Redump 40 Sega Dreamcast Redump 41 PlayStation Portable Redump 41 PlayStation Portable No Intro 43 3DO Redump 44 ColecoVision No Intro 45 Intellivision No Intro 46 Vectrex No Intro 47 NEC PC-8001 Neo Kobe 47 NEC PC-8001 TOSEC 47 NEC PC-8801 Neo Kobe 47 NEC PC-8801 TOSEC 49 NEC PC-FX Redump 51 Atari 7800 No Intro 53 WonderSwan No Intro 53 WonderSwan Color No Intro 63 Watara Supervision No Intro Translation patches \u00b6 (see also: ROM Localization Policy below) English is the Primary language of RetroAchievements. Translation Patches are sometimes applied by developers to non-English titles as the main hash for an achievement set where no licenced English version exists. In these cases patching instructions will be provided in the forum thread of that title. Whenever reasonable, the original unpatched version should still be supported as well. Sometimes translation patches may produce critically different memory from the linked hashes. All linked hashes are expected to be fully supported by the -entire- achievement set. If you can't personally guarantee this, don't link the hash. If you aren't the original developer of the set in question and the developer is active, verify memory personally using testing mode and contact the developer before attempting to add a new translation. ROM Localization Policy \u00b6 As English is the primary language of the community, English ROMs are preferred. When choosing which ROM to build achievements for, we give priority to No-Intro or Redump US ROMs for non-handheld consoles and European ROMs for handheld consoles . We would like to continue improving our support for all regional versions, especially Japanese (as the majority of our game library was created in Japan). Some users may also prefer a specific regional version of a game and it is better to include broad support so that any good ROM can link to a good entry and give appropriate achievements. That said, regional variants must still be fully supported, and 50Hz slowdown needs to be mitigated (via additional patches) or proven to be a non-issue when present. When looking at how games with regional versions are handled, our standard is one entry per game per console . It is ideal that if a player loads up the US or Japanese version of Donkey Kong, Pac-Man, or Contra, they will earn the same achievements from the same entry. As mentioned above, there are some extremely rare situations where it is better for our library and players to split off regional versions into their own unique entry. If the community has reason to believe that it's better for an entry to be split, it can be reviewed and approved by the RetroAchievements staff. Tip: For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions, making multi-region support difficult. Localization Differences \u00b6 The types of changes made during localization (most commonly from Japanese to English) can vary wildly. Any of the following changes may result from a localization: Little or no change at all; Passwords replace battery saves; Bugs fixed; Light or extensive translations; Light or extensive cosmetic changes including \"offensive\" elements being censored, sfx changes, licenced assets being replaced with generic ones, and/or unknown characters becoming Nintendoed (e.g. Tetris Attack, Super Mario Bros. 2); Stages added, modified or removed; Game physics and game mechanics modified; Game modes, difficulty levels and game options added or removed; Cheat codes or debug modes added or removed; Game rebalancing resulting in a harder or easier experience, sometimes significantly so; Two games combined into one; And more. Because of this variation and to avoid filling the database with unnecessary duplicates, our goal is to minimize the number of split sets. For a set to be split it needs compelling reasons; we take great care to determine when to approve these splits.","title":"Working with the Right ROM"},{"location":"developers/working-with-the-right-rom/#rom-selection","text":"Almost every game has multiple ROM versions available, sometimes dozens. Often there are major differences under the hood that prevent achievement compatibility between version. Because of this, finding the best ROM for achievements is critical and should be done carefully. Region Selection : For TV-connected consoles, when possible choose No-Intro (cartridge) or Redump (disc) NTSC USA release ROMs, because 60Hz is a smoother gaming experience and generally matches the intended play speed. PAL European releases run at 50Hz, and are to be avoided in most cases. NTSC Japan releases also run at 60Hz, but are only the best choice if the game was a Japan-exclusive release. PAL European releases should be used as a last resort only (Europe-only exclusive), and are typically limited to a very select few unique games from the entire console's library. Handheld consoles don't have regional timing differences, so language options should be prioritized there whenever possible. Revision Selection : Since revisions primarily contain bug and typo fixes, unless you have a -specific- reason not to, always choose the final revision. This will often save both players and developers headaches in the long run. Before working on a game, do a quick search for known revisional changes and take a look at TCRF to see if there's a reason to prefer an earlier revision. Ring Codes : Some systems, such as Sega Saturn, have multiple version of the game with different \"ring codes\". These are alphanumeric identifiers stamped on the inner ring of the physical discs. In most cases these will have no functional effect on the game or perhaps even the hash, but as mentioned with Revisions, check to see if there are known differences first. Format : For most systems this won't be an issue if you've used verified good dumps. For N64 in particular, games can exist in three formats based on the order of the bytes in the file: n64 (little endian), v64 (byteswapped), and z64 (big endian). Despite producing unique hashes, these three formats are identical for the same dump. Because big endian is the most accurate representation of the N64's cartridges, the big endian (z64) hash -must- be linked for any N64 game, in addition to whatever format you may wish to use personally as a developer. This ensures a single set of roms can consistently be used to play. If required, Tool64 can be used to change byte order. Arcade : Arcade ROMs are a bit of a special case because FBNeo mandates the exact contents of the game's archive. When different versions exist, the base version of the name should be preferred in general (for instance, mslug2 should be preferred over mslug2dg or mslug2t). This is merely a guideline, as there may be various reasons to prefer a different version. No Mods : Use a clean ROM. Do not use a ROM with a modded/custom launch screen such as Mode7 and RisingSun have because it changes RAM values and complicates users' ability to use their own legally dumped ROMs. No Trainers : Do not use a ROM that includes an integrated cheat feature. These are most often refereed to as after-market ROM trainers , are not official, and are not in any way supported by RetroAchievements. These ROMs cannot be linked even as secondary options.","title":"ROM Selection"},{"location":"developers/working-with-the-right-rom/#preservation-groups","text":"No-Intro and Redump are the primary groups responsible for verifying clean dumps of console games, excluding all modifications and untrustworthy sources in the process. They offer dat files that can be used to verify your own dumps via a ROM manager. ROMs verified by these groups are preferred whenever possible, and can generally be identified by the following naming scheme: Game Name (Region) (Available Languages if Applicable) (Current Revision if Applicable) Example: Diddy Kong Racing (USA) (En,Fr) (Rev 1) TOSEC is another less restrictive preservation group. Their hashes often will match Redump for discs, but will frequently contain less thoroughly verified dumps. For floppy discs, cassettes, and less well-known systems where No-Intro and/or Redump verification aren't avaliable, TOSEC is a good fallback choice. You can verify that your ROM checksum matches the databases of No-Intro, Redump, or TOSEC either by using a rom manager with a dat provided by the preferred group or by verifying checksum manually and searching the dat for it in a text editor. Bear in mind that unlike a manual check, the rom manager may be able to skip over external headers to accurately verify integrity. Standard choices are clrmamepro and Romulus .","title":"Preservation Groups"},{"location":"developers/working-with-the-right-rom/#preferred-groups-per-console","text":"Console ID Console Name Preferred Group 01 Genesis Mega Drive No Intro 02 Nintendo 64 No Intro 03 Super Nintendo Super Famicom No Intro 03 Sufami Turbo No Intro 03 Satellaview No Intro 04 Game Boy No Intro 05 Game Boy Advance No Intro 06 Game Boy Color No Intro 07 NES Famicom No Intro 07 Famicom Disk System No Intro 08 TurboGrafx-16 PC Engine No Intro 08 SuperGrafx No Intro 08 TurboGrafx-CD PC Engine CD Redump 09 Sega CD Mega CD Redump 10 Sega 32X No Intro 11 Master System Mark III No Intro 12 PlayStation Redump 13 Atari Lynx No Intro 14 Neo Geo Pocket No Intro 14 Neo Geo Pocket Color No Intro 15 Game Gear No Intro 17 Atari Jaguar No Intro 18 Nintendo DS No Intro 23 Magnavox Odyssey 2 No Intro 24 Pokemon Mini No Intro 25 Atari 2600 No Intro 27 Arcade Final Burn Neo 28 Virtual Boy No Intro 29 MSX (Cartridges) No Intro 29 MSX (Disks) TOSEC 29 MSX2 (Cartridges) No Intro 29 MSX2 (Disks) TOSEC 33 SG-1000 No Intro 38 Apple II TOSEC 39 Sega Saturn Redump 40 Sega Dreamcast Redump 41 PlayStation Portable Redump 41 PlayStation Portable No Intro 43 3DO Redump 44 ColecoVision No Intro 45 Intellivision No Intro 46 Vectrex No Intro 47 NEC PC-8001 Neo Kobe 47 NEC PC-8001 TOSEC 47 NEC PC-8801 Neo Kobe 47 NEC PC-8801 TOSEC 49 NEC PC-FX Redump 51 Atari 7800 No Intro 53 WonderSwan No Intro 53 WonderSwan Color No Intro 63 Watara Supervision No Intro","title":"Preferred Groups Per Console"},{"location":"developers/working-with-the-right-rom/#translation-patches","text":"(see also: ROM Localization Policy below) English is the Primary language of RetroAchievements. Translation Patches are sometimes applied by developers to non-English titles as the main hash for an achievement set where no licenced English version exists. In these cases patching instructions will be provided in the forum thread of that title. Whenever reasonable, the original unpatched version should still be supported as well. Sometimes translation patches may produce critically different memory from the linked hashes. All linked hashes are expected to be fully supported by the -entire- achievement set. If you can't personally guarantee this, don't link the hash. If you aren't the original developer of the set in question and the developer is active, verify memory personally using testing mode and contact the developer before attempting to add a new translation.","title":"Translation patches"},{"location":"developers/working-with-the-right-rom/#rom-localization-policy","text":"As English is the primary language of the community, English ROMs are preferred. When choosing which ROM to build achievements for, we give priority to No-Intro or Redump US ROMs for non-handheld consoles and European ROMs for handheld consoles . We would like to continue improving our support for all regional versions, especially Japanese (as the majority of our game library was created in Japan). Some users may also prefer a specific regional version of a game and it is better to include broad support so that any good ROM can link to a good entry and give appropriate achievements. That said, regional variants must still be fully supported, and 50Hz slowdown needs to be mitigated (via additional patches) or proven to be a non-issue when present. When looking at how games with regional versions are handled, our standard is one entry per game per console . It is ideal that if a player loads up the US or Japanese version of Donkey Kong, Pac-Man, or Contra, they will earn the same achievements from the same entry. As mentioned above, there are some extremely rare situations where it is better for our library and players to split off regional versions into their own unique entry. If the community has reason to believe that it's better for an entry to be split, it can be reviewed and approved by the RetroAchievements staff. Tip: For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions, making multi-region support difficult.","title":"ROM Localization Policy"},{"location":"developers/working-with-the-right-rom/#localization-differences","text":"The types of changes made during localization (most commonly from Japanese to English) can vary wildly. Any of the following changes may result from a localization: Little or no change at all; Passwords replace battery saves; Bugs fixed; Light or extensive translations; Light or extensive cosmetic changes including \"offensive\" elements being censored, sfx changes, licenced assets being replaced with generic ones, and/or unknown characters becoming Nintendoed (e.g. Tetris Attack, Super Mario Bros. 2); Stages added, modified or removed; Game physics and game mechanics modified; Game modes, difficulty levels and game options added or removed; Cheat codes or debug modes added or removed; Game rebalancing resulting in a harder or easier experience, sometimes significantly so; Two games combined into one; And more. Because of this variation and to avoid filling the database with unnecessary duplicates, our goal is to minimize the number of split sets. For a set to be split it needs compelling reasons; we take great care to determine when to approve these splits.","title":"Localization Differences"},{"location":"developers/features/alt-groups/","text":"Achievements can have groups added to them that allow for alternative requirements to unlock an achievement. These are called Alt Groups , When using Alt groups , for the achievement to trigger, all the conditions in the Core group MUST be true. And then all the conditions of ANY Alt group must be true. In other words, each Alt group uses OR logic. Example \u00b6 In this dummy example for Contra (NES) the achievement requires, \"While on stage look up or crouch.\" Lets look at what's in the Core group and in the Alt groups : In the core group: 0x18 = 5 . This checks that the player is on stage. In Alt 01 : 0xbc = 1 . This checks that the player is looking up. In Alt 02 : 0xbc = 2 . This checks that the player is crouching. As long as the player is on stage. The core group is true. If the player looks up, Alt 01 is true. If the player crouches, Alt 02 is true. If core + Alt 01 OR Alt 02 are true, the achievement will trigger. Facts about Alt Groups \u00b6 To add or remove Alt groups click the + or - button in the bottom left of the achievement editor. If you want to simply test for this OR that you can leave the core group blank and add this in Alt 01 , and that in Alt 02 . No matter how many Alt groups an achievement has, if the Core group is true, only one Alt has to be true for the achievement to trigger. When using ResetIf and PauseIf , PauseIf only pauses the group that it's in, but ResetIf resets hit counts in all groups and prevents achievements from triggering so long as the reset is active. Using Alt Groups for Conditional Resets \u00b6 Advanced: An Alt group can be used to create a ResetIf condition that is only active some of the time. If you create an Alt group containing a PauseIf condition and a ResetIf condition, you can use the PauseIf condition to disable the ResetIf condition under certain circumstances without disabling the entire achievement. The Reset will still affect all groups, including your core group. The Pause will only pause the Alt group containing the PauseIf. This logic can be applied to multiple Alt groups in the same achievement to protect several separate Reset statements. Make sure that you have at least one Alt group that will be true or the achievement won't trigger. The easiest way to do this is to create an extra alt group that has one condition that is Value 1 = Value 1 . Beware : If your Pause condition is false, and the Reset condition is also false, the group will be considered true unless you have another always false condition in the group. When using an Alt group to segregate a PauseIf, make sure to include an always false condition like Value 1 = Value 0 .","title":"Alt Groups"},{"location":"developers/features/alt-groups/#example","text":"In this dummy example for Contra (NES) the achievement requires, \"While on stage look up or crouch.\" Lets look at what's in the Core group and in the Alt groups : In the core group: 0x18 = 5 . This checks that the player is on stage. In Alt 01 : 0xbc = 1 . This checks that the player is looking up. In Alt 02 : 0xbc = 2 . This checks that the player is crouching. As long as the player is on stage. The core group is true. If the player looks up, Alt 01 is true. If the player crouches, Alt 02 is true. If core + Alt 01 OR Alt 02 are true, the achievement will trigger.","title":"Example"},{"location":"developers/features/alt-groups/#facts-about-alt-groups","text":"To add or remove Alt groups click the + or - button in the bottom left of the achievement editor. If you want to simply test for this OR that you can leave the core group blank and add this in Alt 01 , and that in Alt 02 . No matter how many Alt groups an achievement has, if the Core group is true, only one Alt has to be true for the achievement to trigger. When using ResetIf and PauseIf , PauseIf only pauses the group that it's in, but ResetIf resets hit counts in all groups and prevents achievements from triggering so long as the reset is active.","title":"Facts about Alt Groups"},{"location":"developers/features/alt-groups/#using-alt-groups-for-conditional-resets","text":"Advanced: An Alt group can be used to create a ResetIf condition that is only active some of the time. If you create an Alt group containing a PauseIf condition and a ResetIf condition, you can use the PauseIf condition to disable the ResetIf condition under certain circumstances without disabling the entire achievement. The Reset will still affect all groups, including your core group. The Pause will only pause the Alt group containing the PauseIf. This logic can be applied to multiple Alt groups in the same achievement to protect several separate Reset statements. Make sure that you have at least one Alt group that will be true or the achievement won't trigger. The easiest way to do this is to create an extra alt group that has one condition that is Value 1 = Value 1 . Beware : If your Pause condition is false, and the Reset condition is also false, the group will be considered true unless you have another always false condition in the group. When using an Alt group to segregate a PauseIf, make sure to include an always false condition like Value 1 = Value 0 .","title":"Using Alt Groups for Conditional Resets"},{"location":"developers/features/bitcount-size/","text":"BitCount is a shortcut for counting the number of bits set in a byte. BitCount Mem 0x1234 == Value 6 is the same as AddSource Bit0 Mem 0x1234 AddSource Bit1 Mem 0x1234 AddSource Bit2 Mem 0x1234 AddSource Bit3 Mem 0x1234 AddSource Bit4 Mem 0x1234 AddSource Bit5 Mem 0x1234 AddSource Bit6 Mem 0x1234 Bit7 Mem 0x1234 == Value 6 and would be true for 0x3F (00111111), 0xDB (11011011), 0xEE (11101110), etc. It's most common use is counting collectibles for a [[Measured|Measured Flag]] condition. It can be combined with other flags like [[Delta|Delta Values]]. BitCount Mem 0x1234 != BitCount Delta 0x1234 If you just want to make sure all the bits are set and don't need to worry about some subset of bits being set, you should check for concrete values (i.e. Eight Bit 0x1234 = 0xFF or Lower4 0x1234 = 0x0F ). WARNING : BitCount always counts all eight bits in a byte. If you only need 6 or 7 bits, you should use the AddSource chain in case the other bits are used for something else.","title":"BitCount Size"},{"location":"developers/features/condition-syntax/","text":"Memory sizes \u00b6 Size Prefix Example Bit0 0xM 0xM01234 Bit1 0xN 0xN01234 Bit2 0xO 0xO01234 Bit3 0xP 0xP01234 Bit4 0xQ 0xQ01234 Bit5 0xR 0xR01234 Bit6 0xS 0xS01234 Bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x 01234 24bit 0xW 0xW01234 32bit 0xX 0xX01234 16bit BE 0xI 0xI01234 24bit BE 0xJ 0xJ01234 32bit BE 0xG 0xG01234 BitCount 0xK 0xK01234 Float fF fF01234 MBF32 fM fM01234 Prefixes \u00b6 Modifier Prefix Example Delta d d0xH1234 Prior p p0xH1234 BCD b b0xH1234 Invert ~ ~0xH1234 Logical Flags \u00b6 Flag Prefix Example ResetIf R: R:0xH1234=1 ResetNextIf Z: Z:0xH1234=1 PauseIf P: P:0xH1234=1 AndNext N: N:0xH1234=1 OrNext O: O:0xH1234=1 AddSource A: A:0xH1234=1 SubSource B: B:0xH1234=1 AddHits C: C:0xH1234=1 SubHits D: D:0xH1234=1 AddAddress I: I:0xH1234=1 Measured M: M:0xH1234=1 Measured% G: G:0xH1234=1 MeasuredIf Q: Q:0xH1234=1 Trigger T: T:0xH1234=1","title":"Condition Syntax"},{"location":"developers/features/condition-syntax/#memory-sizes","text":"Size Prefix Example Bit0 0xM 0xM01234 Bit1 0xN 0xN01234 Bit2 0xO 0xO01234 Bit3 0xP 0xP01234 Bit4 0xQ 0xQ01234 Bit5 0xR 0xR01234 Bit6 0xS 0xS01234 Bit7 0xT 0xT01234 Lower4 0xL 0xL01234 Upper4 0xU 0xU01234 8bit 0xH 0xH01234 16bit 0x 0x 01234 24bit 0xW 0xW01234 32bit 0xX 0xX01234 16bit BE 0xI 0xI01234 24bit BE 0xJ 0xJ01234 32bit BE 0xG 0xG01234 BitCount 0xK 0xK01234 Float fF fF01234 MBF32 fM fM01234","title":"Memory sizes"},{"location":"developers/features/condition-syntax/#prefixes","text":"Modifier Prefix Example Delta d d0xH1234 Prior p p0xH1234 BCD b b0xH1234 Invert ~ ~0xH1234","title":"Prefixes"},{"location":"developers/features/condition-syntax/#logical-flags","text":"Flag Prefix Example ResetIf R: R:0xH1234=1 ResetNextIf Z: Z:0xH1234=1 PauseIf P: P:0xH1234=1 AndNext N: N:0xH1234=1 OrNext O: O:0xH1234=1 AddSource A: A:0xH1234=1 SubSource B: B:0xH1234=1 AddHits C: C:0xH1234=1 SubHits D: D:0xH1234=1 AddAddress I: I:0xH1234=1 Measured M: M:0xH1234=1 Measured% G: G:0xH1234=1 MeasuredIf Q: Q:0xH1234=1 Trigger T: T:0xH1234=1","title":"Logical Flags"},{"location":"developers/features/delta-values/","text":"A Delta value is the previous frame's value. Note : when you use Delta it is implicit that you are referring to an address and not a value. Examples of how it can be used: Detect if the level has been increased: level > delta level . It means \"current level is greater than the previous frame's level\". Detect damage: health < delta health . It means \"current health is smaller than the previous frame's health\". Or you can just make the previous frame's value a requirement. health delta = 1 means \"the previous frame's value for health must be 1 when the achievement pops up.\" In the Real Examples section there are some good examples: Using Hit Counts as a Timer Using Delta Values and Hit Counts to Detect an Increment Simple Example of How to Avoid Load State Abusing","title":"Delta Values"},{"location":"developers/features/hit-counts/","text":"In the Achievement Editor, the field on the far right side is Hit Count. The default is Zero, which means the condition must be true for the achievement to trigger. If you set a target hit count, like 5, it means the condition must be true for at least that many frames, and once that hit count target is met, it doesn't need to be met again at any other time. PLEASE NOTE : if a condition has a non-zero hit count, and reaches the number required, this condition is no longer tested. It remains true, UNLESS you have a ResetIf , which we will discuss below. Conditions with Reset If and PauseIf flags can also have hits. Follow the links for details. In the Real Examples section there are two examples good examples: Using Hit Counts as a Timer Using Delta Values and Hit Counts to Detect an Increment Simple Example of How to Avoid Load State Abusing Effect of Resetting the Emulator \u00b6 When the emulator is reset, all hits are immediately zeroed out and the achievement is set back to Waiting. However, an emulator reset does not clear out memory, so it's possible for the hits to reaccumulate before the game reinitializes the memory. As such, you should not rely on the hits being cleared out by the emulator reset. Similarly, when the emulator first \"powers on\", the state of memory is not guaranteed to be consistent as true hardware does not initialize its memory. Instead, the software sets some initial state when it claims portions of memory. Some games actually rely on the random nature of the uninitialized memory to seed their random number generators. For both cases, you should have an explicit reset for some piece of knowable logic, like the player being on the title screen.","title":"Hit Counts"},{"location":"developers/features/hit-counts/#effect-of-resetting-the-emulator","text":"When the emulator is reset, all hits are immediately zeroed out and the achievement is set back to Waiting. However, an emulator reset does not clear out memory, so it's possible for the hits to reaccumulate before the game reinitializes the memory. As such, you should not rely on the hits being cleared out by the emulator reset. Similarly, when the emulator first \"powers on\", the state of memory is not guaranteed to be consistent as true hardware does not initialize its memory. Instead, the software sets some initial state when it claims portions of memory. Some games actually rely on the random nature of the uninitialized memory to seed their random number generators. For both cases, you should have an explicit reset for some piece of knowable logic, like the player being on the title screen.","title":"Effect of Resetting the Emulator"},{"location":"developers/features/logic-features-home/","text":"There are several tools and options available to a developer. Knowing how to properly utilize them will improve the quality of your sets. These tools/options can be used in the Achievement Editor: For more help regarding these, our Discord server is always open for assistance. Here is the list of features available: Hit Counts Delta Values ResetIf Flag ResetIf with hit counts PauseIf Flag PauseIf with hit counts AddSource Flag SubSource Flag Checking for a negative result AddHits and SubHits Flag Combining Flags Alt Groups Minimum Required Versions for Logic Features","title":"Logic Features Home"},{"location":"developers/features/minimum-required-versions-for-logic-features/","text":"Sometimes it's useful to know when a feature was added/changed and the implications of these changes, specially if you are working on a ticket. Compare the ticket timestamp to the toolkit releases to determine which behavior the player would have been subject to. Feature RA_Integration RetroArch rcheevos Leaderboard Cancel AND 0.073 (31 Aug 2018) 1.7.0 (25 Dec 2017) n/a Full 32-bit value support 0.073 (31 Aug 2018) 1.7.0 (25 Dec 2017) n/a ResetIf/PauseIf HitCount 0.073 (31 Aug 2018) 1.7.4 (30 Aug 2018) n/a Leaderboard OR 0.073 (31 Aug 2018) 1.7.4 (30 Aug 2018) n/a Delay achievement processing for 100 frames on load 0.073 (31 Aug 2018) n/a n/a Replace 100 frame delay with delayed activation logic 0.075 (04 Feb 2019) 1.6.3 (28 Jul 2017) n/a AndNext 0.76 (21 Jun 2019) 1.7.7 (7 May 2019) 8.0 (4 May 2019) Prior 0.76 (21 Jun 2019) 1.7.7 (7 May 2019) 8.0 (4 May 2019) 24-bit read 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.0.1 (18 Jun 2019) AddAddress 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.1 (21 Nov 2019) Measured 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.1 (21 Nov 2019) Measured syntax for leaderboard values 0.77 (30 Nov 2019) 1.8.2 (25 Dec 2019) 8.1 (21 Nov 2019) Detect and report Unsupported achievements 0.79 (22 May 2021) 1.8.2 (25 Dec 2019) n/a OrNext 0.78 (18 May 2020) 1.8.7 (17 May 2020) 9.0 (9 May 2020) BitCount 0.78 (18 May 2020) 1.8.7 (17 May 2020) 9.0 (9 May 2020) MeasuredIf 0.78 (18 May 2020) 1.8.7 (17 May 2020) 9.0 (9 May 2020) Trigger 0.79 (22 May 2021) 1.8.7 (17 May 2020) 9.0 (9 May 2020) Include hits in save states 0.073 (31 Aug 2018) 1.9.1 (28-Mar 2021) 9.0 (9 May 2020) SubHits 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) ResetNextIf 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) Ranges in rich presence lookups 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) Maxof($) for Measured leaderboard values 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) ResetIf/PauseIf support for Measured leaderboard values 0.79 (22 May 2021) 1.9.4 (29 May 2021) 10.0 (15 May 2021) Big Endian memory reads 1.0 (29 Jan 2022) 1.9.9 (5 Sep 2021) 10.2 (27 Aug 2021) Measured raw/percent flag 1.0 (29 Jan 2022) 1.9.9 (5 Sep 2021) 10.2 (27 Aug 2021) Floating point memory reads 1.0 (29 Jan 2022) 1.10.1 (6 Mar 2022) 10.3 (14 Jan 2022) Built-in macros for rich presence 1.0 (29 Jan 2022) 1.10.1 (6 Mar 2022) 10.3 (14 Jan 2022)","title":"Minimum Required Versions for Logic Features"},{"location":"developers/features/prior-values/","text":"A Prior value is the previous value at an address. It is similar to Delta , except it's only updated when the current values changes, whereas Delta is updated every frame. Note : when you use Prior it is implicit that you are referring to an address and not a value. Examples of how it can be used: Ensures a player visited the previous level instead of using a password to get there: prior level = 6 would only be true if the player isn't currently on level 6, but hasn't been anywhere except the current level since being on level 6. If they came straight from the menu prior level would likely be 0. Comparison of memory types across several frames: \u00b6 Frame Mem Delta Prior 1 25 0 0 2 25 25 0 3 30 25 25 4 35 30 30 5 35 35 30 6 35 35 30 7 40 35 35 Delta is always one frame behind Mem. Prior is only updated when Mem changes.","title":"Prior Values"},{"location":"developers/features/prior-values/#comparison-of-memory-types-across-several-frames","text":"Frame Mem Delta Prior 1 25 0 0 2 25 25 0 3 30 25 25 4 35 30 30 5 35 35 30 6 35 35 30 7 40 35 35 Delta is always one frame behind Mem. Prior is only updated when Mem changes.","title":"Comparison of memory types across several frames:"},{"location":"developers/features/value-definition/","text":"Value definitions are used for leaderboards and rich presence . A value is calculated by evaluating one or more memory reads . Read values can be scaled (multiplication) or summed (addition) to arrive at the final value. NOTE : Value calculations are performed using 32-bit signed integers. As such, the maximum value is 2147483647 and the minimum value is -2147483648. Values above the maximum will wrap around and register as very negative numbers. Value from Measured \u00b6 Starting with the 0.77 DLL (and RetroArch 1.8.2), you can use the Measured flag to generate a Value. This supports all logic supported by the achievement editor, but every condition must have a flag that somehow influences the Measured value (i.e. AddSource , AddAddress ). Note that the Measured condition cannot have a multiplier directly on it. If the final clause needs to be multiplied, use an additional AddSource and Measure 0. VAL : A:0xhfe24_A:0xhfe25*60_A:0xhfe22*3600_M:0 The example provided above reads: AddSource 8-bit 0xfe24 AddSource 8-bit 0xfe25 * Value 60 AddSource 8-bit 0xfe22 * Value 3600 Measured Value 0 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database. Value from HitCount \u00b6 Sometimes you want to count the number of times something happens and submit that as the value. You can also do this using Measured syntax. Just add a comparison to your final condition. Do not include an explicit Hit target, or that will be the maximum value that can be submitted. The HitCount on the condition will automatically be set to 0 when the leaderboard starts, and the HitCount will be submitted as the Value when the leaderboard submit trigger activates. You can use PauseIf and ResetIf within the Value conditions to further control the behavior. For example: M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed while the leaderboard was active. N:0xH1234!=20_M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed to something other than 20 while the leaderboard was active. Legacy Syntax: \u00b6 VAL : 0xhfe24*1_0xhfe25*60_0xhfe22*3600 Before the introduction of the Measured flag, Values were written using their own syntax. Some people still prefer this syntax as it's generally easier to do by hand. A legacy value is the sum of a collection of memory values multiplied by modifiers. address*modifier (address times modifier) The _ underscore operator separates the individual values and acts as 'plus'. So the example above represents: 8-bit 0xfe24 times 1, PLUS 8-bit 0xfe25 times 60, PLUS 8-bit 0xfe22 times 3600 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database. To add a constant, use _vN where N is the constant in decimal (i.e. _v10 ) will add 10 to the result. You can also use negative values for N (i.e. _v-10 will subtract 10 from the result. Tip : modifier can be a non-integer value, so if you need to divide by two, you can multiply by 0.5: 0xhfe24*0.5 Modifiers \u00b6 Max of \u00b6 Multiple value calculations may be joined with a $ . This is similar to alt groups in a trigger, but instead of any one alt group needing to be true, whichever \"alt value\" is largest will be used as the overall value for the expression. M:0xH1234$M:0xH1235 would return the larger of the values at $1234 or $1235. Binary Inversion \u00b6 A single memory reference can be prefixed with a ~ to perform a binary inversion on it. After reading the value from memory, every bit is switches (0s become 1s, 1s become 0s). Typically, this is used to conditionally add or subtract a value: A:0xH1234*~0xM1233_M:0xH1235 will add the byte at $1234 to the byte at $1235 if bit0 of $1233 is not set. Binary Coded Decimal \u00b6 Binary Coded Decimal (BCD) is when a values in memory is stored as decimal digits in each hex digit location. For example, if the memory inspector shows 86 at a byte in memory, it would normally represent the decimal value 134 (0x86 hex = 134 decimal). BCD decoding the value keeps the individual decimal numbers and the result is 86 (0x86 hex = 86 BCD). You can have the runtime decode BCD values by putting a b prefix in front of the memory reference (i.e. b0xW1234 ). You still need to specify the size of the BCD memory address. b0x1234 reads a 16-bit value. b0xh1234 reads an 8-bit value and b0xX1234 reads a 32-bit value. NOTE: Support for 16-bit and 32-bit BCD decoding is a feature of the 0.075 toolkit.","title":"Value Definition"},{"location":"developers/features/value-definition/#value-from-measured","text":"Starting with the 0.77 DLL (and RetroArch 1.8.2), you can use the Measured flag to generate a Value. This supports all logic supported by the achievement editor, but every condition must have a flag that somehow influences the Measured value (i.e. AddSource , AddAddress ). Note that the Measured condition cannot have a multiplier directly on it. If the final clause needs to be multiplied, use an additional AddSource and Measure 0. VAL : A:0xhfe24_A:0xhfe25*60_A:0xhfe22*3600_M:0 The example provided above reads: AddSource 8-bit 0xfe24 AddSource 8-bit 0xfe25 * Value 60 AddSource 8-bit 0xfe22 * Value 3600 Measured Value 0 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database.","title":"Value from Measured"},{"location":"developers/features/value-definition/#value-from-hitcount","text":"Sometimes you want to count the number of times something happens and submit that as the value. You can also do this using Measured syntax. Just add a comparison to your final condition. Do not include an explicit Hit target, or that will be the maximum value that can be submitted. The HitCount on the condition will automatically be set to 0 when the leaderboard starts, and the HitCount will be submitted as the Value when the leaderboard submit trigger activates. You can use PauseIf and ResetIf within the Value conditions to further control the behavior. For example: M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed while the leaderboard was active. N:0xH1234!=20_M:0xH1234!=d0xH1234 Would submit the number of times the byte at $1234 changed to something other than 20 while the leaderboard was active.","title":"Value from HitCount"},{"location":"developers/features/value-definition/#legacy-syntax","text":"VAL : 0xhfe24*1_0xhfe25*60_0xhfe22*3600 Before the introduction of the Measured flag, Values were written using their own syntax. Some people still prefer this syntax as it's generally easier to do by hand. A legacy value is the sum of a collection of memory values multiplied by modifiers. address*modifier (address times modifier) The _ underscore operator separates the individual values and acts as 'plus'. So the example above represents: 8-bit 0xfe24 times 1, PLUS 8-bit 0xfe25 times 60, PLUS 8-bit 0xfe22 times 3600 The addresses represent frames, seconds, and minutes respectively, and are individually multiplied and then added together to create a total number of frames that can be submitted to the database. To add a constant, use _vN where N is the constant in decimal (i.e. _v10 ) will add 10 to the result. You can also use negative values for N (i.e. _v-10 will subtract 10 from the result. Tip : modifier can be a non-integer value, so if you need to divide by two, you can multiply by 0.5: 0xhfe24*0.5","title":"Legacy Syntax:"},{"location":"developers/features/value-definition/#modifiers","text":"","title":"Modifiers"},{"location":"developers/features/value-definition/#max-of","text":"Multiple value calculations may be joined with a $ . This is similar to alt groups in a trigger, but instead of any one alt group needing to be true, whichever \"alt value\" is largest will be used as the overall value for the expression. M:0xH1234$M:0xH1235 would return the larger of the values at $1234 or $1235.","title":"Max of"},{"location":"developers/features/value-definition/#binary-inversion","text":"A single memory reference can be prefixed with a ~ to perform a binary inversion on it. After reading the value from memory, every bit is switches (0s become 1s, 1s become 0s). Typically, this is used to conditionally add or subtract a value: A:0xH1234*~0xM1233_M:0xH1235 will add the byte at $1234 to the byte at $1235 if bit0 of $1233 is not set.","title":"Binary Inversion"},{"location":"developers/features/value-definition/#binary-coded-decimal","text":"Binary Coded Decimal (BCD) is when a values in memory is stored as decimal digits in each hex digit location. For example, if the memory inspector shows 86 at a byte in memory, it would normally represent the decimal value 134 (0x86 hex = 134 decimal). BCD decoding the value keeps the individual decimal numbers and the result is 86 (0x86 hex = 86 BCD). You can have the runtime decode BCD values by putting a b prefix in front of the memory reference (i.e. b0xW1234 ). You still need to specify the size of the BCD memory address. b0x1234 reads a 16-bit value. b0xh1234 reads an 8-bit value and b0xX1234 reads a 32-bit value. NOTE: Support for 16-bit and 32-bit BCD decoding is a feature of the 0.075 toolkit.","title":"Binary Coded Decimal"},{"location":"developers/features/flags/addaddress/","text":"AddAddress modifies the memory address(es) of the following condition by the calculated value. It works similar to AddSource , but modifies the address, not the resulting value. Additionally, it affects addresses on both sides of the condition. AddAddress only affects the next condition. If multiple AddAddress lines are chained together, each lookup in the chain will be altered; the values won't all be added to the final lookup. The 32-bit value at 0x0112F8 is a pointer to the data for the first character in the party. When the party order changes, the pointer will point at a different block of memory, but data within the block will have the same structure. The value is an address in the actual system representation and differs from the addresses provided by the memory inspector. However, you can rely on the fact that the memory inspector represents the same memory, so while the actual address may differ, the sequence of bytes does not. To translate the real pointer to a memory inspector address, we compare the two values. For example: The 32-bit value at 0x0112F8 is 0x800110B8. The memory we're interested in is at 0x011114 in the memory inspector. Using a 24-bit read instead of a 32-bit read gives us 0x0110B8 0x011114 - 0x0110B8 = 0x00005C, so that becomes the \"base address\" in the second condition. Types of Pointers \u00b6 AddAddress is how RAIntegration handles pointers. There are four major types of pointer support: Direct Pointer : The pointer contains another address that is referenced without modification. These are most commonly used for string pointers. To use a direct pointer, the base address to which the pointer is added would be 0. Indirect Pointer : The pointer contains another address that indicates the start of some block of data. The data of interest is a fixed number of bytes into the block of data. These are commonly used for attributes of a character/object. For both Direct and Indirect Pointers, the AddAddress line should reference the pointer, and the address in the following line should be the offset into the block of data for the information relevant to the condition. While you would typically use 0 for a Direct Pointers, the following line would also contain any value necessary to convert between a real address and a memory inspector address. The example above is an Indirect Pointer, where the data is 0x5C bytes into a block of data. The conversion from a real address to a memory inspector address is handled by using a 24-bit read instead of a 32-bit read. Array Index : The pointer contains an offset to apply to a fixed pointer. Scaled Array Index : The pointer contains an offset to apply to a fixed pointer after it has been scaled. For Array Indices, the AddAddress line should reference the offset to apply, and the following line should contain the address of the first element of the array (index 0). For example: AddAddress 16-bit Mem 0x1234 8-bit Mem 0x4567 Would read a 16-bit number from 0x1234 and read the single byte that is that many bytes after 0x4567. To scale an array index, click on the space in the Cmp column for the array index address and select the * symbol. Then enter the size of each array item in the second mem/val column. For example: AddAddress 16-bit Mem 0x1234 * Value 4 8-bit Mem 0x4567 Would read a 16-bit number from 0x1234, multiply it by 4, and read the single byte that is that many bytes after 0x4567. Chaining Pointers \u00b6 AddAddress can be chained to perform multi-step lookups, but only one step at a time. As such, you can reference data pointed at by a pointer that's pointed at by another pointer, but you can't reference data in an array that's pointed at by another pointer unless either the array or the array index is at a fixed address. Video Tutorial \u00b6 The experienced achievement creator wilhitewarrior made a nice video showing how to work with pointers and AddAddress flag. You can check it here: https://www.youtube.com/watch?v=_gk0vYYlm-E .","title":"AddAddress Flag"},{"location":"developers/features/flags/addaddress/#types-of-pointers","text":"AddAddress is how RAIntegration handles pointers. There are four major types of pointer support: Direct Pointer : The pointer contains another address that is referenced without modification. These are most commonly used for string pointers. To use a direct pointer, the base address to which the pointer is added would be 0. Indirect Pointer : The pointer contains another address that indicates the start of some block of data. The data of interest is a fixed number of bytes into the block of data. These are commonly used for attributes of a character/object. For both Direct and Indirect Pointers, the AddAddress line should reference the pointer, and the address in the following line should be the offset into the block of data for the information relevant to the condition. While you would typically use 0 for a Direct Pointers, the following line would also contain any value necessary to convert between a real address and a memory inspector address. The example above is an Indirect Pointer, where the data is 0x5C bytes into a block of data. The conversion from a real address to a memory inspector address is handled by using a 24-bit read instead of a 32-bit read. Array Index : The pointer contains an offset to apply to a fixed pointer. Scaled Array Index : The pointer contains an offset to apply to a fixed pointer after it has been scaled. For Array Indices, the AddAddress line should reference the offset to apply, and the following line should contain the address of the first element of the array (index 0). For example: AddAddress 16-bit Mem 0x1234 8-bit Mem 0x4567 Would read a 16-bit number from 0x1234 and read the single byte that is that many bytes after 0x4567. To scale an array index, click on the space in the Cmp column for the array index address and select the * symbol. Then enter the size of each array item in the second mem/val column. For example: AddAddress 16-bit Mem 0x1234 * Value 4 8-bit Mem 0x4567 Would read a 16-bit number from 0x1234, multiply it by 4, and read the single byte that is that many bytes after 0x4567.","title":"Types of Pointers"},{"location":"developers/features/flags/addaddress/#chaining-pointers","text":"AddAddress can be chained to perform multi-step lookups, but only one step at a time. As such, you can reference data pointed at by a pointer that's pointed at by another pointer, but you can't reference data in an array that's pointed at by another pointer unless either the array or the array index is at a fixed address.","title":"Chaining Pointers"},{"location":"developers/features/flags/addaddress/#video-tutorial","text":"The experienced achievement creator wilhitewarrior made a nice video showing how to work with pointers and AddAddress flag. You can check it here: https://www.youtube.com/watch?v=_gk0vYYlm-E .","title":"Video Tutorial"},{"location":"developers/features/flags/addhits-subhits/","text":"NOTE : This technique is not needed for simple games, so it is not mandatory for jr-devs. AddHits and SubHits can be chosen in the Flag column of the Achievement Editor. The AddHits / SubHits conditions do not have to be true for the achievement to trigger. They modify the hit count of another condition, which does have to be true for the achievement to trigger. The sequence of conditions is referred to as a AddHits chain (even if it contains SubHits ). When a condition with the AddHits / SubHits flag is true, the hit count for that condition is incremented. A hit target may be placed on the condition to keep it from tallying too many times. The total hit count of the final condition in a chain is incremented by the hit counts of any AddHits conditions in the chain, and decremented by any SubHits conditions in the chain. If the total hit count meets or exceeds the target hit count of the final condition, it's considered true. If the final condition of the chain does not have a hit target, the AddHits / SubHits conditions have no effect on the achievement. The final condition will be true if, and only if, it is true by itself. NOTE : The hit target on the final condition of the chain serves as both the overall target hit count and the maximum hit count for that condition. As a result, it is impossible to use SubHits without AddHits , as any hits subtracted by the SubHits could not be recovered without a separate AddHits . Similarly, if you need to put a condition-specific limit on the final condition of the chain, you should pull it out as an AddHits condition with the appropriate limit and use a dummy final condition with the overall hit target (i.e. 0=1 (10) ). The dummy condition would never accumulate any hits of its own, and only serve to tally the other values in the chain.","title":"AddHits and SubHits Flags"},{"location":"developers/features/flags/addsource/","text":"Note : most likely this technique is not needed for simple games. So, it's not mandatory for jr-devs. The AddSource can be chosen in the Flag column of the Achievement Editor When a condition has the Add Source flag, the value on that memory address is added to the value of the address on the condition right below, and the comparison is made on the condition below the one with the Add Source flag. It may sound a bit confusing, but the example below will clarify how this works: In this example the value in 0x8010 will be added to the value in 0x8020 and the comparison is if this sum is greater than zero. If the value in 0x8010 is 1 and the value in 0x8020 is 2 , the comparison will be 1 + 2 > 0 , or 3 > 0 . Note : All the comparison fields on the condition with the Add Source flag are ignored. Trying to summarize the explanation in an image: Note : you can use the Add Source flag to sum more addresses, like in the example below:","title":"AddSource Flag"},{"location":"developers/features/flags/andnext-ornext/","text":"AndNext and OrNext are used to associate more than one condition to a ResetIf , PauseIf , or Hit Count . AndNext and OrNext can be chosen in the Flag column of the Achievement Editor When a condition has the AndNext flag, the condition must be true in addition to the following condition for the following condition to be considered true. When a condition has the OrNext flag, the condition or the following condition must be true for the following condition to be considered true. You can chain multiple AndNext and OrNext conditions to create complex requirements for a single ResetIf , PauseIf , or Hit Count . When evaluating a combination of AndNext and OrNext conditions, each line is evaluated individually. AndNext A=1 OrNext B=1 AndNext C=1 OrNext D=1 AndNext E=1 ResetIf F=1 Represents the following logical statement: reset if (((((A = 1 && B = 1) || C = 1) && D = 1) || E = 1) && F = 1) Alt Groups are still preferred over OrNext for most use cases. They allow for multiple conditions to be present in each clause of the OR, and support more than two clauses. AndNext is not required for simple logic. All conditions in a group are automatically AND'd together. AndNext just allows for two or more conditions to affect a single PauseIf , ResetIf , or Hit Count .","title":"AndNext and OrNext Flags"},{"location":"developers/features/flags/measured/","text":"Measured marks a condition for tracking progress. It adds a progress bar to the achievement overlay to inform the user how close they are to completing an achievement. As the user expects an achievement to trigger when the progress bar is full, it is expected that any other conditions in the achievement should be true most of the time. If placed on a condition with a required HitCount , the target value is the required HitCount and the current value is the current HitCount. AddHits can be used. If placed on a condition without a HitCount, the target value is the constant on the right side of the condition and the current value is the evaluation of the left side of the condition. AddSource and SubSource can be used. If multiple conditions are marked as Measured and have the same target value, the current value will be the maximum of all the Measured conditions. If multiple conditions are marked as Measured and have different target values, a Parse Error -22 will occur. Note that progress for Measured values is reported at the time of examination and may actually go down depending on the current value (Hit Count could be reset, or comparison value decreases). To limit the scope of a Measured condition, you can add a MeasuredIf condition. A MeasuredIf condition must be true for the Measured value to be non-zero (and for the achievement to trigger). You can use MeasuredIf to create achievements that require playing as a certain character, or just to prevent bogus data from showing up if the player is in the wrong part of the game. If any MeasuredIf condition in a group is false, the Measured value for the group is automatically 0.","title":"Measured Flag"},{"location":"developers/features/flags/pauseif/","text":"The PauseIf can be chosen in the Flag column of the Achievement Editor. While true, the PauseIf pauses activity for most conditions in the same group . It does not pause conditions in other groups (more about Alt Groups below). Note : Keep in mind that PauseIf has priority over a ResetIf condition! In other words ResetIf won't work while a PauseIf is active in the same group . The PauseIf is usually used to prevent hit counts from going up during a specific situation (like when the game is paused). It's used when you want to keep previously earned hit count, but don't want to increment it or reset it while something else is going on. Also Note : A ResetNextIf condition attached to the active PauseIf condition is not paused. However, a ResetNextIf outside of the active PauseIf does get paused. This is the only case where a condition inside a paused group can still work. ResetNextIf attached to a PauseIf is useful for resetting a PauseIf with hit counts (see below) to unpause a group without resetting hit counts elsewhere in the group. PauseIf with hit counts \u00b6 A PauseIf condition with a hit count target will only trigger when the hit count target is met. Once the hit count target is met, the group remains paused until a ResetNextIf condition attached to the active PauseIf condition is true , or until a ResetIf condition in another group is true , or until the game is reset. A PauseIf without a hit count will unpause when the condition is no longer true.","title":"PauseIf Flag"},{"location":"developers/features/flags/pauseif/#pauseif-with-hit-counts","text":"A PauseIf condition with a hit count target will only trigger when the hit count target is met. Once the hit count target is met, the group remains paused until a ResetNextIf condition attached to the active PauseIf condition is true , or until a ResetIf condition in another group is true , or until the game is reset. A PauseIf without a hit count will unpause when the condition is no longer true.","title":"PauseIf with hit counts"},{"location":"developers/features/flags/resetif/","text":"The ResetIf can be chosen in the Flag column of the Achievement Editor If the associated condition is true, all hit counts in the achievement will be reset to 0. This includes hit counts in other groups (more about it in Alt Groups below). The achievement will not trigger if one or more ResetIf conditions is true, even if there are no conditions with hit count targets. You can see many examples of ResetIf in the Real Examples page . ResetIf with hit counts \u00b6 A Reset If condition with a hit count will only trigger when the hit count target is met. Note : If another ResetIf condition is met, all conditions, including the ResetIf with the hit count will have their hit counts reset to 0. It is very common to use a condition with a hit count of 1 as a start marker for an achievement, and use a ResetIf to cancel the achievement before the end condition is met. A common example is a damageless achievement: \"From start of (level/battle), reset if damage taken, trigger at end of (level/battle)\". When the start condition is true, a hit count is captured. If it's still set when the end condition is true, the achievement triggers. If the ResetIf condition triggers, the hit count on the start condition is set back to zero, which makes the condition false when evaluating the state when the end condition is true, and the achievement will not trigger.","title":"ResetIf Flag"},{"location":"developers/features/flags/resetif/#resetif-with-hit-counts","text":"A Reset If condition with a hit count will only trigger when the hit count target is met. Note : If another ResetIf condition is met, all conditions, including the ResetIf with the hit count will have their hit counts reset to 0. It is very common to use a condition with a hit count of 1 as a start marker for an achievement, and use a ResetIf to cancel the achievement before the end condition is met. A common example is a damageless achievement: \"From start of (level/battle), reset if damage taken, trigger at end of (level/battle)\". When the start condition is true, a hit count is captured. If it's still set when the end condition is true, the achievement triggers. If the ResetIf condition triggers, the hit count on the start condition is set back to zero, which makes the condition false when evaluating the state when the end condition is true, and the achievement will not trigger.","title":"ResetIf with hit counts"},{"location":"developers/features/flags/resetnextif/","text":"The ResetNextIf Flag is a special version of the [[ResetIf Flag]] that only resets the hit count of the following condition. ResetNextIf has the same priority as the condition that it's attached to. If followed by a PauseIf , it can be used to reset that specific PauseIf without needing an alt. If attached to a standard condition, it will not be processed if the achievement is paused. AddAddress , AddSource , and SubSource are combining modifier conditions and are not considered as the following condition. The ResetNextIf will apply to the next non-modified condition. AndNext and OrNext are combining logical conditions and will have their hit counts reset, as well as whatever condition follows them. All other condition flags, including AddHits and SubHits , will cause processing of the ResetNextIf behavior to stop.","title":"ResetNextIf Flag"},{"location":"developers/features/flags/subsource/","text":"Note : most likely this technique is not needed for simple games. So, it's not mandatory for jr-devs. The SubSource can be chosen in the Flag column of the Achievement Editor Works similarly to Add Source , but the Sub Source flag makes the value in the memory address have a negative value. Note 1 : Sub Source is NOT a subtraction flag. It just makes the value be negative. Note 2 : The final line (without Add Source or Sub Source ) is still added for the final comparison. Using that AddSource usecase example , if we replaced it with the Sub Source and with the same values ( value(0x8010) = 1 and value(0x8020) = 2 ), the comparison would be -1 + 2 > 0 , or 1 > 0 . Using SubSource to Count Specific Increments \u00b6 SubSource can also be used to track specific increases in addresses. The conditions below states that the current value in address 0x0080dc less the value in the previous frame in the same address must be equal 2 . Effectively, this means that the condition is true whenever the value in address 0x0080dc increases by exactly two. Checking for a negative result \u00b6 If the result of your Sub Source operation is a negative number, it is possible to check for it. This is how negative numbers are represented: -1 is 0xFFFFFFFF -2 is 0xFFFFFFFE -3 is 0xFFFFFFFD -4 is 0xFFFFFFFC -5 is 0xFFFFFFFB -6 is 0xFFFFFFFA -7 is 0xFFFFFFF9 and so on... So, let's say you want to check if value(0x8010) = 1 minus value(0x8020) = 2 equals -1 . This is how you would do it: This means -2 + 1 = -1 , which is true. Advanced : it is also possible to use straight negative numbers in the left section of your Sub/Add Source operations. To do so, remember to change the Type from Mem to Value , and use the values as explained above, such as 0xFFFFFFE5 for -27 , and 0xFFFFFFE3 for -29 , for example: This means -2 + (-27) = -29 , which is -2 - 27 = -29 , which is true. Take care, though, if you use a straight negative number in a Sub Source flag, it will result in a double negative, turning the number back to positive. Take a look: This means - (-2) + (-27) = -29 , which is 2 - 27 = -29 , which is -25 = -29 , which is false.","title":"SubSource Flag"},{"location":"developers/features/flags/subsource/#using-subsource-to-count-specific-increments","text":"SubSource can also be used to track specific increases in addresses. The conditions below states that the current value in address 0x0080dc less the value in the previous frame in the same address must be equal 2 . Effectively, this means that the condition is true whenever the value in address 0x0080dc increases by exactly two.","title":"Using SubSource to Count Specific Increments"},{"location":"developers/features/flags/subsource/#checking-for-a-negative-result","text":"If the result of your Sub Source operation is a negative number, it is possible to check for it. This is how negative numbers are represented: -1 is 0xFFFFFFFF -2 is 0xFFFFFFFE -3 is 0xFFFFFFFD -4 is 0xFFFFFFFC -5 is 0xFFFFFFFB -6 is 0xFFFFFFFA -7 is 0xFFFFFFF9 and so on... So, let's say you want to check if value(0x8010) = 1 minus value(0x8020) = 2 equals -1 . This is how you would do it: This means -2 + 1 = -1 , which is true. Advanced : it is also possible to use straight negative numbers in the left section of your Sub/Add Source operations. To do so, remember to change the Type from Mem to Value , and use the values as explained above, such as 0xFFFFFFE5 for -27 , and 0xFFFFFFE3 for -29 , for example: This means -2 + (-27) = -29 , which is -2 - 27 = -29 , which is true. Take care, though, if you use a straight negative number in a Sub Source flag, it will result in a double negative, turning the number back to positive. Take a look: This means - (-2) + (-27) = -29 , which is 2 - 27 = -29 , which is -25 = -29 , which is false.","title":"Checking for a negative result"},{"location":"developers/features/flags/trigger/","text":"Trigger marks one or more conditions in an achievement as the logic that is expected to be the final logic to become true which causes the achievement to trigger. This allows the runtime to know when an achievement is about to trigger, so a challenge indicator can be shown on the screen. When all conditions that must be true for the achievement to trigger are true except those marked with the Trigger flag, the achievement will become Primed. It will remain Primed as long as all of the previous conditions remain true, or until the achievement triggers or is deactivated. This functionality allows putting indicators on the screen to help players know when a challenge is active, or more importantly, when they fail the challenge. A prime example would be for a damageless boss fight. The Trigger flag would be put on the \"boss is dead\" condition. When all other conditions are true (ex: in boss fight, boss at full hp ( HitCount 1), not demo), the challenge indicator would be displayed. If the player takes damage, the HitCount on the \"boss at full hp\" condition would get reset, and the challenge indicator would go away. Up to eight challenge indicators can be shown at one time (though rarely more than one or two should be). If indicators and leaderboard trackers are both visible, the tracker will appear above the indicators. Interaction with PauseIf \u00b6 If the achievement is Paused while Primed, the indicator will become hidden. If it is Paused before it is Primed, the indicator will not be shown at all until the achievement is unpaused. When the achievement becomes unpaused, the indicator may be displayed or hidden depending on the state of the non-Trigger conditions.","title":"Trigger Flag"},{"location":"developers/features/flags/trigger/#interaction-with-pauseif","text":"If the achievement is Paused while Primed, the indicator will become hidden. If it is Paused before it is Primed, the indicator will not be shown at all until the achievement is unpaused. When the achievement becomes unpaused, the indicator may be displayed or hidden depending on the state of the non-Trigger conditions.","title":"Interaction with PauseIf"},{"location":"developers/realexamples/addsource-collectibles/","text":"In these examples are a couple simple ways one can utilize the Add Source flag in their achievement logic. First, we'll look at an achievement from Suikoden (PlayStation) entitled Treasure Hunter - Dragon Knights' Domain : Addresses Used 0x1b8244 : bit0-bit4 are treasures in Soniere, bit5 is a treasure at the Northern Checkpoint, and bit6-bit7 are treasures at the Dragon Den. 0x1b8245 : bit0 is a treasure at the Dragon Den, bit1-bit5 are treasures at Seek Valley, and bit6-7 are treasures in Kalekka. 0x1b824b : bit0-bit1 are treasures at the Village of the Hidden Rune, bit2 is unused, bit3-4 are treasures at the Dragon Knights' Fortress, bit5-6 are treasures in Teien, and bit7 is a treasure at Luiken's House. View Syntax A:d0xS1b8244_A:d0xT1b8244_A:d0xM1b8245_A:d0xN1b8245_A:d0xO1b8245_A:d0xP1b8245_A:d0xQ1b8245_A:d0xR1b8245_ A:d0xP1b824b_d0xQ1b824b=9_A:0xS1b8244_A:0xT1b8244_A:0xM1b8245_A:0xN1b8245_A:0xO1b8245_A:0xP1b8245_A:0xQ1b8245_ A:0xR1b8245_A:0xP1b824b_M:0xQ1b824b=10 This particular achievement only requires treasures from Dragon Knights' Fortress, Dragon Den, and Seek Valley; therefore, we only need bit6-7 from 0x1b8244 , bit0-bit5 from 0x1b8245 , and bit3-bit4 from 0x1b824b . Logic Breakdown There are two groups of ten conditions with the main differences being the Delta type and the total. This is to ensure that the player goes from nine of these treasures obtained to having all ten of these treasures obtained. Note: Remember to use hexadecimal for Add Source totals! Since we're using bitflags here, the totals for individual conditions will only ever be 0x00 or 0x01. Obviously, we want them all to be 0x01 for the trigger, but we don't want someone to get the achievement simply by loading a save with all ten treasures already found. The trigger is the first frame that the player goes from nine to ten treasures obtained. This is to help prevent the achievement from triggering when it's not supposed to. The Measured flag is on the last condition so the player can check how far they are from their goal. If they have eight out of ten treasures, the achievement will show that it is 80% complete in the overlay (RAEmus) or achievement menu (RetroArch). This method is mostly handy for when the totals between the Delta-type and Mem-type only have a difference of 0x01, but it can be used in various types of achievements: collectibles that are only obtainable one-at-a-time, map completion (such as dungeon-crawlers with viewable maps that get revealed as you enter new areas), learnable skills, completing a certain number of side missions, and many others.","title":"Using Add Source and Deltas for Collectibles or Similar Achievements"},{"location":"developers/realexamples/circumvent-the-problem-of-a-counter-incrementing-twice-in-the-same-frame/","text":"In this example you'll see how to circumvent the problem of a counter incrementing twice in the same frame by combining SubSource and AddHits . In the Game Boy Advance library there's a Christmas platformer game called Santa Claus Jr. Advance . There are some achievements for collecting all candy canes in each one of the bonus stages. Such achievements were supposed to be quite simple, like this: ID Special? Memory Cmp Type Mem/Val Hits 1 0xCANDIES != Delta 0xCANDIES (N) 2 ResetIf 0xSTAGE != Value 0xBONUS This translates into \"check if the candy canes counter changed N times in the bonus stage\". Note : we're using 0xCANDIES != Delta 0xCANDIES (using != , and not > ) cause when the player has 99 candies and collect one more, the counter goes to zero. However, there is an aspect in this game (and many others) where if the player collect 2 candy canes simultaneously the counter is increased by 2 in the same frame. When it happens the hit counter is increased by one while the candy counter is increased by two. This, obviously, ruins the logic used above. In order to circumvent this issue we have to use that technique of using SubSource to count specific increments combined with the AddHits flag . Let's take a look at the achievement logic and then we'll see the explanation: Addresses 0x80dc : Candy Canes counter. 0x809c : Stage ID. So now the structure of the achievement is going to be like this: Conditions Together with condition 2, is a trick used to check if 0xCANDIES - Delta 0xCANDIES = 2 . In other words, the candy counter was incremented by two. Used together with condition 1 (as explained above) and 3. As explained in its respective page , when the AddHits condition is true, the hit counter in the next condition is incremented. Therefore, in our example here, when condition 2 is true, the hitcounter in condition 3 is incremented. Count when the candy counter changes. Reset the counter if not in the Bonus stage. All these conditions could be translated as \"while in the bonus stage, trigger the achievement if the candy counter changes 99 times, and if the candy counter is incremented by 2 in the same frame, count an extra change in the candy counter.\" So, now it is 100% solved, right? Well, actually, almost. There is still a very minor exception. Remember it was said before that != was being used instead of > because when the player has 99 candies and collect one more, the counter goes to zero ? This means that, if we get two canes in the same frame (which is already rare), there's a very small possibility that this change will be from 98 -> 00 or from 99 -> 01 . In these only two cases our code won't work, because 00 - 98 is not 2, it is -98 . Same thing for 01 - 99 , it is not 2, it is also -98 . Despite being a very unlikely possibility, we should treat this case too. So we're gonna add two more requirements to the code, and it will end up looking like this: It is the same as before, with the only changes being lines 3 and 4, which represents an extra SubSource + Add Hits to check if 0xCANDIES - Delta 0xCANDIES = -98 , only to take care of this very minor exception just mentioned. And now it is solved!","title":"Circumvent the Problem of a Counter Incrementing Twice in the Same Frame"},{"location":"developers/realexamples/creating-a-timer-with-resetIf-hits-based-on-the-speed-of-the-game/","text":"In this example you will learn how to create an ingame Timer based on the framerate speed of the game. Every game has an address which is constantly increasing, it functions like a engine in a car which is constantly moving despite what you do and starts as soon you start the game, the game itself is your car and some cars are faster than others. Please note that PAL Games (50hz) have a lower framerate than NTSC Games (60hz) and aren't compatible with this method. It is recommended to create every Timer based on the NTSC version of the game, unless PAL version is the only version existing and there is no NTSC Patch available. Addresses 0x19 : Demo Mode: 01 =Active, 00 =Inactive 0x1a : Game Engine (speed based on framerate) 0x25 : Game Paused: 01 =Yes. 00 =No 0x2c : Game Progression: 03 =Before Stage starts, 04 =Stage started, 08 =Stage finished 0x30 : Stage ID (in this example, Stage 1) Link to Cheevo: Contra Speedrun YouTube: ResetIfHits Demo: Contra Stage 1 60 seconds Speedrun Conditions Activates the Cheevo's 'Hit' when entering a Stage ( 03 only appears once in each Stage). Triggers the Cheevo when a Stage has been finished. Current Stage (in this example, Stage 1). Paused the Cheevo if the Game is 'Paused' (Stops the Timer in the Cheevo). Resets the Cheevo if 60 seconds 3600 Hits are reached. 1 second = 60Hits (NTSC 60fps), 50Hits (PAL 50fps). Resets the Cheevo if Demo Mode is active. Resets the Cheevos Timer when entering a new Stage.","title":"Creating a Timer with ResetIf Hits based on the Speed of the Game"},{"location":"developers/realexamples/using-delta-values-and-hit-counts-to-detect-an-increment/","text":"Let's take Streets of Rage 2 (Mega Drive) as a case study, and Steel Grip - Defeat 10 enemies without dropping your weapon achievement. This relies on four conditions: Addresses 0xef33 : holding weapon 0xef37 : weapon type 0xef4e : number of KOs (player 1) Conditions the player is holding a weapon. We require this to be true, once. This is actually not necessary, but it's useful to show the progression. We are requiring the player to hold a weapon, at least once. number of KOs that the player has made. It's 16-bit (meaning the value can be more than 255), and by using the delta and 'greater than' symbols, we are saying that we require the number of KOs to be bigger than the previous value, and we need this to happen 10 unique times. Every time the current value is bigger than the previous value, the hit count will go up by one. The next frame, the 'delta' value will have increased to be the same as the current value, this ensures that after every kill, the KO counter will go up by one, and the hit count will go up by one. LIMITATION : if the number of KOs goes up by two in the same frame, the hit count will only go up by one. It's a slight flaw that does happen a little more often than expected... it's not so accurate but it's a fairly close estimate to your number of kills. reset all our progress, if the weapon type is different than the last known weapon type. reset all our progress, if the player is no longer carrying a weapon.","title":"Using Delta Values and Hit Counts to Detect an Increment"},{"location":"developers/realexamples/using-hit-counts-as-a-timer/","text":"In this example you'll see how hit counts can be used as a timer and award an achievement if a condition is true for 10 seconds. Let's see how Super Hang-On (Mega Drive) 's achievement Speed Freak - Maintain at least 300kph for 10 seconds looks like in Achievement Editor dialog: Addresses 0x0055a : is the speed. 0x0c757 : is 0x00 when the game is unpaused. In this achievement, we wish for there to be a fact or condition that is true 600 times consecutively. The reason for this is that the genesis is locked into processing 60 frames of logic per second (NTSC at least?). And the fact we're looking for is \"speed is over 300\". Also, we want the player to keep the speed above 300 without pausing the game. Conditions player's speed is above 300 for 600 frames (or 10 seconds have passed). reset the hit counter if speed is under 300. reset the hit counter if the player pause the game.","title":"Using Hit Counts as a Timer"},{"location":"developers/resources/links/","text":"Helpful Website Links \u00b6 https://datacrystal.romhacking.net/wiki/Main_Page - Defined RAM maps of many games. http://www.thealmightyguru.com/Games/Hacking/Wiki/index.php?title=Category:Games - Defined RAM maps of many NES games. https://gamehacking.org/ - Action Replay codes can be used to get defined memory address: Y \u2013 Address, X \u2013 Value 1-2 digit value will always be 8 bit \u2013 use 2 in front \u2013 22YYYYYY 000000XX 3-4 digit value will always be 16 bit \u2013 use 1 in front \u2013 12YYYYYY 0000XXXX 5-8 digit value will always be 32 bit \u2013 use 0 in front \u2013 02YYYYYY XXXXXXXX This will work for Action replay codes. For getting addresses out of GameGenie codes use this: ( outdated link, getting 404 ) http://www.d.umn.edu/~bold0070/projects/game_genie_codes/javascript_game_genie_encoders-decoders.html https://www.romhacking.net/ - biggest repository of hacked roms. https://tcrf.net/The_Cutting_Room_Floor - Great place to find Easter Eggs for your set plans. https://www.gamefaqs.com/ - Great place to find game guides, finding almost all you could want to know about game content, find cheat codes, for development utility and also for making proper protections against the codes. https://wiki.nesdev.com/w/index.php/CPU_memory_map - Shows sections of the NES memory so you'll know what area of the memory you're examining. For nes most useful addresses will be between 0x0000--0x07FF. https://datacrystal.romhacking.net/wiki/Hashes - Explains what hashes are. If you don't know what they are you should probably read this. https://emn178.github.io/online-tools/crc32_checksum.html - Drag and drop checksum checker utility. You can also get the checksum from the rom you have loaded from the retroachievements menu in the emulators. https://www.getpaint.net/ - Excellent freeware image editor. You can use it for making badges and icons. https://www.marcrobledo.com/RomPatcher.js/ - An online ROM patcher utility. https://gregstoll.dyndns.org/~gregstoll/floattohex/ - Floating point to decimal converter http://jsonviewer.stack.hu/ - Excellent for viewing raw achievements Turns this: Into this: Or get a plugin for Notepad++: - http://jsminnpp.sourceforge.net/ to do similar Speaking of Notepad++ - https://notepad-plus-plus.org/download/ - One of the best text editors and it's freeware (Windows only). Achievement Syntax \u00b6 This is a good reference sheet, it's especially useful for Rich Presence and Leaderboards, getting your deltas and bit labels right. For full size, right click an save image. A 32bit requires the prefix \"X\" as in 0xX63","title":"Links"},{"location":"developers/resources/links/#helpful-website-links","text":"https://datacrystal.romhacking.net/wiki/Main_Page - Defined RAM maps of many games. http://www.thealmightyguru.com/Games/Hacking/Wiki/index.php?title=Category:Games - Defined RAM maps of many NES games. https://gamehacking.org/ - Action Replay codes can be used to get defined memory address: Y \u2013 Address, X \u2013 Value 1-2 digit value will always be 8 bit \u2013 use 2 in front \u2013 22YYYYYY 000000XX 3-4 digit value will always be 16 bit \u2013 use 1 in front \u2013 12YYYYYY 0000XXXX 5-8 digit value will always be 32 bit \u2013 use 0 in front \u2013 02YYYYYY XXXXXXXX This will work for Action replay codes. For getting addresses out of GameGenie codes use this: ( outdated link, getting 404 ) http://www.d.umn.edu/~bold0070/projects/game_genie_codes/javascript_game_genie_encoders-decoders.html https://www.romhacking.net/ - biggest repository of hacked roms. https://tcrf.net/The_Cutting_Room_Floor - Great place to find Easter Eggs for your set plans. https://www.gamefaqs.com/ - Great place to find game guides, finding almost all you could want to know about game content, find cheat codes, for development utility and also for making proper protections against the codes. https://wiki.nesdev.com/w/index.php/CPU_memory_map - Shows sections of the NES memory so you'll know what area of the memory you're examining. For nes most useful addresses will be between 0x0000--0x07FF. https://datacrystal.romhacking.net/wiki/Hashes - Explains what hashes are. If you don't know what they are you should probably read this. https://emn178.github.io/online-tools/crc32_checksum.html - Drag and drop checksum checker utility. You can also get the checksum from the rom you have loaded from the retroachievements menu in the emulators. https://www.getpaint.net/ - Excellent freeware image editor. You can use it for making badges and icons. https://www.marcrobledo.com/RomPatcher.js/ - An online ROM patcher utility. https://gregstoll.dyndns.org/~gregstoll/floattohex/ - Floating point to decimal converter http://jsonviewer.stack.hu/ - Excellent for viewing raw achievements Turns this: Into this: Or get a plugin for Notepad++: - http://jsminnpp.sourceforge.net/ to do similar Speaking of Notepad++ - https://notepad-plus-plus.org/download/ - One of the best text editors and it's freeware (Windows only).","title":"Helpful Website Links"},{"location":"developers/resources/links/#achievement-syntax","text":"This is a good reference sheet, it's especially useful for Rich Presence and Leaderboards, getting your deltas and bit labels right. For full size, right click an save image. A 32bit requires the prefix \"X\" as in 0xX63","title":"Achievement Syntax"},{"location":"games/console-ids/","text":"Console ID Name Supported? 001 Mega Drive Yes 002 Nintendo 64 Yes 003 SNES Yes 004 Game Boy Yes 005 Game Boy Advance Yes 006 Game Boy Color Yes 007 NES Yes 008 PC Engine Yes 009 Sega CD Yes 010 32X Yes 011 Master System Yes 012 PlayStation Yes 013 Atari Lynx Yes 014 Neo Geo Pocket Yes 015 Game Gear Yes 016 GameCube 017 Atari Jaguar Yes 018 Nintendo DS Yes 019 Wii 020 Wii U 021 PlayStation 2 022 Xbox 023 Magnavox Odyssey 2 Yes 024 Pokemon Mini Yes 025 Atari 2600 Yes 026 DOS 027 Arcade Yes 028 Virtual Boy Yes 029 MSX Yes 030 Commodore 64 031 ZX81 032 Oric 033 SG-1000 Yes 034 VIC-20 035 Amiga 036 Atari ST 037 Amstrad CPC 038 Apple II Yes 039 Saturn Yes 040 Dreamcast Yes 041 PlayStation Portable Yes 042 Philips CD-I 043 3DO Interactive Multiplayer Yes 044 ColecoVision Yes 045 Intellivision Yes 046 Vectrex Yes 047 PC-8000/8800 Yes 048 PC-9800 049 PC-FX Yes 050 Atari 5200 051 Atari 7800 Yes 052 X68K 053 WonderSwan Yes 054 Cassette Vision 055 Super Cassette Vision 056 Neo Geo CD 057 Fairchild Channel F Yes 058 FM Towns 059 ZX Spectrum 060 Game & Watch 061 Nokia N-Gage 062 Nintendo 3DS 063 Watara Supervision Yes 064 Sharp X1 065 TIC-80 066 Thomson TO8 067 PC-6000 068 Sega Pico 069 Mega Duck Yes 070 Zeebo 071 Arduboy Yes 072 WASM-4 Yes 100 Hubs N/A 101 Events N/A","title":"Console ID List"},{"location":"games/game-identification/","text":"This page details the hashing method used for each supported system. First, systems where the entire game file is hashed are listed, and later systems where the RA hash may differ from the file MD5. Systems that Hash the Entire File \u00b6 Apple II \u00b6 NOTE : As saving and other manipulations can mutate disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions. Atari 2600 \u00b6 Atari Jaguar \u00b6 ColecoVision \u00b6 GameBoy \u00b6 GameBoy Color \u00b6 GameBoy Advance \u00b6 GameGear \u00b6 MSX \u00b6 NOTE : As saving mutates disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions. We do not believe this is working, but have yet to find a game where saving to disk actually works. N64 \u00b6 NOTE : This may result in three unique hashes for each game. The z64 extension is big endian (ABCD). The n64 extension is little endian (DCBA). And the v64 extension is middle endian (BADC). NeoGeo Pocket [Color] \u00b6 PC-8001 / PC-8801 \u00b6 NOTE : As saving and other manipulations can mutate disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions. Pokemon Mini \u00b6 Sega 32X \u00b6 Sega Master System \u00b6 Sega MegaDrive (Genesis) \u00b6 TIC-80 \u00b6 Vectrex \u00b6 VirtualBoy \u00b6 Watara Supervision \u00b6 WonderSwan [Color] \u00b6 Systems that Hash a Portion of the File \u00b6 3DO \u00b6 The volume header (first 132 bytes of sector 0) and the contents of the LaunchMe file are hashed. Arcade \u00b6 The filename string without the extension (path/galaga.zip -> galaga) is hashed. It is case-sensitive. Atari 7800 \u00b6 If the ROM starts with \\1ATARI7800 , the first 128 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with \\1ATARI7800 , the entire file is hashed. Atari Lynx \u00b6 If the ROM starts with LYNX\\0 , the first 64 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with LYNX\\0 , the entire file is hashed. Famicom Disk System \u00b6 If the ROM starts with FDS\\1a , the first 16 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with FDS\\1a , the entire file is hashed. NOTE : As saving mutates disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions. NES \u00b6 If the ROM starts with NES\\1a , the first 16 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with NES\\1a , the entire file is hashed. Nintendo DS \u00b6 A NDS ROM has a 0x160 byte header. In this header are pointers to icon/title information and to the boot code for both processors. The hash method combines the header, the two pieces of boot code, and the icon/title information and hashes the result. The icon/title information is 0xA00 bytes starting at the address stored in the header at $68 The arm9 code address is stored at $20 in the header, and the size is stored at $2C in the header The arm7 code address is stored at $30 in the header, and the size is stored at $3C in the header PCEngine (TurboGrafx16) \u00b6 If the size of the file is 512 bytes more than a multiple of 128KB, the first 512 bytes are ignored and the remaining file contents are hashed. If the size of the file is not 512 bytes more than a multiple of 128KB, the entire file is hashed. PC Engine CD \u00b6 The boot code and disc title are hashed as follows: * Read 128 bytes from sector 1 of the data track (PCE predates ISO-9660, so there's no file system to read). * If \"PC Engine CD-ROM SYSTEM\" does not exist at 32 bytes into the data, discard as invalid. * Copy the last 22 bytes of the data into a buffer. This is the disc title, and usually identifies the game. * The first three bytes of the data are a little-endian sector index for the boot code. * The fourth byte is the number of sectors that the boot code occupies. * The boot code is appended to the buffer (N sectors, starting at sector X) * The buffer is hashed. PC-FX \u00b6 The boot code and disc title are hashed as follows: * Read 32 bytes from sector 0 of the data track (PC-FX predates ISO-9660, so there's no file system to read). * If \"PC-FX:Hu_CD-ROM\" was not read, discard as invalid. * Read 128 bytes from sector 1 of the data track into a buffer. This is the volume header and includes the disc title. * The 32-bit value at 32-bytes into the buffer is the first sector of the boot code. * The 32-bit value at 36-bytes into the buffer is the number of sectors that the boot code occupies. * The boot code is appended to the buffer (N sectors, starting at sector X) * The buffer is hashed. PlayStation \u00b6 The primary executable and its name are hashed as follows: * The SYSTEM.CNF file is loaded and parsed. The primary executable is identified by the BOOT= line within. * The primary executable name (and its path) are extracted from SYSTEM.CNF and written to a buffer. * The contents of the primary executable are appended to the buffer. * The buffer is hashed. PlayStation 2 \u00b6 The primary executable and its name are hashed as follows: * The SYSTEM.CNF file is loaded and parsed. The primary executable is identified by the BOOT2= line within. * The primary executable name (and its path) are extracted from SYSTEM.CNF and written to a buffer. * The contents of the primary executable are appended to the buffer. * The buffer is hashed. Sega CD / Sega Saturn \u00b6 The first 512 bytes of track 0 are hashed. This contains the volume header and ROM header. The first 16 bytes must be \"SEGADISCSYSTEM \" for Sega CD or \"SEGA SEGASATURN \" for Sega Saturn. If not, discard as invalid. Immediately following those 512 bytes are an arbitrary amount of code that validates the region and loads the primary executable. Without processing the code, we cannot determine what additional file(s) to hash, so this was determined to be sufficient as an alternative to hashing the entire CD. SNES \u00b6 If the size of the file is 512 bytes more than a multiple of 8KB, the first 512 bytes are ignored and the remaining file contents are hashed. If the size of the file is not 512 bytes more than a multiple of 8KB, the entire file is hashed.","title":"Game Identification"},{"location":"games/game-identification/#systems-that-hash-the-entire-file","text":"","title":"Systems that Hash the Entire File"},{"location":"games/game-identification/#apple-ii","text":"NOTE : As saving and other manipulations can mutate disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions.","title":"Apple II"},{"location":"games/game-identification/#atari-2600","text":"","title":"Atari 2600"},{"location":"games/game-identification/#atari-jaguar","text":"","title":"Atari Jaguar"},{"location":"games/game-identification/#colecovision","text":"","title":"ColecoVision"},{"location":"games/game-identification/#gameboy","text":"","title":"GameBoy"},{"location":"games/game-identification/#gameboy-color","text":"","title":"GameBoy Color"},{"location":"games/game-identification/#gameboy-advance","text":"","title":"GameBoy Advance"},{"location":"games/game-identification/#gamegear","text":"","title":"GameGear"},{"location":"games/game-identification/#msx","text":"NOTE : As saving mutates disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions. We do not believe this is working, but have yet to find a game where saving to disk actually works.","title":"MSX"},{"location":"games/game-identification/#n64","text":"NOTE : This may result in three unique hashes for each game. The z64 extension is big endian (ABCD). The n64 extension is little endian (DCBA). And the v64 extension is middle endian (BADC).","title":"N64"},{"location":"games/game-identification/#neogeo-pocket-color","text":"","title":"NeoGeo Pocket [Color]"},{"location":"games/game-identification/#pc-8001-pc-8801","text":"NOTE : As saving and other manipulations can mutate disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions.","title":"PC-8001 / PC-8801"},{"location":"games/game-identification/#pokemon-mini","text":"","title":"Pokemon Mini"},{"location":"games/game-identification/#sega-32x","text":"","title":"Sega 32X"},{"location":"games/game-identification/#sega-master-system","text":"","title":"Sega Master System"},{"location":"games/game-identification/#sega-megadrive-genesis","text":"","title":"Sega MegaDrive (Genesis)"},{"location":"games/game-identification/#tic-80","text":"","title":"TIC-80"},{"location":"games/game-identification/#vectrex","text":"","title":"Vectrex"},{"location":"games/game-identification/#virtualboy","text":"","title":"VirtualBoy"},{"location":"games/game-identification/#watara-supervision","text":"","title":"Watara Supervision"},{"location":"games/game-identification/#wonderswan-color","text":"","title":"WonderSwan  [Color]"},{"location":"games/game-identification/#systems-that-hash-a-portion-of-the-file","text":"","title":"Systems that Hash a Portion of the File"},{"location":"games/game-identification/#3do","text":"The volume header (first 132 bytes of sector 0) and the contents of the LaunchMe file are hashed.","title":"3DO"},{"location":"games/game-identification/#arcade","text":"The filename string without the extension (path/galaga.zip -> galaga) is hashed. It is case-sensitive.","title":"Arcade"},{"location":"games/game-identification/#atari-7800","text":"If the ROM starts with \\1ATARI7800 , the first 128 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with \\1ATARI7800 , the entire file is hashed.","title":"Atari 7800"},{"location":"games/game-identification/#atari-lynx","text":"If the ROM starts with LYNX\\0 , the first 64 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with LYNX\\0 , the entire file is hashed.","title":"Atari Lynx"},{"location":"games/game-identification/#famicom-disk-system","text":"If the ROM starts with FDS\\1a , the first 16 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with FDS\\1a , the entire file is hashed. NOTE : As saving mutates disk data, local copies of loaded images are required to ensure that their hashes do not change across sessions.","title":"Famicom Disk System"},{"location":"games/game-identification/#nes","text":"If the ROM starts with NES\\1a , the first 16 bytes are ignored and the remaining file contents are hashed. If the ROM does not start with NES\\1a , the entire file is hashed.","title":"NES"},{"location":"games/game-identification/#nintendo-ds","text":"A NDS ROM has a 0x160 byte header. In this header are pointers to icon/title information and to the boot code for both processors. The hash method combines the header, the two pieces of boot code, and the icon/title information and hashes the result. The icon/title information is 0xA00 bytes starting at the address stored in the header at $68 The arm9 code address is stored at $20 in the header, and the size is stored at $2C in the header The arm7 code address is stored at $30 in the header, and the size is stored at $3C in the header","title":"Nintendo DS"},{"location":"games/game-identification/#pcengine-turbografx16","text":"If the size of the file is 512 bytes more than a multiple of 128KB, the first 512 bytes are ignored and the remaining file contents are hashed. If the size of the file is not 512 bytes more than a multiple of 128KB, the entire file is hashed.","title":"PCEngine (TurboGrafx16)"},{"location":"games/game-identification/#pc-engine-cd","text":"The boot code and disc title are hashed as follows: * Read 128 bytes from sector 1 of the data track (PCE predates ISO-9660, so there's no file system to read). * If \"PC Engine CD-ROM SYSTEM\" does not exist at 32 bytes into the data, discard as invalid. * Copy the last 22 bytes of the data into a buffer. This is the disc title, and usually identifies the game. * The first three bytes of the data are a little-endian sector index for the boot code. * The fourth byte is the number of sectors that the boot code occupies. * The boot code is appended to the buffer (N sectors, starting at sector X) * The buffer is hashed.","title":"PC Engine CD"},{"location":"games/game-identification/#pc-fx","text":"The boot code and disc title are hashed as follows: * Read 32 bytes from sector 0 of the data track (PC-FX predates ISO-9660, so there's no file system to read). * If \"PC-FX:Hu_CD-ROM\" was not read, discard as invalid. * Read 128 bytes from sector 1 of the data track into a buffer. This is the volume header and includes the disc title. * The 32-bit value at 32-bytes into the buffer is the first sector of the boot code. * The 32-bit value at 36-bytes into the buffer is the number of sectors that the boot code occupies. * The boot code is appended to the buffer (N sectors, starting at sector X) * The buffer is hashed.","title":"PC-FX"},{"location":"games/game-identification/#playstation","text":"The primary executable and its name are hashed as follows: * The SYSTEM.CNF file is loaded and parsed. The primary executable is identified by the BOOT= line within. * The primary executable name (and its path) are extracted from SYSTEM.CNF and written to a buffer. * The contents of the primary executable are appended to the buffer. * The buffer is hashed.","title":"PlayStation"},{"location":"games/game-identification/#playstation-2","text":"The primary executable and its name are hashed as follows: * The SYSTEM.CNF file is loaded and parsed. The primary executable is identified by the BOOT2= line within. * The primary executable name (and its path) are extracted from SYSTEM.CNF and written to a buffer. * The contents of the primary executable are appended to the buffer. * The buffer is hashed.","title":"PlayStation 2"},{"location":"games/game-identification/#sega-cd-sega-saturn","text":"The first 512 bytes of track 0 are hashed. This contains the volume header and ROM header. The first 16 bytes must be \"SEGADISCSYSTEM \" for Sega CD or \"SEGA SEGASATURN \" for Sega Saturn. If not, discard as invalid. Immediately following those 512 bytes are an arbitrary amount of code that validates the region and loads the primary executable. Without processing the code, we cannot determine what additional file(s) to hash, so this was determined to be sufficient as an alternative to hashing the entire CD.","title":"Sega CD / Sega Saturn"},{"location":"games/game-identification/#snes","text":"If the size of the file is 512 bytes more than a multiple of 8KB, the first 512 bytes are ignored and the remaining file contents are hashed. If the size of the file is not 512 bytes more than a multiple of 8KB, the entire file is hashed.","title":"SNES"},{"location":"games/games-home/","text":"Welcome to the RetroAchievements documentation! For community guidelines, you must know the RetroAchievements Manifesto","title":"Games Home"},{"location":"games/libretro-core-support/","text":"For a libretro core to support RetroAchievements, it must expose memory and it must not modify the game files. Everything else should be handled by the libretro frontend (i.e. RetroArch or RALibretro). Exposing Memory \u00b6 First, find the memory regions expected by RetroAchievements by looking for the mapping associated to the console in consoleinfo.c . It will look something like this: static const rc_memory_region_t _rc_memory_regions_pc_engine[] = { { 0x000000U, 0x001FFFU, 0x1F0000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM\" }, { 0x002000U, 0x011FFFU, 0x100000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"CD RAM\" }, { 0x012000U, 0x041FFFU, 0x0D0000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"Super System Card RAM\" }, { 0x042000U, 0x0427FFU, 0x1EE000U, RC_MEMORY_TYPE_SAVE_RAM, \"CD Battery-backed RAM\" } }; This example defines four regions of memory for the PC-Engine console. The first two fields are the starting and ending RetroAchievements address for the region. The third field is the starting real address for the region. The fourth field identifies the type of memory stored in the region, and the last field is a label for the region. Achievements rely almost entirely on system RAM and save RAM. There may be additional blocks in the memory map flagged as other types of memory. Those blocks are leftover from the way the memory way initially exposed by a standalone emulator. They can only be exposed by RETRO_ENVIRONMENT_SET_MEMORY_MAPS , and are almost never needed for achievement logic, so it's usually acceptable to not worry about them initially. If no memory map is provided, RetroAchievements doesn't support the system yet. Please contact us if you believe your core/system is ready to be supported. Exposing via retro_get_memory_data \u00b6 Memory can be exposed in two ways. The simplest is using the retro_get_memory_data / retro_get_memory_size functions. These functions will be called with RETRO_MEMORY_SYSTEM_RAM and RETRO_MEMORY_SAVE_RAM (when applicable). The functions return a single pointer and a size for a block of memory. This block of memory is then distributed to the memory regions until no more is available. Using the above example, the expectation would be that retro_get_memory_size(RETRO_MEMORY_SYSTEM_RAM) would return 0x42000 and retro_get_memory_size(RETRO_MEMORY_SAVE_RAM) would return 0x800, and retro_get_memory_data would return pointers to blocks of memory of the specified sizes. The 0x42000 bytes of system RAM would be distributed to the three blocks of RC_MEMORY_TYPE_SYSTEM_RAM , and the 0x800 bytes of save RAM would be associated to the one block of RC_MEMORY_TYPE_SAVE_RAM . If less than 0x42000 bytes is returned by retro_get_memory_size(RETRO_MEMORY_SYSTEM_RAM) , it will be associated to the three blocks of RC_MEMORY_TYPE_SYSTEM_RAM in a first-come, first-serve basis. The first 0x2000 bytes will be allocated to the first block. The next 0x10000 to the second block, and whatever is left to the third block. Whatever addresses could not be filled will be unavailable to the achievement code and achievements dependent on those addresses will be disabled. If more than 0x42000 bytes is returned by retro_get_memory_size(RETRO_MEMORY_SYSTEM_RAM) , only the first 0x42000 bytes will be allocated and the rest will be ignored. Exposing via RETRO_ENVIRONMENT_SET_MEMORY_MAPS \u00b6 The other way to expose memory is the RETRO_ENVIRONMENT_SET_MEMORY_MAPS environment callback. This callback allows the core to specify disparate chunks of memory without having to join them into a single byte array for access by retro_get_memory_data . Using the example above, unique pointers could be returned for each of the three blocks of system RAM, or even for subsections of each of the three blocks of system RAM. The RetroAchievements code will using the provided map to translate it's addresses to the appropriate core memory through the start/select/disconnect properties of the exposed memory. Addresses that cannot be mapped will be unavailable to the achievement code and achievements dependent on those addresses will be disabled. Special considerations \u00b6 Some maps contain comments indicating special considerations should be applied for the console. These usually have to do with paged memory. As the achievement code needs access to all memory, not just the currently paged memory, we often request that the entire unpaged memory be accessible. { 0x00C000U, 0x00CFFFU, 0x00C000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM (fixed)\" }, { 0x00D000U, 0x00DFFFU, 0x00D000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM (bank 1)\" }, /* GameBoy Color provides six extra banks of memory that can be paged out through the $DXXX * memory space, but the timing of that does not correspond with blanks, which is when achievements * are processed. As such, it is desirable to always have access to these extra banks. We do this * by expecting the extra banks to be addressable at addresses not supported by the native system. */ { 0x010000U, 0x015FFFU, 0x010000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM (banks 2-7, GBC only)\" } The GameBoy Color has 32KB of RAM broken into eight 4KB banks. Normally, the first bank is exposed at $C000, and the other seven banks are paged into the $D000 memory space. As RetroAchievements only process data once per frame, we can't rely on the correct data being in the $D000 page when we evaluate our logic, so we ask that $D000 always only contains bank 1, and banks 2-7 are exposed at 10000- 10000- 15FFF (addresses which are not normally used by the GameBoy Color). Immutable Game Data \u00b6 The other important thing for a core to consider is that the game files should not be modified. RetroAchievements hashes a portion of the game data (usually most or all of it) to ensure the player is using a compatible version of the game. If the hash doesn't match exactly, we don't enable achievements. This ensures that regional variants are only allowed if their memory lines up correctly. It also ensures players aren't playing on a hacked version where they have infinite health or some other cheat applied. If the game files are modified by the core, the hash may change and the game will no longer be identified. Any modifications to the game files should be handled through the retro_serialize interface. Core Settings \u00b6 If a user can manually change settings in the core that could make playing a game easier, please inform us so we can add them to a blacklist that disables hardcore when they're set. Common examples are: * running NTSC games in PAL mode slows them down by 16% * disabling layers allows players to see through fog-of-war * core provided cheats give infinite health/ammo/etc Save States \u00b6 While not required, save state support makes it much easier to develop and debug/fix achievements using the core. No special logic is required to support achievements in the save states - the frontend will handle that. Disabling Support \u00b6 If a core wishes to opt-out of achievement support, it can explicitly call the RETRO_ENVIRONMENT_SET_SUPPORT_ACHIEVEMENTS with false / 0 . This will disable the achievement subsystem while the core is loaded, which will avoid any attempts to identify if the loaded content has achievements, and disable all functionality limited by having achievement hardcore mode enabled (rewind, loading save states, slow-motion, cheats).","title":"Libretro Core Support"},{"location":"games/libretro-core-support/#exposing-memory","text":"First, find the memory regions expected by RetroAchievements by looking for the mapping associated to the console in consoleinfo.c . It will look something like this: static const rc_memory_region_t _rc_memory_regions_pc_engine[] = { { 0x000000U, 0x001FFFU, 0x1F0000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM\" }, { 0x002000U, 0x011FFFU, 0x100000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"CD RAM\" }, { 0x012000U, 0x041FFFU, 0x0D0000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"Super System Card RAM\" }, { 0x042000U, 0x0427FFU, 0x1EE000U, RC_MEMORY_TYPE_SAVE_RAM, \"CD Battery-backed RAM\" } }; This example defines four regions of memory for the PC-Engine console. The first two fields are the starting and ending RetroAchievements address for the region. The third field is the starting real address for the region. The fourth field identifies the type of memory stored in the region, and the last field is a label for the region. Achievements rely almost entirely on system RAM and save RAM. There may be additional blocks in the memory map flagged as other types of memory. Those blocks are leftover from the way the memory way initially exposed by a standalone emulator. They can only be exposed by RETRO_ENVIRONMENT_SET_MEMORY_MAPS , and are almost never needed for achievement logic, so it's usually acceptable to not worry about them initially. If no memory map is provided, RetroAchievements doesn't support the system yet. Please contact us if you believe your core/system is ready to be supported.","title":"Exposing Memory"},{"location":"games/libretro-core-support/#exposing-via-retro_get_memory_data","text":"Memory can be exposed in two ways. The simplest is using the retro_get_memory_data / retro_get_memory_size functions. These functions will be called with RETRO_MEMORY_SYSTEM_RAM and RETRO_MEMORY_SAVE_RAM (when applicable). The functions return a single pointer and a size for a block of memory. This block of memory is then distributed to the memory regions until no more is available. Using the above example, the expectation would be that retro_get_memory_size(RETRO_MEMORY_SYSTEM_RAM) would return 0x42000 and retro_get_memory_size(RETRO_MEMORY_SAVE_RAM) would return 0x800, and retro_get_memory_data would return pointers to blocks of memory of the specified sizes. The 0x42000 bytes of system RAM would be distributed to the three blocks of RC_MEMORY_TYPE_SYSTEM_RAM , and the 0x800 bytes of save RAM would be associated to the one block of RC_MEMORY_TYPE_SAVE_RAM . If less than 0x42000 bytes is returned by retro_get_memory_size(RETRO_MEMORY_SYSTEM_RAM) , it will be associated to the three blocks of RC_MEMORY_TYPE_SYSTEM_RAM in a first-come, first-serve basis. The first 0x2000 bytes will be allocated to the first block. The next 0x10000 to the second block, and whatever is left to the third block. Whatever addresses could not be filled will be unavailable to the achievement code and achievements dependent on those addresses will be disabled. If more than 0x42000 bytes is returned by retro_get_memory_size(RETRO_MEMORY_SYSTEM_RAM) , only the first 0x42000 bytes will be allocated and the rest will be ignored.","title":"Exposing via retro_get_memory_data"},{"location":"games/libretro-core-support/#exposing-via-retro_environment_set_memory_maps","text":"The other way to expose memory is the RETRO_ENVIRONMENT_SET_MEMORY_MAPS environment callback. This callback allows the core to specify disparate chunks of memory without having to join them into a single byte array for access by retro_get_memory_data . Using the example above, unique pointers could be returned for each of the three blocks of system RAM, or even for subsections of each of the three blocks of system RAM. The RetroAchievements code will using the provided map to translate it's addresses to the appropriate core memory through the start/select/disconnect properties of the exposed memory. Addresses that cannot be mapped will be unavailable to the achievement code and achievements dependent on those addresses will be disabled.","title":"Exposing via RETRO_ENVIRONMENT_SET_MEMORY_MAPS"},{"location":"games/libretro-core-support/#special-considerations","text":"Some maps contain comments indicating special considerations should be applied for the console. These usually have to do with paged memory. As the achievement code needs access to all memory, not just the currently paged memory, we often request that the entire unpaged memory be accessible. { 0x00C000U, 0x00CFFFU, 0x00C000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM (fixed)\" }, { 0x00D000U, 0x00DFFFU, 0x00D000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM (bank 1)\" }, /* GameBoy Color provides six extra banks of memory that can be paged out through the $DXXX * memory space, but the timing of that does not correspond with blanks, which is when achievements * are processed. As such, it is desirable to always have access to these extra banks. We do this * by expecting the extra banks to be addressable at addresses not supported by the native system. */ { 0x010000U, 0x015FFFU, 0x010000U, RC_MEMORY_TYPE_SYSTEM_RAM, \"System RAM (banks 2-7, GBC only)\" } The GameBoy Color has 32KB of RAM broken into eight 4KB banks. Normally, the first bank is exposed at $C000, and the other seven banks are paged into the $D000 memory space. As RetroAchievements only process data once per frame, we can't rely on the correct data being in the $D000 page when we evaluate our logic, so we ask that $D000 always only contains bank 1, and banks 2-7 are exposed at 10000- 10000- 15FFF (addresses which are not normally used by the GameBoy Color).","title":"Special considerations"},{"location":"games/libretro-core-support/#immutable-game-data","text":"The other important thing for a core to consider is that the game files should not be modified. RetroAchievements hashes a portion of the game data (usually most or all of it) to ensure the player is using a compatible version of the game. If the hash doesn't match exactly, we don't enable achievements. This ensures that regional variants are only allowed if their memory lines up correctly. It also ensures players aren't playing on a hacked version where they have infinite health or some other cheat applied. If the game files are modified by the core, the hash may change and the game will no longer be identified. Any modifications to the game files should be handled through the retro_serialize interface.","title":"Immutable Game Data"},{"location":"games/libretro-core-support/#core-settings","text":"If a user can manually change settings in the core that could make playing a game easier, please inform us so we can add them to a blacklist that disables hardcore when they're set. Common examples are: * running NTSC games in PAL mode slows them down by 16% * disabling layers allows players to see through fog-of-war * core provided cheats give infinite health/ammo/etc","title":"Core Settings"},{"location":"games/libretro-core-support/#save-states","text":"While not required, save state support makes it much easier to develop and debug/fix achievements using the core. No special logic is required to support achievements in the save states - the frontend will handle that.","title":"Save States"},{"location":"games/libretro-core-support/#disabling-support","text":"If a core wishes to opt-out of achievement support, it can explicitly call the RETRO_ENVIRONMENT_SET_SUPPORT_ACHIEVEMENTS with false / 0 . This will disable the achievement subsystem while the core is loaded, which will avoid any attempts to identify if the loaded content has achievements, and disable all functionality limited by having achievement hardcore mode enabled (rewind, loading save states, slow-motion, cheats).","title":"Disabling Support"},{"location":"games/no-console-id/","text":"Does Not Have Console ID \u00b6 Console ID Console Name Standalones Cores RALib Support Notes PocketStation pockystation Core doesn't seem functional even in Retroarch VMU VeMUlator Untested J2ME freej2me Untested","title":"No Console ID"},{"location":"games/no-console-id/#does-not-have-console-id","text":"Console ID Console Name Standalones Cores RALib Support Notes PocketStation pockystation Core doesn't seem functional even in Retroarch VMU VeMUlator Untested J2ME freej2me Untested","title":"Does Not Have Console ID"},{"location":"games/not-validated/","text":"Supported But Not Validated \u00b6 Console ID Console Name Standalones Cores RALib Support Notes 56 Neo Geo CD NeoCD \u2022 Appears fully functional \u2022 Needs hashing method 71 Arduboy Arduous \u2022 Appears fully functional \u2022 Needs hashing method","title":"Supported but Not Validated"},{"location":"games/not-validated/#supported-but-not-validated","text":"Console ID Console Name Standalones Cores RALib Support Notes 56 Neo Geo CD NeoCD \u2022 Appears fully functional \u2022 Needs hashing method 71 Arduboy Arduous \u2022 Appears fully functional \u2022 Needs hashing method","title":"Supported But Not Validated"},{"location":"games/requests/","text":"Earning Requests \u00b6 Players will earn 1 set request for every year their account has existed. Additional requests can be earned simply by earning achievements! - 1 request at 2500 and 5000 points. - 1 request at 10000, 15000, and 20000 points. - 1 request for every 10000 points from 20000 to 180000 points. - 1 request for every 20000 points from 180000 onward. Important Note! Requesting a set for a game is by no means a guarantee that it will get one any time soon! Using Requests \u00b6 If a game entry does not have an achievement set, it will have an option to request a set, which is located under the screenshots and game info. Viewing Requests \u00b6 You can click on the number of set requests to view all requests for a game:","title":"Requests"},{"location":"games/requests/#earning-requests","text":"Players will earn 1 set request for every year their account has existed. Additional requests can be earned simply by earning achievements! - 1 request at 2500 and 5000 points. - 1 request at 10000, 15000, and 20000 points. - 1 request for every 10000 points from 20000 to 180000 points. - 1 request for every 20000 points from 180000 onward. Important Note! Requesting a set for a game is by no means a guarantee that it will get one any time soon!","title":"Earning Requests"},{"location":"games/requests/#using-requests","text":"If a game entry does not have an achievement set, it will have an option to request a set, which is located under the screenshots and game info.","title":"Using Requests"},{"location":"games/requests/#viewing-requests","text":"You can click on the number of set requests to view all requests for a game:","title":"Viewing Requests"},{"location":"games/supported-consoles/","text":"Supported Consoles \u00b6 Console ID Console Name Standalones Cores RALib Support Notes 1 \u2022 Sega Genesis \u2022 Mega Drive Genesis Plus GX Picodrive Yes 2 Nintendo 64 Project64 ParaLLEl N64 Mupen64Plus-Next Yes 3 \u2022 SNES \u2022 Super Famicom \u2022 Satellaview \u2022 Sufami Turbo RASnes9x Snes9x Mesen-S Yes 4 Game Boy RAVBA Gambatte Gearboy VBA-M Yes \u2022 mGBA crashes when unloading the core because RALibretro doesn't implement the camera interface 5 Game Boy Advance RAVBA mGBA VBA-M Beetle GBA VBA Next Yes 6 Game Boy Color RAVBA Gambatte Gearboy VBA-M Yes 7 \u2022 NES \u2022 Famicom \u2022 Famicom Disk System RANes Mesen FCEUmm QuickNES Yes 8 \u2022 TurboGrafx-16 \u2022 PC Engine \u2022 TurboGrafx-CD \u2022 PC Engine CD \u2022 SuperGrafx Beetle PCE FAST Beetle SuperGrafx Yes \u2022 SuperGrafx games do not work on the Beetle PCE FAST core 9 \u2022 Mega CD \u2022 Sega CD Genesis Plus GX Yes Appears to still have unmapped RAM (Ecco 1+2) 10 Sega 32X PicoDrive Yes \u2022 Several games are problematic 11 \u2022 Master System \u2022 Mark III RAMeka Genesis Plus GX Gearsystem Picodrive Yes 12 PlayStation Beetle PSX Beetle PSX HW PCSX ReARMed SwanStation Yes 13 Atari Lynx Beetle Lynx Handy Yes 14 \u2022 Neo Geo Pocket \u2022 Neo Geo Pocket Color Beetle NeoPop Yes 15 Game Gear RAMeka Genesis Plus GX Gearsystem Yes 17 Atari Jaguar Virtual Jaguar Yes \u2022 No savestate support \u2022 Many issues with the emulation 18 Nintendo DS DeSmuME MelonDS Yes \u2022 Limited Microphone Support \u2022 No DSi support 23 Magnavox Odyssey 2 O2EM Yes 24 Pokemon Mini PokeMini Yes 25 Atari 2600 Stella Yes 27 Arcade FinalBurn Neo Yes \u2022 Needs Updated Board List \u2022 Some boards may not be fully exposed 28 Virtual Boy Beetle VB Yes 29 MSX/MSX2 blueMSX Yes \u2022 Hash relies on dsk file not being modified \u2022 .DSK files appear to be unsupported if they also require a cartridge (typically a \"sound\" cartridge, which was the case with SD Snatcher). There is a core option for this, but it doesn't seem to function properly. 33 SG-1000 RAMeka Genesis Plus GX blueMSX Yes 37 Amstrad CPC Cap32 Yes \u2022 Core does not currently support writing to disk - may affect hashing when implemented 38 Apple II RAppleWin No 39 Saturn Beetle Saturn Yabause Kronos Yes \u2022 Saving or Loading states in Kronos often locks up the UI in RALibretro 40 Dreamcast flycast Yes \u2022 Must disable threaded rendering to use save states 41 PlayStation Portable PPSSPP Yes \u2022 Loading save states too fast can cause it to crash \u2022 Some games have various graphical issues 43 3DO Interactive Multiplayer Opera Yes 44 ColecoVision RAMeka blueMSX Yes 45 Intellivision FreeIntV Yes \u2022 Controls are much better than they were \u2022 Crashes if game is reset \u2022 Some crashes that might be related to Intellivoice 46 Vectrex VecX Yes 47 \u2022 PC-8001 \u2022 PC-8801 RAQUASI88 QUASI88 No \u2022 QUASI88 crashes RALib when loading core . Core writes over dsk file when emulator writes to dsk - this breaks hashing \u2022 PC-88VA not supported 49 PC-FX Beetle PC-FX Yes 51 Atari 7800 ProSystem Yes 53 \u2022 WonderSwan \u2022 WonderSwan Color Beetle WonderSwan Yes 63 Watara Supervision Potator Yes","title":"Supported Consoles"},{"location":"games/supported-consoles/#supported-consoles","text":"Console ID Console Name Standalones Cores RALib Support Notes 1 \u2022 Sega Genesis \u2022 Mega Drive Genesis Plus GX Picodrive Yes 2 Nintendo 64 Project64 ParaLLEl N64 Mupen64Plus-Next Yes 3 \u2022 SNES \u2022 Super Famicom \u2022 Satellaview \u2022 Sufami Turbo RASnes9x Snes9x Mesen-S Yes 4 Game Boy RAVBA Gambatte Gearboy VBA-M Yes \u2022 mGBA crashes when unloading the core because RALibretro doesn't implement the camera interface 5 Game Boy Advance RAVBA mGBA VBA-M Beetle GBA VBA Next Yes 6 Game Boy Color RAVBA Gambatte Gearboy VBA-M Yes 7 \u2022 NES \u2022 Famicom \u2022 Famicom Disk System RANes Mesen FCEUmm QuickNES Yes 8 \u2022 TurboGrafx-16 \u2022 PC Engine \u2022 TurboGrafx-CD \u2022 PC Engine CD \u2022 SuperGrafx Beetle PCE FAST Beetle SuperGrafx Yes \u2022 SuperGrafx games do not work on the Beetle PCE FAST core 9 \u2022 Mega CD \u2022 Sega CD Genesis Plus GX Yes Appears to still have unmapped RAM (Ecco 1+2) 10 Sega 32X PicoDrive Yes \u2022 Several games are problematic 11 \u2022 Master System \u2022 Mark III RAMeka Genesis Plus GX Gearsystem Picodrive Yes 12 PlayStation Beetle PSX Beetle PSX HW PCSX ReARMed SwanStation Yes 13 Atari Lynx Beetle Lynx Handy Yes 14 \u2022 Neo Geo Pocket \u2022 Neo Geo Pocket Color Beetle NeoPop Yes 15 Game Gear RAMeka Genesis Plus GX Gearsystem Yes 17 Atari Jaguar Virtual Jaguar Yes \u2022 No savestate support \u2022 Many issues with the emulation 18 Nintendo DS DeSmuME MelonDS Yes \u2022 Limited Microphone Support \u2022 No DSi support 23 Magnavox Odyssey 2 O2EM Yes 24 Pokemon Mini PokeMini Yes 25 Atari 2600 Stella Yes 27 Arcade FinalBurn Neo Yes \u2022 Needs Updated Board List \u2022 Some boards may not be fully exposed 28 Virtual Boy Beetle VB Yes 29 MSX/MSX2 blueMSX Yes \u2022 Hash relies on dsk file not being modified \u2022 .DSK files appear to be unsupported if they also require a cartridge (typically a \"sound\" cartridge, which was the case with SD Snatcher). There is a core option for this, but it doesn't seem to function properly. 33 SG-1000 RAMeka Genesis Plus GX blueMSX Yes 37 Amstrad CPC Cap32 Yes \u2022 Core does not currently support writing to disk - may affect hashing when implemented 38 Apple II RAppleWin No 39 Saturn Beetle Saturn Yabause Kronos Yes \u2022 Saving or Loading states in Kronos often locks up the UI in RALibretro 40 Dreamcast flycast Yes \u2022 Must disable threaded rendering to use save states 41 PlayStation Portable PPSSPP Yes \u2022 Loading save states too fast can cause it to crash \u2022 Some games have various graphical issues 43 3DO Interactive Multiplayer Opera Yes 44 ColecoVision RAMeka blueMSX Yes 45 Intellivision FreeIntV Yes \u2022 Controls are much better than they were \u2022 Crashes if game is reset \u2022 Some crashes that might be related to Intellivoice 46 Vectrex VecX Yes 47 \u2022 PC-8001 \u2022 PC-8801 RAQUASI88 QUASI88 No \u2022 QUASI88 crashes RALib when loading core . Core writes over dsk file when emulator writes to dsk - this breaks hashing \u2022 PC-88VA not supported 49 PC-FX Beetle PC-FX Yes 51 Atari 7800 ProSystem Yes 53 \u2022 WonderSwan \u2022 WonderSwan Color Beetle WonderSwan Yes 63 Watara Supervision Potator Yes","title":"Supported Consoles"},{"location":"games/unsupported-consoles/","text":"Unsupported Consoles \u00b6 Console ID Console Name Standalones Cores RALib Support Notes 16 GameCube Dolphin Needs work Generates sound but not video in RALibretro 19 Wii Dolphin Needs work Crashes RALib when testing 20 Wii U Untested 21 PlayStation 2 Play! Low compatibility with most commercial games; black screen with stuttering sound 21 PlayStation 2 PCSX2 PCSX2 is still in an alpha state, does not yet expose memory 22 Xbox 26 DOS dosbox-pure Needs work \u2022 Needs a reliable hashing method \u2022 Needs a way to prevent launching with user-specified command-line parameters \u2022 Needs a way to prevent TSRs 30 Commodore 64 vice_x64 Needs Work \u2022 Save disks are generated with a virtual command ( #SAVEDISK: ) in the m3u (how to ignore for hashing?) \u2022 How to handle multi-disk games that come in a zip without an m3u ? 31 ZX81 EightyOne Needs Work \u2022 Memory not exposed. 32 Oric 34 Vic-20 Needs Work Untested with proper BIOS. 35 Amiga P-UAE Needs Work \u2022 Seems to run fine if zips are loaded. Memory is not exposed. 36 Atari ST Hatari Needs Work \u2022 Memory not exposed. Games seem to run fine. 42 Philips CD-I SAME CDi Untested 48 PC-9800 np2kai Needs Work \u2022 Memory is not exposed. It appears to be exposed in some games depending on the RAM size selected, but it seems like it's machine RAM and not actually related to the game(s). Performance wise, all games tested run without issues. 50 Atari 5200 Atari800 Needs Work \u2022 Appears to work fine, but the core itself is a bit of a headache. The BIOS has to be configured within the core (F1 > Emulator Configuration > System ROM settings). \u2022 Couldn't figure out controls - does Joystick also need to be configured within the core? \u2022 Currently allows loading arbitrary files from the internal menu, bypassing hashing. Can't be supported in hardcore unless that can somehow be blocked. 52 Sharp X68K px68k Crashes RALib upon loading a game 54 Cassette Vision 55 Super Cassette Vision Currently only playable in MAME, which cannot be supported 57 Fairchild Channel-F FreeChaF FBNeo FreeChaF exposes memory, but has some control issues FBNeo appears fine 58 FM Towns 59 ZX Spectrum FUSE \u2022 Requires rcheevos memory map to leverage memory descriptors \u2022 Requires ability to map keyboard to port 3 (RALibretro) \u2022 Uncertain about save support; cannot seem to insert save disk 60 Game & Watch gw \u2022 Doesn't expose memory yet 61 Nokia N-Gage 62 Nintendo 3DS Citra \u2022 Only exposes 64MB of memory - documentation suggests there should be 128MB. \u2022 Does not support save states 64 Sharp X1 X1 Millennium \u2022 Does not expose memory \u2022 Crashes RALibretro \u2022 Uncertain how core handles writing to disk/tape - may affect hashing 65 TIC-80 TIC-80 \u2022 Doesn't expose memory correctly (only see 8 bytes) 66 Thomson TO8/TO8D Theodore Seems to work. Uncertain how core handles writing to disk/tape - may affect hashing 67 PC-6001 N/A 68 Sega PICO Picodrive Can't be controlled fully, needs controls related to turning pages in attached books 69 Mega Duck SameDuck \u2022 Shares SameBoy's issue of reinitializing memory 70 Zeebo N/A","title":"Unsupported Consoles"},{"location":"games/unsupported-consoles/#unsupported-consoles","text":"Console ID Console Name Standalones Cores RALib Support Notes 16 GameCube Dolphin Needs work Generates sound but not video in RALibretro 19 Wii Dolphin Needs work Crashes RALib when testing 20 Wii U Untested 21 PlayStation 2 Play! Low compatibility with most commercial games; black screen with stuttering sound 21 PlayStation 2 PCSX2 PCSX2 is still in an alpha state, does not yet expose memory 22 Xbox 26 DOS dosbox-pure Needs work \u2022 Needs a reliable hashing method \u2022 Needs a way to prevent launching with user-specified command-line parameters \u2022 Needs a way to prevent TSRs 30 Commodore 64 vice_x64 Needs Work \u2022 Save disks are generated with a virtual command ( #SAVEDISK: ) in the m3u (how to ignore for hashing?) \u2022 How to handle multi-disk games that come in a zip without an m3u ? 31 ZX81 EightyOne Needs Work \u2022 Memory not exposed. 32 Oric 34 Vic-20 Needs Work Untested with proper BIOS. 35 Amiga P-UAE Needs Work \u2022 Seems to run fine if zips are loaded. Memory is not exposed. 36 Atari ST Hatari Needs Work \u2022 Memory not exposed. Games seem to run fine. 42 Philips CD-I SAME CDi Untested 48 PC-9800 np2kai Needs Work \u2022 Memory is not exposed. It appears to be exposed in some games depending on the RAM size selected, but it seems like it's machine RAM and not actually related to the game(s). Performance wise, all games tested run without issues. 50 Atari 5200 Atari800 Needs Work \u2022 Appears to work fine, but the core itself is a bit of a headache. The BIOS has to be configured within the core (F1 > Emulator Configuration > System ROM settings). \u2022 Couldn't figure out controls - does Joystick also need to be configured within the core? \u2022 Currently allows loading arbitrary files from the internal menu, bypassing hashing. Can't be supported in hardcore unless that can somehow be blocked. 52 Sharp X68K px68k Crashes RALib upon loading a game 54 Cassette Vision 55 Super Cassette Vision Currently only playable in MAME, which cannot be supported 57 Fairchild Channel-F FreeChaF FBNeo FreeChaF exposes memory, but has some control issues FBNeo appears fine 58 FM Towns 59 ZX Spectrum FUSE \u2022 Requires rcheevos memory map to leverage memory descriptors \u2022 Requires ability to map keyboard to port 3 (RALibretro) \u2022 Uncertain about save support; cannot seem to insert save disk 60 Game & Watch gw \u2022 Doesn't expose memory yet 61 Nokia N-Gage 62 Nintendo 3DS Citra \u2022 Only exposes 64MB of memory - documentation suggests there should be 128MB. \u2022 Does not support save states 64 Sharp X1 X1 Millennium \u2022 Does not expose memory \u2022 Crashes RALibretro \u2022 Uncertain how core handles writing to disk/tape - may affect hashing 65 TIC-80 TIC-80 \u2022 Doesn't expose memory correctly (only see 8 bytes) 66 Thomson TO8/TO8D Theodore Seems to work. Uncertain how core handles writing to disk/tape - may affect hashing 67 PC-6001 N/A 68 Sega PICO Picodrive Can't be controlled fully, needs controls related to turning pages in attached books 69 Mega Duck SameDuck \u2022 Shares SameBoy's issue of reinitializing memory 70 Zeebo N/A","title":"Unsupported Consoles"},{"location":"games/emulators/ragens/","text":"ha ha ha ha....!!","title":"RAGens"},{"location":"games/emulators/ralibretro/","text":"RALibretro is a multi-emulator that can be used to develop RetroAchievements. The \"multi-emulation\" feature is only possible because it uses libretro cores to do the actual emulation. What RALibretro does is to connect the emulation to the tools used to create RetroAchievements. WARNING \u00b6 RALibretro is a Work-in-Progress!!! Currently, the development is going on this repo: https://github.com/RetroAchievements/RALibretro Here's a list of known issues (feel free to report new issues if you find one): https://github.com/RetroAchievements/RALibretro/issues Installation Instructions \u00b6 Just download RALibretro from the Downloads page and unzip it. Basic Usage \u00b6 Launch RALibretro.exe Click on File > Load System , and click on the system you want to emulate Now go to File > Load Game and choose your ROM. Note : RALibretro currently doesn't accept zipped files! Now you can create your cheevos or just earn some! Supported Systems \u00b6 NOTE : some systems may require system (BIOS) files in the System directory in order to load games correctly. Here is a list of the systems supported currently: SNES NES Nintendo 64 Mega Drive Master System Gameboy Gameboy Color Gameboy Advance PC Engine (TurboGrafx-16/TurboGrafx-CD) Atari Lynx Game Gear Neo Geo Pocket Atari 2600 Atari 7800 Virtual Boy Neo Geo (Arcade) - new. NOTE : you need to put the neogeo.zip BIOS file on the same directory as the ROMs. Capcom Play System 1, 2 and 3 (Arcade) - new Keyboard Input \u00b6 Keyboard a s z x d c f v Enter Tab g h RetroPad Y X B A L R L2 R2 Start Select L3 R3 SNES Y X B A L R Start Select NES B A Swap disk side (FDS) Insert/Eject disk (FDS) Start Select Mega Drive A Y B C X Z Start Master System B A Start GameGear B A Start Gameboy [Color] B A Start Select Gameboy Advance B A L R Start Select PC Engine II I Run Select Atari Lynx B A Option 1 Option 2 Start Neo Geo Pocket B A Start Atari 2600 o L difficulty b R difficulty b L difficulty a R difficulty a Start Select Neo Geo C D A B Start Coin CPS\u00bd/3* * * * * * * Start Coin Note : the buttons for CPS\u00bd/3 games vary for each game. Keyboard Shortcuts \u00b6 see overlay : Esc pause emulation : p advance one frame at a time : ; (automatically pauses emulation) fast forward : = fast forward toggle : - (minus signal) Screenshot : PrintScreen Save/Load state keys \u00b6 Save state current slot : Backspace Load state current slot : F11 Load state from slot 1, 2, .., 9, 0 : F1 , F2 , ..., F9 , F10 Save state to slot 1, 2, .., 9, 10 : shift + F1 , shift + F2 , ..., shift + F9 , shift + F10 Previous slot : shift + - Next slot : shift + + Switch slot : 0 , 1 , 2 ,..., 9 Missing Features \u00b6 feedback to the user when save/load state, pausing, etc. N64 support load zipped ROMs input configuration more issues listed here: https://github.com/RetroAchievements/RALibretro/issues How to make AES BIOS work in RALibretro or RetroArch \u00b6 To make AES BIOS emulation mode work in your emulator: Make sure your emulator works correctly. Put neogeo.zip to System directory (RALibretro), or a folder you keep your NeoGeo ROMs (RetroArch). Make sure the neogeo.zip consist of at least files you can see here: If you keep only those files, AES mode will be automatically forced for any NeoGeo game (recommended). Important! The files which are highlighted on this picture ( neo-epo.bin and neo-po.bin ) are the only one actually related to AES mode, and you probably will need to include them in your archive to make AES mode work for you. neo-po.bin is necessary for japanese-only titles or to make the japanese versions to work, but due to emulation issue it also forces japanese language as default, that's why you will need to remove it to display english in some games. Load any FBA compatible neo geo ROM. More complete archive (including files needed to run MVS and UniBIOS modes) might need additional configuration to force AES mode: In RaLibretro: Settings->Emulation->Force Neo Geo Mode->AES In RetroArch: Command->Menu Toggle->Options->Force Neo Geo Mode->AES","title":"RALibretro"},{"location":"games/emulators/ralibretro/#warning","text":"RALibretro is a Work-in-Progress!!! Currently, the development is going on this repo: https://github.com/RetroAchievements/RALibretro Here's a list of known issues (feel free to report new issues if you find one): https://github.com/RetroAchievements/RALibretro/issues","title":"WARNING"},{"location":"games/emulators/ralibretro/#installation-instructions","text":"Just download RALibretro from the Downloads page and unzip it.","title":"Installation Instructions"},{"location":"games/emulators/ralibretro/#basic-usage","text":"Launch RALibretro.exe Click on File > Load System , and click on the system you want to emulate Now go to File > Load Game and choose your ROM. Note : RALibretro currently doesn't accept zipped files! Now you can create your cheevos or just earn some!","title":"Basic Usage"},{"location":"games/emulators/ralibretro/#supported-systems","text":"NOTE : some systems may require system (BIOS) files in the System directory in order to load games correctly. Here is a list of the systems supported currently: SNES NES Nintendo 64 Mega Drive Master System Gameboy Gameboy Color Gameboy Advance PC Engine (TurboGrafx-16/TurboGrafx-CD) Atari Lynx Game Gear Neo Geo Pocket Atari 2600 Atari 7800 Virtual Boy Neo Geo (Arcade) - new. NOTE : you need to put the neogeo.zip BIOS file on the same directory as the ROMs. Capcom Play System 1, 2 and 3 (Arcade) - new","title":"Supported Systems"},{"location":"games/emulators/ralibretro/#keyboard-input","text":"Keyboard a s z x d c f v Enter Tab g h RetroPad Y X B A L R L2 R2 Start Select L3 R3 SNES Y X B A L R Start Select NES B A Swap disk side (FDS) Insert/Eject disk (FDS) Start Select Mega Drive A Y B C X Z Start Master System B A Start GameGear B A Start Gameboy [Color] B A Start Select Gameboy Advance B A L R Start Select PC Engine II I Run Select Atari Lynx B A Option 1 Option 2 Start Neo Geo Pocket B A Start Atari 2600 o L difficulty b R difficulty b L difficulty a R difficulty a Start Select Neo Geo C D A B Start Coin CPS\u00bd/3* * * * * * * Start Coin Note : the buttons for CPS\u00bd/3 games vary for each game.","title":"Keyboard Input"},{"location":"games/emulators/ralibretro/#keyboard-shortcuts","text":"see overlay : Esc pause emulation : p advance one frame at a time : ; (automatically pauses emulation) fast forward : = fast forward toggle : - (minus signal) Screenshot : PrintScreen","title":"Keyboard Shortcuts"},{"location":"games/emulators/ralibretro/#saveload-state-keys","text":"Save state current slot : Backspace Load state current slot : F11 Load state from slot 1, 2, .., 9, 0 : F1 , F2 , ..., F9 , F10 Save state to slot 1, 2, .., 9, 10 : shift + F1 , shift + F2 , ..., shift + F9 , shift + F10 Previous slot : shift + - Next slot : shift + + Switch slot : 0 , 1 , 2 ,..., 9","title":"Save/Load state keys"},{"location":"games/emulators/ralibretro/#missing-features","text":"feedback to the user when save/load state, pausing, etc. N64 support load zipped ROMs input configuration more issues listed here: https://github.com/RetroAchievements/RALibretro/issues","title":"Missing Features"},{"location":"games/emulators/ralibretro/#how-to-make-aes-bios-work-in-ralibretro-or-retroarch","text":"To make AES BIOS emulation mode work in your emulator: Make sure your emulator works correctly. Put neogeo.zip to System directory (RALibretro), or a folder you keep your NeoGeo ROMs (RetroArch). Make sure the neogeo.zip consist of at least files you can see here: If you keep only those files, AES mode will be automatically forced for any NeoGeo game (recommended). Important! The files which are highlighted on this picture ( neo-epo.bin and neo-po.bin ) are the only one actually related to AES mode, and you probably will need to include them in your archive to make AES mode work for you. neo-po.bin is necessary for japanese-only titles or to make the japanese versions to work, but due to emulation issue it also forces japanese language as default, that's why you will need to remove it to display english in some games. Load any FBA compatible neo geo ROM. More complete archive (including files needed to run MVS and UniBIOS modes) might need additional configuration to force AES mode: In RaLibretro: Settings->Emulation->Force Neo Geo Mode->AES In RetroArch: Command->Menu Toggle->Options->Force Neo Geo Mode->AES","title":"How to make AES BIOS work in RALibretro or RetroArch"},{"location":"games/emulators/rameka/","text":"Work in Progress \u00b6 Info about the emulator used by RetroAchievements.org for Master System, Game Gear and ColecoVision. RAMeka is the best!","title":"RAMeka"},{"location":"games/emulators/rameka/#work-in-progress","text":"Info about the emulator used by RetroAchievements.org for Master System, Game Gear and ColecoVision. RAMeka is the best!","title":"Work in Progress"},{"location":"games/emulators/ranes/","text":"Work in Progress \u00b6 Info about the emulator used by RetroAchievements.org for the Nintendo Entertainment System and Famicom Disc System.","title":"RANes"},{"location":"games/emulators/ranes/#work-in-progress","text":"Info about the emulator used by RetroAchievements.org for the Nintendo Entertainment System and Famicom Disc System.","title":"Work in Progress"},{"location":"games/emulators/rap64/","text":"Work in Progress \u00b6 Info about the Nintendo 64 emulator used by retroachievements.org.","title":"RAP64"},{"location":"games/emulators/rap64/#work-in-progress","text":"Info about the Nintendo 64 emulator used by retroachievements.org.","title":"Work in Progress"},{"location":"games/emulators/raquasi88/","text":"RAQUASI88 is based on QUASI88kai , which is a fork of QUASI88 with various improvements. Documentation is available in the release archives, or in the repository for the project. Files that do not end with .EN.TXT are in Japanese only. File Description QUICK-START.EN.TXT PC-8801 and QUASI88(kai) general information targeted at first-time users RAQUASI88[.EN].TXT RetroAchievements and RAQUASI88-specific information QUASI88.TXT QUASI88(kai)-specific information, presented in a digestible format MANUAL.TXT Exhaustive rundown of options and systems for QUASI88(kai), for advanced users COMPATIBILITY.TXT Game-specific options required to run or function correctly The PC-8000/8800 support forum thread, as well as individual game pages and forum threads, also contain some information. RIP Euclide","title":"RAQUASI88"},{"location":"games/emulators/rasnes9x/","text":"Work in Progress \u00b6 Info about the emulator used by RetroAchievements.org for the Super Nintendo Entertainment System (SNES)!","title":"RASnes9x"},{"location":"games/emulators/rasnes9x/#work-in-progress","text":"Info about the emulator used by RetroAchievements.org for the Super Nintendo Entertainment System (SNES)!","title":"Work in Progress"},{"location":"games/emulators/ravba/","text":"Work in Progress \u00b6 Info about the emulator used by RetroAchievements.org for Game Boy, Game Boy Color, Game Boy Advance!","title":"RAVBA"},{"location":"games/emulators/ravba/#work-in-progress","text":"Info about the emulator used by RetroAchievements.org for Game Boy, Game Boy Color, Game Boy Advance!","title":"Work in Progress"},{"location":"general/home/","text":"Welcome to the RetroAchievements documentation! For community guidelines, you must know the RetroAchievements Manifesto","title":"Players Home"},{"location":"general/ralibretro/","text":"RetroArch \u00b6 Hey there!","title":"RALibretro"},{"location":"general/ralibretro/#retroarch","text":"Hey there!","title":"RetroArch"},{"location":"general/retroarch/","text":"RetroArch \u00b6 Yo. Hello again","title":"RetroArch"},{"location":"general/retroarch/#retroarch","text":"Yo. Hello again","title":"RetroArch"},{"location":"general/userfaq/","text":"What the FAQ \u00b6 Q: Do you think achievements?","title":"User FAQ"},{"location":"general/userfaq/#what-the-faq","text":"Q: Do you think achievements?","title":"What the FAQ"},{"location":"general/community/discord/","text":"Big Ol' History Lesson \u00b6 Teams \u00b6 Administrative Teams \u00b6 Root Admin Moderation Tech Team Web Team Developer Compliance \u00b6 Developer Compliance Claims Manager Quality Assurance \u00b6 QA Maintainer Entry Manager Hub Manager Set Repair Ticket Hound Writer Cleanup Crew PlayTester Compatibility Tester Code Reviewer RADocs Team Contributors \u00b6 Developer Event Management \u00b6 DevQuest","title":"Discord Home"},{"location":"general/community/discord/#big-ol-history-lesson","text":"","title":"Big Ol' History Lesson"},{"location":"general/community/discord/#teams","text":"","title":"Teams"},{"location":"general/community/discord/#administrative-teams","text":"Root Admin Moderation Tech Team Web Team","title":"Administrative Teams"},{"location":"general/community/discord/#developer-compliance","text":"Developer Compliance Claims Manager","title":"Developer Compliance"},{"location":"general/community/discord/#quality-assurance","text":"QA Maintainer Entry Manager Hub Manager Set Repair Ticket Hound Writer Cleanup Crew PlayTester Compatibility Tester Code Reviewer RADocs Team","title":"Quality Assurance"},{"location":"general/community/discord/#contributors","text":"Developer","title":"Contributors"},{"location":"general/community/discord/#event-management","text":"DevQuest","title":"Event Management"},{"location":"general/community/events/","text":"Current Events \u00b6 Event Name Current Host(s) Relevant Link More Info Achievement of the Week Flara ikki5 Challenge League 4 BahamutVoid Daily DistRActions Bendyhuman DevQuests Various Developer Event (Series) Leaderboard of the Month Searo Peak Streak Bendyhuman RetroAchievements Roulette (RAWR) StingX2 Retro Game Show Thoreau Rollouts Simple Monthly Master Hotscrock The Unwanted televandalist UserQuests(?) Various Player Event (Series) Past or Seasonal Events \u00b6 Event Name Previous Host(s) Relevant Link More Info Bad Idea Game StingX2 Bendyhuman's Master Quest Bendyhuman CommuniPlay SporyTike Devember kdecks wilhitewarrior SlashTangent Developer Event Leapfrog Boldewin HolyShinx Nevermond12 televandalist Master of the Month JAM Rescoring Contributor kdecks RetroAchievements Tournament diegoplantes RetroOlympics Searo voiceofautumn Retro Battle Thoreau Retro Clean-Up 2019 SporyTike Developer Event Retro VGM Quiz Thoreau RPM JAM Xymjak Spring Cleaning 2020 wilhitewarrior Developer Event \ud83d\udc80The Big Achievement 2020\ud83d\udc80 televandalist The Great Jacko StingX2 Developer Event The Pumpkin King kdecks VGM Contest Rimsala WateredWillow","title":"Events Home"},{"location":"general/community/events/#current-events","text":"Event Name Current Host(s) Relevant Link More Info Achievement of the Week Flara ikki5 Challenge League 4 BahamutVoid Daily DistRActions Bendyhuman DevQuests Various Developer Event (Series) Leaderboard of the Month Searo Peak Streak Bendyhuman RetroAchievements Roulette (RAWR) StingX2 Retro Game Show Thoreau Rollouts Simple Monthly Master Hotscrock The Unwanted televandalist UserQuests(?) Various Player Event (Series)","title":"Current Events"},{"location":"general/community/events/#past-or-seasonal-events","text":"Event Name Previous Host(s) Relevant Link More Info Bad Idea Game StingX2 Bendyhuman's Master Quest Bendyhuman CommuniPlay SporyTike Devember kdecks wilhitewarrior SlashTangent Developer Event Leapfrog Boldewin HolyShinx Nevermond12 televandalist Master of the Month JAM Rescoring Contributor kdecks RetroAchievements Tournament diegoplantes RetroOlympics Searo voiceofautumn Retro Battle Thoreau Retro Clean-Up 2019 SporyTike Developer Event Retro VGM Quiz Thoreau RPM JAM Xymjak Spring Cleaning 2020 wilhitewarrior Developer Event \ud83d\udc80The Big Achievement 2020\ud83d\udc80 televandalist The Great Jacko StingX2 Developer Event The Pumpkin King kdecks VGM Contest Rimsala WateredWillow","title":"Past or Seasonal Events"},{"location":"general/community/home/","text":"Community Home","title":"Community Home"},{"location":"general/community/ranews/","text":"RANews \u00b6 RetroAchievements Documentation retroachievements.org .","title":"RANews"},{"location":"general/community/ranews/#ranews","text":"RetroAchievements Documentation retroachievements.org .","title":"RANews"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/","text":"RABot is the the official RetroAchievements Discord robot. Therefore, to interact with him, you need to be a member of the RA Discord server . RABot has many cool and useful commands and in this page you'll see some examples of how some of them can be used. RABot is powered by JavaScript , Node.js , discord.js and Commando . Special thanks : the DragonFire's Xiao bot is a great source of inspiration for many of the cool commands we have in RABot, like !bulbapedia , !manga , !translate , !define and others. Getting help \u00b6 !help \u00b6 This command makes the RABot send a DM with the list of commands available. If you need help about a specific command use !help command_name . !docs \u00b6 Provide links to RetroAchievements documentation. !rarch \u00b6 Provide basic info about RetroArch. !rules \u00b6 Show the rules, or a specific one. !about \u00b6 Show info about the RABot. !panic \u00b6 What to do when the site is down. Creating polls \u00b6 !poll \u00b6 Creates a simple poll. People can vote adding reactions, but they can also vote with unlisted reactions. See !tpoll if you are interested in a more advanced and serious poll. !tpoll \u00b6 Creates a timed poll. In this kind of poll only the first reaction is considered a vote, and if people react with an unlisted reaction then the vote is voided. Dealing with numbers \u00b6 !hex \u00b6 Converts a non-negative integer from decimal (or binary) to hexadecimal (or vice-versa). !bin \u00b6 Converts a non-negative integer from decimal (or hexadecimal) to binary (or vice-versa). !calculator \u00b6 Alias : !calc Evaluates the given math expression and responds with the result. Getting RetroAchievements.org info/links \u00b6 !ragame \u00b6 Alias : !game Google for a game at RetroAchievements.org and show the link. !tickets \u00b6 Return the URL for the open tickets page of the given game name. !whatgame \u00b6 Alias : !wg Responds with a random game that has achievements. !whatcheevo \u00b6 Responds with a random achievement. Random facts \u00b6 !funfact \u00b6 Responds with a retrogaming fun fact. Note : you can suggest more fun fact entries here . !memefact \u00b6 Alias : !meme Responds with a RetroAchievements meme fact. Note : you can suggest more meme fact entries here , but keep these 2 simple rules in mind 1) you can't suggest your own quote; and 2) when suggesting a quote, be sure to get an approval from the author and/or the person being mentioned. Getting gaming related info \u00b6 !gamefaqs \u00b6 Aliases : !gamefaq , !gfaq Google for a game at GameFAQs and show the link. !longplay \u00b6 Aliases : !lplay , !lp Search for a longplay video on youtube and post the link. !vgmaps \u00b6 Alias : !vgmap Searches vgmaps.com for a video game's map. !howlongtobeat \u00b6 Alias : !hltb Google for a game at howlongtobeat.com and show the link. Miscellaneous \u00b6 !define \u00b6 Aliases : !dictionary , !dict Defines a word. !translate \u00b6 Alias : !tr Translates text to a specific language. Powered by https://translate.yandex.com/ !urban \u00b6 Defines a word, but with Urban Dictionary. !wikipedia \u00b6 Alias : !wp Searches Wikipedia for your query. !youtube \u00b6 Alias : !yt Search for a video on youtube and post the first one found. !bulbapedia \u00b6 Searches Bulbapedia for your query. !movie \u00b6 Searches TMDB for your query, getting movie results. !manga \u00b6 Searches AniList for your query, getting manga results. !anime \u00b6 Searches AniList for your query, getting anime results.","title":"RABot"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#getting-help","text":"","title":"Getting help"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#help","text":"This command makes the RABot send a DM with the list of commands available. If you need help about a specific command use !help command_name .","title":"!help"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#docs","text":"Provide links to RetroAchievements documentation.","title":"!docs"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#rarch","text":"Provide basic info about RetroArch.","title":"!rarch"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#rules","text":"Show the rules, or a specific one.","title":"!rules"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#about","text":"Show info about the RABot.","title":"!about"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#panic","text":"What to do when the site is down.","title":"!panic"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#creating-polls","text":"","title":"Creating polls"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#poll","text":"Creates a simple poll. People can vote adding reactions, but they can also vote with unlisted reactions. See !tpoll if you are interested in a more advanced and serious poll.","title":"!poll"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#tpoll","text":"Creates a timed poll. In this kind of poll only the first reaction is considered a vote, and if people react with an unlisted reaction then the vote is voided.","title":"!tpoll"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#dealing-with-numbers","text":"","title":"Dealing with numbers"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#hex","text":"Converts a non-negative integer from decimal (or binary) to hexadecimal (or vice-versa).","title":"!hex"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#bin","text":"Converts a non-negative integer from decimal (or hexadecimal) to binary (or vice-versa).","title":"!bin"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#calculator","text":"Alias : !calc Evaluates the given math expression and responds with the result.","title":"!calculator"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#getting-retroachievementsorg-infolinks","text":"","title":"Getting RetroAchievements.org info/links"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#ragame","text":"Alias : !game Google for a game at RetroAchievements.org and show the link.","title":"!ragame"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#tickets","text":"Return the URL for the open tickets page of the given game name.","title":"!tickets"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#whatgame","text":"Alias : !wg Responds with a random game that has achievements.","title":"!whatgame"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#whatcheevo","text":"Responds with a random achievement.","title":"!whatcheevo"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#random-facts","text":"","title":"Random facts"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#funfact","text":"Responds with a retrogaming fun fact. Note : you can suggest more fun fact entries here .","title":"!funfact"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#memefact","text":"Alias : !meme Responds with a RetroAchievements meme fact. Note : you can suggest more meme fact entries here , but keep these 2 simple rules in mind 1) you can't suggest your own quote; and 2) when suggesting a quote, be sure to get an approval from the author and/or the person being mentioned.","title":"!memefact"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#getting-gaming-related-info","text":"","title":"Getting gaming related info"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#gamefaqs","text":"Aliases : !gamefaq , !gfaq Google for a game at GameFAQs and show the link.","title":"!gamefaqs"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#longplay","text":"Aliases : !lplay , !lp Search for a longplay video on youtube and post the link.","title":"!longplay"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#vgmaps","text":"Alias : !vgmap Searches vgmaps.com for a video game's map.","title":"!vgmaps"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#howlongtobeat","text":"Alias : !hltb Google for a game at howlongtobeat.com and show the link.","title":"!howlongtobeat"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#miscellaneous","text":"","title":"Miscellaneous"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#define","text":"Aliases : !dictionary , !dict Defines a word.","title":"!define"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#translate","text":"Alias : !tr Translates text to a specific language. Powered by https://translate.yandex.com/","title":"!translate"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#urban","text":"Defines a word, but with Urban Dictionary.","title":"!urban"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#wikipedia","text":"Alias : !wp Searches Wikipedia for your query.","title":"!wikipedia"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#youtube","text":"Alias : !yt Search for a video on youtube and post the first one found.","title":"!youtube"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#bulbapedia","text":"Searches Bulbapedia for your query.","title":"!bulbapedia"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#movie","text":"Searches TMDB for your query, getting movie results.","title":"!movie"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#manga","text":"Searches AniList for your query, getting manga results.","title":"!manga"},{"location":"general/community/discord/rabot%252C-the-ra-discord-robot/#anime","text":"Searches AniList for your query, getting anime results.","title":"!anime"},{"location":"general/community/events/devquest/","text":"What are DevQuests? \u00b6 They're achievement development-related quests that developers can take part in at any time. Each one has a specific goal and upon reaching that goal, the achievement developer will earn the badge. General Rules \u00b6 All work done for for DevQuests must adhere to the Developer CoC. Put effort into what you do. Submitting shoddy work for the sake of getting a badge ASAP will result in penalties that could lead to disqualifications. All sets submitted for DevQuest must be full sets. No progression-only! By default, hacks, homebrews, prototypes, unlicensed, and subsets do not count. Exceptions vary per DevQuest and will be explicitly stated. Be respectful and responsible. The overall point to DevQuests is to improve existing work as well as generate new content. Let's stick to that. DevQuests do not stack with each other, but may stack with other events such as The Unwanted, Challenge League, or Daily DistRActions. So far, the only exceptions are DevQuest 004 - Veteran Developer and DevQuest 015 - Console Conqueror. Reporting \u00b6 DevQuests that involve making new sets are generally reported by contacting QATeam on site or on Discord. If a DevQuest has a specific contact point, they will be stated. Schedule and Announcements \u00b6 DevQuests do not have a specific release schedule. Typically, they are announced shortly after their badge has been completed. New DevQuests and any updates to existing DevQuests will be announced in #developer-news on the RetroAchievements Discord and site news The Quests \u00b6 Badge Number Name Info 001 Ticket Massacre (Badge-Based) Resolve/close 50 tickets \u2022 Falsifying ticket closures will result in disqualification \u2022 The following do not count toward the total: Network issues, tickets for achievements you developed, tickets you opened, tickets closed on behalf of Junior Developers, and tickets closed as a result of ticket spamming. 002 Summer Set Repair (Badge-Based) Repair 3 sets from provided batch \u2022 Upon selecting a game, you will be presented with a list of repairs that need to be made for the set \u2022 This DevQuest follows standard revision procedures \u2022 Resolve any open tickets for achievements that are kept in the set. Tickets for achievements being left demoted can simply be closed with the reason for demotion cited. \u2022 Revisions must fix all broken logic of kept achievements, fix broken challenges, etc. 003 Singles In Your Area (Badge-Based) Tighten up the logic for 20 single-condition achievements \u2022 Do not just add a bad and/or redundant condition and call it a day. They will be checked. \u2022 These do not require a revision vote since it is only tightening logic \u2022 Achievements cannot be your own; you should fix those anyway! 004 Veteran Developer (Achievement-Based) This DevQuest consists of several passive goals, each one being their own achievement, which are as followed: 1. Has published at least 1000 achievements and worked on at least 25 sets as the sole or majority developer 2. Has created achievements for at least ten different console IDs 3. Has been an active developer for at least two years 4. At least 85% of sets have dynamic rich presence (Vet Dev I required) 5. Yielded unlocks have exceeded 50,000 6. As a sole developer, submitted one or more sets for code review and received an overall grade of at least 20 7. Has used at least 75% of all currently available flags and features (Vet Dev I and VI required)8. Has obtained at least two DevQuest badges \u2022 Note: A constantly evolving toolkit means that these requirements are subject to change at any time 005 Trigger Happy (Badge-Based) Update 20 sets with the Trigger and Measured flags \u2022 They need to actually make sense \u2022 You can do your own sets, but each one counts as half a set. 006 The Unwanted (Badge-Based) Develop a set for an unpopular system assigned to you at random \u2022 Eligible systems: PC Engine, PC Engine CD, Sega CD, 32X, Atari Lynx, Neo Geo Pocket, Neo Geo Pocket Color, Game Gear, Atari Jaguar, Virtual Boy, MSX/MSX2, SG-1000, Apple II, Saturn, 3DO, ColecoVision, Intellivision, Vectrex, PC-8800, Atari 7800, WonderSwan, and WonderSwan Color \u2022 No hacks or homebrew unless those are the only types of games left without sets. There are two ways to be able to re-spin: 1. If your selected console is Atari Jaguar, Sega 32X, or Sega Saturn. The first two are fairly problematic to dev for and the last is a resource hog that many people have trouble running just to play, much less dev to set 2. If your claim expires or you drop your claim. The penalty for dropping a set is still having to wait until the claim would have expired before getting a re-spin. For example, if you claim a set on September 1 st and drop it on November 1 st , you'll still need to wait until December 1 st before the re-spin. You can only do this once 007 Most Wanted (Badge-Based) Develop a set for one of the most requested games. Must be in RANews at the time of claiming it \u2022 If you already have one claimed you must be under 50% progress for it to count 008 World Traveler (Badge-Based) Develop two sets for games that were never officially released in English \u2022 Games with translation patches DO count! \u2022 Hacks and hombrew do not count. Unlicensed titles may count as long as they are not blatant bootleg ports or hacks of another game. If you're unsure then ask! \u2022 If a game was released in English on another platform with RetroAchievements support, half credit may be granted. Games that only released in English on unsupported platforms will receive full credit. 009 Launch Party! (Badge-Based) Develop a set for a newly supported console within 6 months of RA support \u2022 PSP window: 2021-10-01 through 2022-04-01 \u2022 Dreamcast window: 2022-02-12 through 2022-08-12 010 It Takes Two (Badge-Based) Join forces with other developers to publish two collab sets \u2022 Sets must have a fair share of the work done by each dev involved \u2022 Each developer must publish at least 20 achievements to count Achievements must make sense; no fluff to fulfill requirement! 011 The Genesis of RA (Badge-Based) Develop a set for the Mega Drive/Genesis to celebrate the anniversary of RA's first achievement \u2022 Must be either full sets or a major/significant revision \u2022 Sega CD and Sega 32X games are not eligible. \u2022 Neither are those Sega 32X CD games (nice try!) \u2022 If you already have one claimed, you must be under 50% progress for it to count \u2022 Collabs are allowed so long as the work is visibly split. 012 Hacker's Habit (Badge-Based) Create two new sets for robust hacks. \u2022 Sets intended for this quest must be complete and encompass all notable content specific to the hack. \u2022 Acceptable hacks must be either complete overhauls that drastically change the level design, or introduce new mechanics that greatly change how you progress through the game. \u2022 Meme hacks, single-level hacks, and other small modifications aren't eligible. \u2022 You're limited to one hack per franchise. As an example, if you create a set for an SMW or Mega Man 2 hack, you can't make a second one for SM64 or Mega Man 3. 013 complete.me (Badge-Based) Provide significant content to three sets that are progression-only or were demoted due to being incomplete. \u2022 Choose from a provided list or grab one from a hub, just make sure you let us know when you start so we can mark it! \u2022 Must go through the revision process as per usual! \u2022 Make sure you take care with the set and don't just throw in a bunch of filler \u2022 Don't hesitate to contact us with any questions or suggestion 014 Laudable Leaderboards (Badge-Based) Create leaderboards for 10 games that currently do not have any! \u2022 Cover different game modes/difficulties when applicable. \u2022 Try to cover leaderboards that make sense for the game. Some examples: - For Arcade-type games it is fine to just add High Score leaderboards, possibly highest in a single life - For Racing games time trials for tracks are pretty standard - Speedruns for Platformers - Minigames that track high scores or time are good candidates - And so on. Reach out if you have any questions about a specific game \u2022 You can do your own sets for half-credit as long as they were published prior to this DevQuest (2022-03-02) \u2022 Please leave comments on set page for what you added for log purposes 015 Console Conqueror (Achievement-Based) Publish a set for every supported console on RetroAchievements \u2022 Each console ID will have an achievement associated with it. Newly supported console IDs means new achievements! \u2022 Contact us to opt-in to being tracked for this. There will generally be no need for reports. \u2022 The only requirement for an unlock is that you are the sole or majority developer of a set on that console ID. An even split in collabs will count if you have at least 20 achievements in the set. \u2022 As a last resort , cases where there are no games left to make a full set for or you'd be scraping the bottom of the barrel, you can still unlock the achievement for that console ID by having and/or obtaining at least 3 points in the dev-related tasks below (please note that past work will be factored in): - 2 Points - <50% dev of a set - 2 Points - Got at least 10 achievement badges to pass the icon-gauntlet - 2 Points - Resolved at least 5 legitimate tickets - 2 Points - Made at least 5 leaderboards - 1 Points - Made dynamic RP for at least 5 sets - 1 Points - Got a new game icon to pass the icon-gauntlet - 1 Points - Spelling/Grammar corrections in titles/descriptions - There will additional ways to earn these points in the future to ensure these do not become missable! Could be anything from hash identification, patch creation, writing guides, tagging, etc. Let us know if you have suggestions! \u2022 This DevQuest is 100% retroactive! Potential future revisions of your work will not count against you, so no worries about losing eligibility for an unlock. Suggestions \u00b6 If you have suggestions for a DevQuest, send a message to QATeam with the following info: Quest Name Point of Contact - QATeam are the default contact for all DevQuests, but if you'd like to handle submissions for your suggestion, let them know. Award Type - If there is one specific goal then you would want a badge-based award. If there are multiple goals then you would want an achievement-based award. Game Type - State whether hacks, homebrews, prototypes, unlicensed, and/or subsets are allowed. Goal(s) - A brief description of the DevQuest. Examples: \"Develop a set for such-and-such console,\" \"Develop a Holiday-Themed Set,\" \"Create Dynamic Rich Presence for 10 Games,\" etc. Rules - List any specific guidelines and criteria that submissions must meet. Is there a minimum achievement count? Are there minor exceptions that result in half-credit? Do submissions need to be pre-approved? The more simple they are, the better!","title":"Devquest"},{"location":"general/community/events/devquest/#what-are-devquests","text":"They're achievement development-related quests that developers can take part in at any time. Each one has a specific goal and upon reaching that goal, the achievement developer will earn the badge.","title":"What are DevQuests?"},{"location":"general/community/events/devquest/#general-rules","text":"All work done for for DevQuests must adhere to the Developer CoC. Put effort into what you do. Submitting shoddy work for the sake of getting a badge ASAP will result in penalties that could lead to disqualifications. All sets submitted for DevQuest must be full sets. No progression-only! By default, hacks, homebrews, prototypes, unlicensed, and subsets do not count. Exceptions vary per DevQuest and will be explicitly stated. Be respectful and responsible. The overall point to DevQuests is to improve existing work as well as generate new content. Let's stick to that. DevQuests do not stack with each other, but may stack with other events such as The Unwanted, Challenge League, or Daily DistRActions. So far, the only exceptions are DevQuest 004 - Veteran Developer and DevQuest 015 - Console Conqueror.","title":"General Rules"},{"location":"general/community/events/devquest/#reporting","text":"DevQuests that involve making new sets are generally reported by contacting QATeam on site or on Discord. If a DevQuest has a specific contact point, they will be stated.","title":"Reporting"},{"location":"general/community/events/devquest/#schedule-and-announcements","text":"DevQuests do not have a specific release schedule. Typically, they are announced shortly after their badge has been completed. New DevQuests and any updates to existing DevQuests will be announced in #developer-news on the RetroAchievements Discord and site news","title":"Schedule and Announcements"},{"location":"general/community/events/devquest/#the-quests","text":"Badge Number Name Info 001 Ticket Massacre (Badge-Based) Resolve/close 50 tickets \u2022 Falsifying ticket closures will result in disqualification \u2022 The following do not count toward the total: Network issues, tickets for achievements you developed, tickets you opened, tickets closed on behalf of Junior Developers, and tickets closed as a result of ticket spamming. 002 Summer Set Repair (Badge-Based) Repair 3 sets from provided batch \u2022 Upon selecting a game, you will be presented with a list of repairs that need to be made for the set \u2022 This DevQuest follows standard revision procedures \u2022 Resolve any open tickets for achievements that are kept in the set. Tickets for achievements being left demoted can simply be closed with the reason for demotion cited. \u2022 Revisions must fix all broken logic of kept achievements, fix broken challenges, etc. 003 Singles In Your Area (Badge-Based) Tighten up the logic for 20 single-condition achievements \u2022 Do not just add a bad and/or redundant condition and call it a day. They will be checked. \u2022 These do not require a revision vote since it is only tightening logic \u2022 Achievements cannot be your own; you should fix those anyway! 004 Veteran Developer (Achievement-Based) This DevQuest consists of several passive goals, each one being their own achievement, which are as followed: 1. Has published at least 1000 achievements and worked on at least 25 sets as the sole or majority developer 2. Has created achievements for at least ten different console IDs 3. Has been an active developer for at least two years 4. At least 85% of sets have dynamic rich presence (Vet Dev I required) 5. Yielded unlocks have exceeded 50,000 6. As a sole developer, submitted one or more sets for code review and received an overall grade of at least 20 7. Has used at least 75% of all currently available flags and features (Vet Dev I and VI required)8. Has obtained at least two DevQuest badges \u2022 Note: A constantly evolving toolkit means that these requirements are subject to change at any time 005 Trigger Happy (Badge-Based) Update 20 sets with the Trigger and Measured flags \u2022 They need to actually make sense \u2022 You can do your own sets, but each one counts as half a set. 006 The Unwanted (Badge-Based) Develop a set for an unpopular system assigned to you at random \u2022 Eligible systems: PC Engine, PC Engine CD, Sega CD, 32X, Atari Lynx, Neo Geo Pocket, Neo Geo Pocket Color, Game Gear, Atari Jaguar, Virtual Boy, MSX/MSX2, SG-1000, Apple II, Saturn, 3DO, ColecoVision, Intellivision, Vectrex, PC-8800, Atari 7800, WonderSwan, and WonderSwan Color \u2022 No hacks or homebrew unless those are the only types of games left without sets. There are two ways to be able to re-spin: 1. If your selected console is Atari Jaguar, Sega 32X, or Sega Saturn. The first two are fairly problematic to dev for and the last is a resource hog that many people have trouble running just to play, much less dev to set 2. If your claim expires or you drop your claim. The penalty for dropping a set is still having to wait until the claim would have expired before getting a re-spin. For example, if you claim a set on September 1 st and drop it on November 1 st , you'll still need to wait until December 1 st before the re-spin. You can only do this once 007 Most Wanted (Badge-Based) Develop a set for one of the most requested games. Must be in RANews at the time of claiming it \u2022 If you already have one claimed you must be under 50% progress for it to count 008 World Traveler (Badge-Based) Develop two sets for games that were never officially released in English \u2022 Games with translation patches DO count! \u2022 Hacks and hombrew do not count. Unlicensed titles may count as long as they are not blatant bootleg ports or hacks of another game. If you're unsure then ask! \u2022 If a game was released in English on another platform with RetroAchievements support, half credit may be granted. Games that only released in English on unsupported platforms will receive full credit. 009 Launch Party! (Badge-Based) Develop a set for a newly supported console within 6 months of RA support \u2022 PSP window: 2021-10-01 through 2022-04-01 \u2022 Dreamcast window: 2022-02-12 through 2022-08-12 010 It Takes Two (Badge-Based) Join forces with other developers to publish two collab sets \u2022 Sets must have a fair share of the work done by each dev involved \u2022 Each developer must publish at least 20 achievements to count Achievements must make sense; no fluff to fulfill requirement! 011 The Genesis of RA (Badge-Based) Develop a set for the Mega Drive/Genesis to celebrate the anniversary of RA's first achievement \u2022 Must be either full sets or a major/significant revision \u2022 Sega CD and Sega 32X games are not eligible. \u2022 Neither are those Sega 32X CD games (nice try!) \u2022 If you already have one claimed, you must be under 50% progress for it to count \u2022 Collabs are allowed so long as the work is visibly split. 012 Hacker's Habit (Badge-Based) Create two new sets for robust hacks. \u2022 Sets intended for this quest must be complete and encompass all notable content specific to the hack. \u2022 Acceptable hacks must be either complete overhauls that drastically change the level design, or introduce new mechanics that greatly change how you progress through the game. \u2022 Meme hacks, single-level hacks, and other small modifications aren't eligible. \u2022 You're limited to one hack per franchise. As an example, if you create a set for an SMW or Mega Man 2 hack, you can't make a second one for SM64 or Mega Man 3. 013 complete.me (Badge-Based) Provide significant content to three sets that are progression-only or were demoted due to being incomplete. \u2022 Choose from a provided list or grab one from a hub, just make sure you let us know when you start so we can mark it! \u2022 Must go through the revision process as per usual! \u2022 Make sure you take care with the set and don't just throw in a bunch of filler \u2022 Don't hesitate to contact us with any questions or suggestion 014 Laudable Leaderboards (Badge-Based) Create leaderboards for 10 games that currently do not have any! \u2022 Cover different game modes/difficulties when applicable. \u2022 Try to cover leaderboards that make sense for the game. Some examples: - For Arcade-type games it is fine to just add High Score leaderboards, possibly highest in a single life - For Racing games time trials for tracks are pretty standard - Speedruns for Platformers - Minigames that track high scores or time are good candidates - And so on. Reach out if you have any questions about a specific game \u2022 You can do your own sets for half-credit as long as they were published prior to this DevQuest (2022-03-02) \u2022 Please leave comments on set page for what you added for log purposes 015 Console Conqueror (Achievement-Based) Publish a set for every supported console on RetroAchievements \u2022 Each console ID will have an achievement associated with it. Newly supported console IDs means new achievements! \u2022 Contact us to opt-in to being tracked for this. There will generally be no need for reports. \u2022 The only requirement for an unlock is that you are the sole or majority developer of a set on that console ID. An even split in collabs will count if you have at least 20 achievements in the set. \u2022 As a last resort , cases where there are no games left to make a full set for or you'd be scraping the bottom of the barrel, you can still unlock the achievement for that console ID by having and/or obtaining at least 3 points in the dev-related tasks below (please note that past work will be factored in): - 2 Points - <50% dev of a set - 2 Points - Got at least 10 achievement badges to pass the icon-gauntlet - 2 Points - Resolved at least 5 legitimate tickets - 2 Points - Made at least 5 leaderboards - 1 Points - Made dynamic RP for at least 5 sets - 1 Points - Got a new game icon to pass the icon-gauntlet - 1 Points - Spelling/Grammar corrections in titles/descriptions - There will additional ways to earn these points in the future to ensure these do not become missable! Could be anything from hash identification, patch creation, writing guides, tagging, etc. Let us know if you have suggestions! \u2022 This DevQuest is 100% retroactive! Potential future revisions of your work will not count against you, so no worries about losing eligibility for an unlock.","title":"The Quests"},{"location":"general/community/events/devquest/#suggestions","text":"If you have suggestions for a DevQuest, send a message to QATeam with the following info: Quest Name Point of Contact - QATeam are the default contact for all DevQuests, but if you'd like to handle submissions for your suggestion, let them know. Award Type - If there is one specific goal then you would want a badge-based award. If there are multiple goals then you would want an achievement-based award. Game Type - State whether hacks, homebrews, prototypes, unlicensed, and/or subsets are allowed. Goal(s) - A brief description of the DevQuest. Examples: \"Develop a set for such-and-such console,\" \"Develop a Holiday-Themed Set,\" \"Create Dynamic Rich Presence for 10 Games,\" etc. Rules - List any specific guidelines and criteria that submissions must meet. Is there a minimum achievement count? Are there minor exceptions that result in half-credit? Do submissions need to be pre-approved? The more simple they are, the better!","title":"Suggestions"},{"location":"general/community/events/rollouts/","text":"Intro \u00b6 Rollouts are events that are meant to mimic a console launch. Developers participating in rollouts devote their time to working on achievement sets with the intent of having several sets ready once the console is supported for all players. General Guidelines \u00b6 It's worth noting that these are general guidelines that apply to all rollouts. Individual rollouts may require addtional guidelines. Each rollout needs a coordinator/manager to handle a variety of tasks to ensure the rollout goes smoothly. Task of Coordinator(s)/Manager(s) Gauging interest from achievement developers. Keeping track of claims to ensure there's no overlap and to keep the claims manager(s) up-to-date. Having close communication with participants to answer questions and to resolve any conflicts that may arise. Reporting emulator/core bugs and other issues to tech-team. Provide necessary information to the RANews team, if applicable. Maintaining a schedule so developers know when they are to officially claim their picks in the forum, when playtesters can start testing sets, and when the console's support will officially launch. Ensuring the console ID is validated on the website when support launches, or at least be in contact with the web team to do so. Developers are limited to leading one set at a time, but may collaborate on as many sets as they wish. Upon completion of a set, they are to notify QA to look over their set and sign them off, which allows them to move on to their next pick, if applicable. As per the Developer Code of Conduct, Developers must be free of unaddressed tickets in order to have their claims locked in. They must also have an open claim slot. Since the overall goal of a rollout is to provide sets to launch with a console's support, developers who go inactive or otherwise end up not working on the chosen sets will have their claim lapsed. In other words, claiming a set just to sit on it will not fly and will result in a lapse. Rollout Process \u00b6 When a previously unsupported console becomes viable to work on achievements, developers are to be asked individually if they would like to participate in a console's rollout. If they are interested, they are to pick one game as their priority pick, but may provide a list of additional games as backup. The overall list is then sorted to see if there are any overlapping picks. If a priority pick is exclusive to one developer, they can be locked in for that pick. If multiple developers share the same priority pick, they will be encouraged to collaborate. Previous Rollouts \u00b6 Console Number of Sets on Launch Day Relevant Links PlayStation 24 Launch Post PlayStation Portable 38 Launch Post Dreamcast 34(?) Launch Post Pending Future Rollouts \u00b6 Please note that there are no guarantees on when the following consoles will receive support for achievements. The number of interested developers are taken from poll results from 2022-02-05 - 2022-02-08. Console Number of Interested Developers Amiga 15 Amstrad CPC 13 Atari 5200 12 Atari ST 13 Cassette Vision 7 Commodore 64 20 DOS 31 FM Towns 8 Game & Watch 16 GameCube 51 Fairchild Channel F 8 Mega Duck 17 Neo Geo CD 11 Nintendo 3DS 46 Nokia N-Gage 17 Oric 8 PC-6001 Series 8 PC-9800 17 Philips CD-I 20 PlayStation 2 51 Sega Pico 9 Sharp X1 10 Sharp X68000 9 Super Cassette Vision 10 Thomson TO8 7 TIC-80 7 VIC-20 8 Wii 43 Wii U 31 Xbox 32 Zeebo 12 ZX Spectrum 13 ZX81 9","title":"Rollouts"},{"location":"general/community/events/rollouts/#intro","text":"Rollouts are events that are meant to mimic a console launch. Developers participating in rollouts devote their time to working on achievement sets with the intent of having several sets ready once the console is supported for all players.","title":"Intro"},{"location":"general/community/events/rollouts/#general-guidelines","text":"It's worth noting that these are general guidelines that apply to all rollouts. Individual rollouts may require addtional guidelines. Each rollout needs a coordinator/manager to handle a variety of tasks to ensure the rollout goes smoothly. Task of Coordinator(s)/Manager(s) Gauging interest from achievement developers. Keeping track of claims to ensure there's no overlap and to keep the claims manager(s) up-to-date. Having close communication with participants to answer questions and to resolve any conflicts that may arise. Reporting emulator/core bugs and other issues to tech-team. Provide necessary information to the RANews team, if applicable. Maintaining a schedule so developers know when they are to officially claim their picks in the forum, when playtesters can start testing sets, and when the console's support will officially launch. Ensuring the console ID is validated on the website when support launches, or at least be in contact with the web team to do so. Developers are limited to leading one set at a time, but may collaborate on as many sets as they wish. Upon completion of a set, they are to notify QA to look over their set and sign them off, which allows them to move on to their next pick, if applicable. As per the Developer Code of Conduct, Developers must be free of unaddressed tickets in order to have their claims locked in. They must also have an open claim slot. Since the overall goal of a rollout is to provide sets to launch with a console's support, developers who go inactive or otherwise end up not working on the chosen sets will have their claim lapsed. In other words, claiming a set just to sit on it will not fly and will result in a lapse.","title":"General Guidelines"},{"location":"general/community/events/rollouts/#rollout-process","text":"When a previously unsupported console becomes viable to work on achievements, developers are to be asked individually if they would like to participate in a console's rollout. If they are interested, they are to pick one game as their priority pick, but may provide a list of additional games as backup. The overall list is then sorted to see if there are any overlapping picks. If a priority pick is exclusive to one developer, they can be locked in for that pick. If multiple developers share the same priority pick, they will be encouraged to collaborate.","title":"Rollout Process"},{"location":"general/community/events/rollouts/#previous-rollouts","text":"Console Number of Sets on Launch Day Relevant Links PlayStation 24 Launch Post PlayStation Portable 38 Launch Post Dreamcast 34(?) Launch Post Pending","title":"Previous Rollouts"},{"location":"general/community/events/rollouts/#future-rollouts","text":"Please note that there are no guarantees on when the following consoles will receive support for achievements. The number of interested developers are taken from poll results from 2022-02-05 - 2022-02-08. Console Number of Interested Developers Amiga 15 Amstrad CPC 13 Atari 5200 12 Atari ST 13 Cassette Vision 7 Commodore 64 20 DOS 31 FM Towns 8 Game & Watch 16 GameCube 51 Fairchild Channel F 8 Mega Duck 17 Neo Geo CD 11 Nintendo 3DS 46 Nokia N-Gage 17 Oric 8 PC-6001 Series 8 PC-9800 17 Philips CD-I 20 PlayStation 2 51 Sega Pico 9 Sharp X1 10 Sharp X68000 9 Super Cassette Vision 10 Thomson TO8 7 TIC-80 7 VIC-20 8 Wii 43 Wii U 31 Xbox 32 Zeebo 12 ZX Spectrum 13 ZX81 9","title":"Future Rollouts"},{"location":"guidelines/achievement-scoring/","text":"Scoring \u00b6 There is no set point cap. When scoring achievements match your scores to one of these 5 tiers. 0-5 Easy / Minor Significance 10 Medium / Intermediate Significance 25 Hard / Major Significance 50 Very Hard / Completion Level Significance 100 \"Impossible\" (Typically for bonus sets) There are other factors you should consider as well, such as achievement spread and game length. Scoring from set to set will never perfectly match up, but this scoring system allows the points earned to more closely match skill and effort. Rescoring \u00b6 Up until June 2019, RetroAchievements had a 400-point cap per set, with no restrictions on individual achievements. The set cap was removed to put less focus on set totals and more on the achievements themselves. This initiative was also meant to eliminate the misconception that a set worth 400 points is a \"complete\" set. As with revisions and aesthetic changes, a rescore typically requires community approval. You can find more information on rescores here . Factors to Consider While Scoring Achievements \u00b6 Difficulty \u00b6 Consider for the whole set: What percent of players earned the achievement? How hard were the achievements for you? What is the current score compared to others achievements? How much time, effort and practice does it take to learn the necessary skills to complete the achievement, game and entire set? Significance \u00b6 How important is the achievement to the game? Beating the game is major significance. Defeating a boss is intermediate significance. Collecting a powerup is minor significance. Achievement Spread \u00b6 Imagine you had two versions of the same set, with the same difficulty: If the set has many similar achievements they should each be scored lower. If it has few they should be scored higher. Game Length \u00b6 For long games achievements should be scored somewhat higher than short games. RPGs are often much longer than other genres. Game length should be a factor in scoring but is lesser than the other three. Examples .","title":"Achievement Scoring"},{"location":"guidelines/achievement-scoring/#scoring","text":"There is no set point cap. When scoring achievements match your scores to one of these 5 tiers. 0-5 Easy / Minor Significance 10 Medium / Intermediate Significance 25 Hard / Major Significance 50 Very Hard / Completion Level Significance 100 \"Impossible\" (Typically for bonus sets) There are other factors you should consider as well, such as achievement spread and game length. Scoring from set to set will never perfectly match up, but this scoring system allows the points earned to more closely match skill and effort.","title":"Scoring"},{"location":"guidelines/achievement-scoring/#rescoring","text":"Up until June 2019, RetroAchievements had a 400-point cap per set, with no restrictions on individual achievements. The set cap was removed to put less focus on set totals and more on the achievements themselves. This initiative was also meant to eliminate the misconception that a set worth 400 points is a \"complete\" set. As with revisions and aesthetic changes, a rescore typically requires community approval. You can find more information on rescores here .","title":"Rescoring"},{"location":"guidelines/achievement-scoring/#factors-to-consider-while-scoring-achievements","text":"","title":"Factors to Consider While Scoring Achievements"},{"location":"guidelines/achievement-scoring/#difficulty","text":"Consider for the whole set: What percent of players earned the achievement? How hard were the achievements for you? What is the current score compared to others achievements? How much time, effort and practice does it take to learn the necessary skills to complete the achievement, game and entire set?","title":"Difficulty"},{"location":"guidelines/achievement-scoring/#significance","text":"How important is the achievement to the game? Beating the game is major significance. Defeating a boss is intermediate significance. Collecting a powerup is minor significance.","title":"Significance"},{"location":"guidelines/achievement-scoring/#achievement-spread","text":"Imagine you had two versions of the same set, with the same difficulty: If the set has many similar achievements they should each be scored lower. If it has few they should be scored higher.","title":"Achievement Spread"},{"location":"guidelines/achievement-scoring/#game-length","text":"For long games achievements should be scored somewhat higher than short games. RPGs are often much longer than other genres. Game length should be a factor in scoring but is lesser than the other three. Examples .","title":"Game Length"},{"location":"guidelines/contentguidelines/","text":"Basic Achievement Design Guidelines \u00b6 Unwelcome Concepts \u00b6 You can (and should) be as creative as you can, but there are some concepts that are NOT welcome for achievements, such as: Require Glitches/Bugs 1 (acceptable in Bonus sets ). Require two players (acceptable in \"Multi\" sets). Require perfection all game ( maybe acceptable in Bonus Sets ). Dying (simply), or playing bad without any purpose (acceptable for extra content like special cutscene). NSFW content in text or image. Achievements popping frequently with little effort from the player (including multiple achievements for doing the same task, such as one for beating a boss and another one for getting the item left by the boss, etc.) Achievements obtainable with zero effort for no meaningful purpose (example: start the game as character X, collect one coin, watch a video). It's acceptable if there's something fun/historical/interesting you want to address. Require excessive repetitive grinding, such as reaching level 99 in an RPG, for no meaningful purpose ( maybe acceptable in Bonus Sets ). Rely entirely on randomness, especially when there are extremely low odds. However, for games where the randomness is a major aspect, it may be appropriate. \"Secret Achievements\", where the players have no indication of what they're going after. If you want to prevent spoilers give at least a clue on the Achievement Title/Description. Otherwise the players will start to search on web or mess with Achievement Editor/Memory Inspector, and in the process they can stumble across even worse spoilers. Sets for games that lack gameplay (videos, music visualizers, jukeboxes, etc.) won't be accepted without explicit approval. Approval will be handled via a vote by the QATeam on the Discord server, and requires implementation of sufficiently creative concepts. Book sets are still allowed, but must be worth 0 points. Example: SporyTike's GBA Video Series was presented with the idea to include a leaderboard quiz at the end of each episode. This unique plan involved gameplay past pressing start and was approved. Sets for compilations featuring games that share the same console as the compilation. An example of this is 6-Pak for Genesis/Mega Drive, which contains six Genesis/Mega Drive games. Prototypes/Beta sets if there is no discernible unique content from the main game. (This is just an extension of the demo rule). 1 Glitches/Bugs are errors within a game's code which often cause unintended behavior. Examples are memory overflow, incorrectly loaded levels, and clipping into objects. Note : With every rule, there are exceptions. This is especially true with unwelcome concepts. All unwelcome concepts have some wiggle room, so when in doubt, consult with the admin team. Every Achievement Set MUST Have \u00b6 All game page information filled out, and game images uploaded (if you're not a full-dev, send the images to the code-reviewers). Game Badges for each achievement (they don't need to be distinct from each other, just don't leave them blank). Content covering up to completion so long as the game can be beaten. Whether it be defeating the final boss, completing a first loop, or completing all puzzles, achievement sets that do not cover at least beating the game are deemed unfinished and therefore subject to demotion. Arcade-style games where the focus is on high scores (such as Pac-Man and Crystal Castles) are exempt from this rule. Protection for situations where the players can get achievements without effort, such as: Demo mode; In-game cheat codes; Battery saves; Passwords. See also : Achievement Templates and Real Examples for some well known protection techniques. Recommended but not required \u00b6 Basic Rich Presence (only available for full-devs). Leaderboards for scores and time challenges (only available for full-devs). Missable achievements flagged, especially for RPGs and long games. Use [m] in the end of achievement's title to flag it as missable. An achievement guide. Guides can be created and posted here . For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions making multi-region support difficult. Achievement Scoring \u00b6 When scoring achievements match your scores to one of these 5 tiers. There is no achievement set point cap. 0-5 Easy / Minor Significance 10 Medium / Intermediate Significance 25 Hard / Major Significance 50 Very Hard / Completion Level Significance 100 Sadistic (Typically for bonus sets) When scoring there are other factors to be considered , such as achievement spread and game length. Tools to Help you Succeed \u00b6 We have a roadmap you can use as a guideline to create a good achievement set. We also have an achievement design guide on how to design good achievements, not the technical side but the conceptual. Creating a balanced set is one of the most difficult aspects of development, we have a set balance guide which will help you in thinking about how to create a set that flows. It is preferable and recommended to work on one set at a time. But if you have more, be open for a teamwork or even delegate the set creation if another dev contacts you. Revisions - Working on Sets with Existing Achievements \u00b6 Revisions, as in working on a set that has existing achievements typically requires community approval by presenting your plan in the forum and in the #revision-voting channel in Discord. Not all changes need approval. See Achievement Set Revisions for details. Code Notes \u00b6 Leave accurate code notes for each address you use for achievement conditions. This helps you and others maintain the set, keeping it free of bugs. You're free to add any code notes you discover to any set without declaring intentions to work on the game. Just be careful to not delete previous notes added by someone else.","title":"Content Guidelines"},{"location":"guidelines/contentguidelines/#basic-achievement-design-guidelines","text":"","title":"Basic Achievement Design Guidelines"},{"location":"guidelines/contentguidelines/#unwelcome-concepts","text":"You can (and should) be as creative as you can, but there are some concepts that are NOT welcome for achievements, such as: Require Glitches/Bugs 1 (acceptable in Bonus sets ). Require two players (acceptable in \"Multi\" sets). Require perfection all game ( maybe acceptable in Bonus Sets ). Dying (simply), or playing bad without any purpose (acceptable for extra content like special cutscene). NSFW content in text or image. Achievements popping frequently with little effort from the player (including multiple achievements for doing the same task, such as one for beating a boss and another one for getting the item left by the boss, etc.) Achievements obtainable with zero effort for no meaningful purpose (example: start the game as character X, collect one coin, watch a video). It's acceptable if there's something fun/historical/interesting you want to address. Require excessive repetitive grinding, such as reaching level 99 in an RPG, for no meaningful purpose ( maybe acceptable in Bonus Sets ). Rely entirely on randomness, especially when there are extremely low odds. However, for games where the randomness is a major aspect, it may be appropriate. \"Secret Achievements\", where the players have no indication of what they're going after. If you want to prevent spoilers give at least a clue on the Achievement Title/Description. Otherwise the players will start to search on web or mess with Achievement Editor/Memory Inspector, and in the process they can stumble across even worse spoilers. Sets for games that lack gameplay (videos, music visualizers, jukeboxes, etc.) won't be accepted without explicit approval. Approval will be handled via a vote by the QATeam on the Discord server, and requires implementation of sufficiently creative concepts. Book sets are still allowed, but must be worth 0 points. Example: SporyTike's GBA Video Series was presented with the idea to include a leaderboard quiz at the end of each episode. This unique plan involved gameplay past pressing start and was approved. Sets for compilations featuring games that share the same console as the compilation. An example of this is 6-Pak for Genesis/Mega Drive, which contains six Genesis/Mega Drive games. Prototypes/Beta sets if there is no discernible unique content from the main game. (This is just an extension of the demo rule). 1 Glitches/Bugs are errors within a game's code which often cause unintended behavior. Examples are memory overflow, incorrectly loaded levels, and clipping into objects. Note : With every rule, there are exceptions. This is especially true with unwelcome concepts. All unwelcome concepts have some wiggle room, so when in doubt, consult with the admin team.","title":"Unwelcome Concepts"},{"location":"guidelines/contentguidelines/#every-achievement-set-must-have","text":"All game page information filled out, and game images uploaded (if you're not a full-dev, send the images to the code-reviewers). Game Badges for each achievement (they don't need to be distinct from each other, just don't leave them blank). Content covering up to completion so long as the game can be beaten. Whether it be defeating the final boss, completing a first loop, or completing all puzzles, achievement sets that do not cover at least beating the game are deemed unfinished and therefore subject to demotion. Arcade-style games where the focus is on high scores (such as Pac-Man and Crystal Castles) are exempt from this rule. Protection for situations where the players can get achievements without effort, such as: Demo mode; In-game cheat codes; Battery saves; Passwords. See also : Achievement Templates and Real Examples for some well known protection techniques.","title":"Every Achievement Set MUST Have"},{"location":"guidelines/contentguidelines/#recommended-but-not-required","text":"Basic Rich Presence (only available for full-devs). Leaderboards for scores and time challenges (only available for full-devs). Missable achievements flagged, especially for RPGs and long games. Use [m] in the end of achievement's title to flag it as missable. An achievement guide. Guides can be created and posted here . For games with text-triggered achievements (especially RPGs) it's recommend to find an event flag instead of hooking onto text or text ID. Text presentation varies between regional versions making multi-region support difficult.","title":"Recommended but not required"},{"location":"guidelines/contentguidelines/#achievement-scoring","text":"When scoring achievements match your scores to one of these 5 tiers. There is no achievement set point cap. 0-5 Easy / Minor Significance 10 Medium / Intermediate Significance 25 Hard / Major Significance 50 Very Hard / Completion Level Significance 100 Sadistic (Typically for bonus sets) When scoring there are other factors to be considered , such as achievement spread and game length.","title":"Achievement Scoring"},{"location":"guidelines/contentguidelines/#tools-to-help-you-succeed","text":"We have a roadmap you can use as a guideline to create a good achievement set. We also have an achievement design guide on how to design good achievements, not the technical side but the conceptual. Creating a balanced set is one of the most difficult aspects of development, we have a set balance guide which will help you in thinking about how to create a set that flows. It is preferable and recommended to work on one set at a time. But if you have more, be open for a teamwork or even delegate the set creation if another dev contacts you.","title":"Tools to Help you Succeed"},{"location":"guidelines/contentguidelines/#revisions-working-on-sets-with-existing-achievements","text":"Revisions, as in working on a set that has existing achievements typically requires community approval by presenting your plan in the forum and in the #revision-voting channel in Discord. Not all changes need approval. See Achievement Set Revisions for details.","title":"Revisions - Working on Sets with Existing Achievements"},{"location":"guidelines/contentguidelines/#code-notes","text":"Leave accurate code notes for each address you use for achievement conditions. This helps you and others maintain the set, keeping it free of bugs. You're free to add any code notes you discover to any set without declaring intentions to work on the game. Just be careful to not delete previous notes added by someone else.","title":"Code Notes"},{"location":"guidelines/dev-coc-faq/","text":"This page is intended to address questions asked about the Dev CoC, as well as expand on points made, usually to clarify guidelines concerning \"special cases.\" It's a brand new page, so give it some time! Unwelcome Concepts \u00b6 Regarding Unfinished Sets \u00b6 Q: How does the policy about unfinished sets affect compilation games, such as Intellivision Classic Games (PlayStation) ? A: If at least one game in the compilation adheres to said policy, then there's no need to worry. A \"proper\" compilation set would take a long time to develop, so adding achievements for one or two games at a time seems like an expected workflow.","title":"DevCoC FAQ"},{"location":"guidelines/dev-coc-faq/#unwelcome-concepts","text":"","title":"Unwelcome Concepts"},{"location":"guidelines/dev-coc-faq/#regarding-unfinished-sets","text":"Q: How does the policy about unfinished sets affect compilation games, such as Intellivision Classic Games (PlayStation) ? A: If at least one game in the compilation adheres to said policy, then there's no need to worry. A \"proper\" compilation set would take a long time to develop, so adding achievements for one or two games at a time seems like an expected workflow.","title":"Regarding Unfinished Sets"},{"location":"guidelines/dev-coc/","text":"This document covers developers' rights, responsibilities, and rules for fair play. If you are not a dev, check how to become a developer . See Also : Users Code of Conduct . Golden Rules \u00b6 Respect your fellow developer and communicate through any issues you have civilly. Make room for other developers to get a chance to work on games they like, in their own way. Anyone can become a developer if they put in the effort. All achievement sets are open for improvement. Developers must do the following to keep in good standing: \u00b6 When planning to work on a new game, reserve it by announcing your plan to work on it in a new post specific for that purpose. Only announce new plans when you are free of unaddressed tickets . Keep your work free from unwelcome concepts . Use protective code , preventing potential cheating and exploits. Leave accurate code notes for each achievement condition you use. For set revisions, follow the revision policy . Resolve tickets and leave notes each time you do. Like a wiki, once you publish your work, you are giving it over to the community to be reviewed and reworked over time . Developing a new achievement set \u00b6 Before you begin working on a new achievement set go through the new achievement set checklist . Reserving a game for achievement development \u00b6 1. How to Reserve \u00b6 The only way to reserve a game is by clearly stating your goal to create achievements in the official forum topic of the game on a new post exclusive for that purpose. No other declarations, plans or lists posted anywhere else are to be considered in this. Code notes do not reserve a game (if you have added notes but not reserved the game in the forum, any other developer is free to work on it). It is recommended that post a list of planned achievements, so the community can review your work and give you feedback. 2. Concurrent Reservations Limit \u00b6 As in the maximum number of achievement sets one developer can have reserved at once. Junior Developer : 1 Developer : 4 Note: Joining another developer in a cooperative effort does not reduce from this total. 3. Reservation Timing \u00b6 Only reserve a game for development when you start working on it. In other words, do not reserve games just to block others from working on it. Please reserve a set as soon as you begin working and not as you are finishing your work. 4. Reservation Renewals \u00b6 You can renew your reservation every three months if you have not finished your set. To renew a reservation, simply state that you are still working on a game in the its official forum topic. This must be a new post specific for that purpose; editing your previous declaration is not a valid renewal. After renewing a reservation for a third time, a detailed progress report will be requested for each subsequent renewal. Avoid locking down a set indefinitely. If it appears a developer continues to delay development on a set with little or no progress, staff may intervene. If that happens the renewal of reservation will not be authorized for a period of 3 months. After this period, the developer will be allowed to reserve the set again if it is available. Once a reservation has expired, the set is not available to be claimed by another developer until an admin has stated in the forum topic that the set is open for development. If you feel the declaration was overlooked, please contact RAdmin . 5. Respecting Reservations \u00b6 Do not ask, pressure or discourage anyone from working on any game, in public or in private (of course, assuming the person is already following all other standards on this Code of Conduct). 6. Reservation Cool-Down \u00b6 Upon reserving a set, wait at least 24 hours before promoting it to core. This allows time for reservation review and to clear up any possible reservation disputes. If you believe a set is ready for core within 24 hours, an early promotion may be subject to approval. Important Notes \u00b6 If you post a complete plan, be open to suggestions; you can get excellent input and suggestions this way. You must adhere to the Basic Achievement Design Guidelines , otherwise your set won't be allowed. When you publish your work you are giving it over to the community to be reviewed and reworked over time. Collaboration \u00b6 Let others know if you welcome collaborators. If you've recently reserved a set and someone else voices desire to work on a set that you've reserved within the last 24 hours (beyond suggesting ideas), consider ways in which you can collaborate with them. If someone reserved a game you're interested in before you, don't get frustrated. You are encouraged to request collaboration. You can post your desire to collaborate in the forum or send them a message to get permission from them to publish your contributions. You can also wait and go through an Achievement Set Revision after the set is published. Handling Tickets \u00b6 After you've published achievements be prepared for bug reports. You're expected to keep your work bug free by appropriately resolving tickets. Respond to all tickets as soon as possible. The sooner you respond the better, cause the problem is fresh in the player's mind and you can use them to help you to resolve the problem. While resolving tickets, leave a brief summary of what you did. If you have an indication of false report leave a message showing what conclusions you've made, and then close the ticket. Closing/Resolving a ticket without leaving any comments is an unwelcome attitude. Do not declare your plans to work on a game if you have unaddressed tickets. A ticket is considered as addressed when the developer acknowledeged the ticket, commented on it explaning the situation but is unable to resolve the problem immediately due to reasons such as waiting for saves states or more information from the reporter. If you want to resolve tickets or fix bugs on achievements made by another developer, it's always a good practice to try to contact them and check if they are still active before changing their work. An inactive developers is someone who have have 10 or more open tickets that are older than two months (you can see their open tickets from the Ticket Manager). If the developer is active, you can assist them in the resolution. If the developer is inactive you can freely resolve their tickets. However you're only allowed to fix the achievement to match the description; do not change the intention of the achievement without going through the revision process . If a fellow developer has already started to handle a ticket thru action that can be proved with comment of intent, leave it to them. The user would be given a time of 7 days to handle the ticket after comment. Example: If USERA was fixing a ticket (having left a comment of intent) and then USERX came to undo the work or interrupt the work in progress this would be an issue. Editing Leaderboards \u00b6 Before making updates to a leaderboard, you must backup each modified conditional line on the comment (if too long use Pastebin link) After editing a leaderboard, if you are fixing, adding, or removing entries, you must leave a comment about changes you have made and why. A leaderboard's concept/design should not be changed once players have begun submitting entries. Exceptions are as follows: A. If a leaderboard has a bug in which a correction would result in a discrepancy between between pre and post fix LB submissions, this would be considered a fundamental change and it may be most appropriate to \"retire\" the leaderboard and create a new corrected LB. B. If a protection needs to be added to the cancel field in a leaderboard, for example to eliminate point farming/leaching (Areas where a game generates an endless number of things, such as items, money, or enemies), it may be preferable to either \u201cretire\u201d or create an additional leaderboard. \"Retiring\" a leaderboard means preventing future submissions. If a developer wishes to create a new concept for a leaderboard, a new one should be added. If a developer wants to implement a fundamental change to a leaderboard while keeping it intact, a revision vote is required. \u201cFundamental changes\u201d involve the following: A. Changes to how players submit scores. B. Changes to submission requirements that impact difficulty and or strategy. A Jr. Developer may only change, add, or remove a leaderboard with a code-reviewer that goes through the revision process with them. Developer Status Extended Inactivity \u00b6 If a developer is inactive for six months or longer, meaning within six months they have not created any new achievements or resolved any incoming tickets, their developer status will expire. If this happens to you, you are very welcome to come back to the scene if you want to create new content for our community. First you'll want to review and understand this document (the Developer Code of Conduct). When you feel ready to adhere to it, message us to user RAdmin (a shared admin mail account) here on site or speak to the admin or mod users on the RetroAchievements Discord server to check how to get your developer status back. Achievement Ownership \u00b6 When you publish your work you are giving it over to the community to be reviewed and reworked over time - see Achievement Set Revisions . While the original developer does not own published achievements they are still the caretaker in terms of bug fixing and maintenance. If another developer revises the achievement they are the new caretaker of that achievement. Feedback about the Developer Code of Conduct \u00b6 Although the Developer Code of Conduct is the result of an intense debate, it's not an immutable document. If you have suggestions for improvements, contact us on our Discord server or send a message to RAdmin .","title":"Developer Code of Conduct"},{"location":"guidelines/dev-coc/#golden-rules","text":"Respect your fellow developer and communicate through any issues you have civilly. Make room for other developers to get a chance to work on games they like, in their own way. Anyone can become a developer if they put in the effort. All achievement sets are open for improvement.","title":"Golden Rules"},{"location":"guidelines/dev-coc/#developers-must-do-the-following-to-keep-in-good-standing","text":"When planning to work on a new game, reserve it by announcing your plan to work on it in a new post specific for that purpose. Only announce new plans when you are free of unaddressed tickets . Keep your work free from unwelcome concepts . Use protective code , preventing potential cheating and exploits. Leave accurate code notes for each achievement condition you use. For set revisions, follow the revision policy . Resolve tickets and leave notes each time you do. Like a wiki, once you publish your work, you are giving it over to the community to be reviewed and reworked over time .","title":"Developers must do the following to keep in good standing:"},{"location":"guidelines/dev-coc/#developing-a-new-achievement-set","text":"Before you begin working on a new achievement set go through the new achievement set checklist .","title":"Developing a new achievement set"},{"location":"guidelines/dev-coc/#reserving-a-game-for-achievement-development","text":"","title":"Reserving a game for achievement development"},{"location":"guidelines/dev-coc/#1-how-to-reserve","text":"The only way to reserve a game is by clearly stating your goal to create achievements in the official forum topic of the game on a new post exclusive for that purpose. No other declarations, plans or lists posted anywhere else are to be considered in this. Code notes do not reserve a game (if you have added notes but not reserved the game in the forum, any other developer is free to work on it). It is recommended that post a list of planned achievements, so the community can review your work and give you feedback.","title":"1. How to Reserve"},{"location":"guidelines/dev-coc/#2-concurrent-reservations-limit","text":"As in the maximum number of achievement sets one developer can have reserved at once. Junior Developer : 1 Developer : 4 Note: Joining another developer in a cooperative effort does not reduce from this total.","title":"2. Concurrent Reservations Limit"},{"location":"guidelines/dev-coc/#3-reservation-timing","text":"Only reserve a game for development when you start working on it. In other words, do not reserve games just to block others from working on it. Please reserve a set as soon as you begin working and not as you are finishing your work.","title":"3. Reservation Timing"},{"location":"guidelines/dev-coc/#4-reservation-renewals","text":"You can renew your reservation every three months if you have not finished your set. To renew a reservation, simply state that you are still working on a game in the its official forum topic. This must be a new post specific for that purpose; editing your previous declaration is not a valid renewal. After renewing a reservation for a third time, a detailed progress report will be requested for each subsequent renewal. Avoid locking down a set indefinitely. If it appears a developer continues to delay development on a set with little or no progress, staff may intervene. If that happens the renewal of reservation will not be authorized for a period of 3 months. After this period, the developer will be allowed to reserve the set again if it is available. Once a reservation has expired, the set is not available to be claimed by another developer until an admin has stated in the forum topic that the set is open for development. If you feel the declaration was overlooked, please contact RAdmin .","title":"4. Reservation Renewals"},{"location":"guidelines/dev-coc/#5-respecting-reservations","text":"Do not ask, pressure or discourage anyone from working on any game, in public or in private (of course, assuming the person is already following all other standards on this Code of Conduct).","title":"5. Respecting Reservations"},{"location":"guidelines/dev-coc/#6-reservation-cool-down","text":"Upon reserving a set, wait at least 24 hours before promoting it to core. This allows time for reservation review and to clear up any possible reservation disputes. If you believe a set is ready for core within 24 hours, an early promotion may be subject to approval.","title":"6. Reservation Cool-Down"},{"location":"guidelines/dev-coc/#important-notes","text":"If you post a complete plan, be open to suggestions; you can get excellent input and suggestions this way. You must adhere to the Basic Achievement Design Guidelines , otherwise your set won't be allowed. When you publish your work you are giving it over to the community to be reviewed and reworked over time.","title":"Important Notes"},{"location":"guidelines/dev-coc/#collaboration","text":"Let others know if you welcome collaborators. If you've recently reserved a set and someone else voices desire to work on a set that you've reserved within the last 24 hours (beyond suggesting ideas), consider ways in which you can collaborate with them. If someone reserved a game you're interested in before you, don't get frustrated. You are encouraged to request collaboration. You can post your desire to collaborate in the forum or send them a message to get permission from them to publish your contributions. You can also wait and go through an Achievement Set Revision after the set is published.","title":"Collaboration"},{"location":"guidelines/dev-coc/#handling-tickets","text":"After you've published achievements be prepared for bug reports. You're expected to keep your work bug free by appropriately resolving tickets. Respond to all tickets as soon as possible. The sooner you respond the better, cause the problem is fresh in the player's mind and you can use them to help you to resolve the problem. While resolving tickets, leave a brief summary of what you did. If you have an indication of false report leave a message showing what conclusions you've made, and then close the ticket. Closing/Resolving a ticket without leaving any comments is an unwelcome attitude. Do not declare your plans to work on a game if you have unaddressed tickets. A ticket is considered as addressed when the developer acknowledeged the ticket, commented on it explaning the situation but is unable to resolve the problem immediately due to reasons such as waiting for saves states or more information from the reporter. If you want to resolve tickets or fix bugs on achievements made by another developer, it's always a good practice to try to contact them and check if they are still active before changing their work. An inactive developers is someone who have have 10 or more open tickets that are older than two months (you can see their open tickets from the Ticket Manager). If the developer is active, you can assist them in the resolution. If the developer is inactive you can freely resolve their tickets. However you're only allowed to fix the achievement to match the description; do not change the intention of the achievement without going through the revision process . If a fellow developer has already started to handle a ticket thru action that can be proved with comment of intent, leave it to them. The user would be given a time of 7 days to handle the ticket after comment. Example: If USERA was fixing a ticket (having left a comment of intent) and then USERX came to undo the work or interrupt the work in progress this would be an issue.","title":"Handling Tickets"},{"location":"guidelines/dev-coc/#editing-leaderboards","text":"Before making updates to a leaderboard, you must backup each modified conditional line on the comment (if too long use Pastebin link) After editing a leaderboard, if you are fixing, adding, or removing entries, you must leave a comment about changes you have made and why. A leaderboard's concept/design should not be changed once players have begun submitting entries. Exceptions are as follows: A. If a leaderboard has a bug in which a correction would result in a discrepancy between between pre and post fix LB submissions, this would be considered a fundamental change and it may be most appropriate to \"retire\" the leaderboard and create a new corrected LB. B. If a protection needs to be added to the cancel field in a leaderboard, for example to eliminate point farming/leaching (Areas where a game generates an endless number of things, such as items, money, or enemies), it may be preferable to either \u201cretire\u201d or create an additional leaderboard. \"Retiring\" a leaderboard means preventing future submissions. If a developer wishes to create a new concept for a leaderboard, a new one should be added. If a developer wants to implement a fundamental change to a leaderboard while keeping it intact, a revision vote is required. \u201cFundamental changes\u201d involve the following: A. Changes to how players submit scores. B. Changes to submission requirements that impact difficulty and or strategy. A Jr. Developer may only change, add, or remove a leaderboard with a code-reviewer that goes through the revision process with them.","title":"Editing Leaderboards"},{"location":"guidelines/dev-coc/#developer-status-extended-inactivity","text":"If a developer is inactive for six months or longer, meaning within six months they have not created any new achievements or resolved any incoming tickets, their developer status will expire. If this happens to you, you are very welcome to come back to the scene if you want to create new content for our community. First you'll want to review and understand this document (the Developer Code of Conduct). When you feel ready to adhere to it, message us to user RAdmin (a shared admin mail account) here on site or speak to the admin or mod users on the RetroAchievements Discord server to check how to get your developer status back.","title":"Developer Status Extended Inactivity"},{"location":"guidelines/dev-coc/#achievement-ownership","text":"When you publish your work you are giving it over to the community to be reviewed and reworked over time - see Achievement Set Revisions . While the original developer does not own published achievements they are still the caretaker in terms of bug fixing and maintenance. If another developer revises the achievement they are the new caretaker of that achievement.","title":"Achievement Ownership"},{"location":"guidelines/dev-coc/#feedback-about-the-developer-code-of-conduct","text":"Although the Developer Code of Conduct is the result of an intense debate, it's not an immutable document. If you have suggestions for improvements, contact us on our Discord server or send a message to RAdmin .","title":"Feedback about the Developer Code of Conduct"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/","text":"TL;DR - Golden Rules \u00b6 Participants of the Global Leaderboard are required to earn their achievements fairly and legitimately. In general, a player must unlock achievements: using the latest release version of an approved supported emulator; inside of a game by in-game actions; by their own control; without outside-modifying game files or game code; without using another player\u2019s save files or passwords, and; without using outside cheat programs. These rules are designed to keep players honest in their gameplay and honest towards each other in Global Leaderboard competition. Table of Contents \u00b6 Global Leaderboard Hardcore mode Untracked Not Allowed Allowed Penalties for Cheating How to Clean and Appeal Cheating If You Need Help Special Thanks Global Leaderboard \u00b6 The RetroAchievements global leaderboard is the main official community competition. This includes a unique site rank based on the sum of achievement points earned in comparison with every other ranked player. Each account with points greater than 0 is ranked by default. What is considered fair and legitimate play versus unfair (cheating) on the global leaderboard has been shaped continually by the community since it's inception. The rules below are what we expect from every player who would like to participate in the ranking system. Any indication of a player's failure to follow the rules herein may lose use of the global leaderboard, also known as Untracked status. Hardcore mode \u00b6 Hardcore mode is a feature where the emulator disables all savestate ability, rewind and the slow motion. The fast-forward feature is the only accepted exception . When playing in hardcore mode the points you earn worth double the achievement's points. So if the achievement set worths 400 points and you complete it in hardcore mode you'll get 800 points. Users who take the global leaderboard seriously will most likely earn achievements in hardcore mode to get more points. NOTE : when playing with hardcore mode disabled (also known as \"softcore\"), expect to have some issues. Read in this link Why you shouldn't use the load state feature . Untracked \u00b6 An untracked account doesn't appear in the global ranking, its activities do not appear in the feed, it's no longer listed among all other earners of each achievement (on the achievement page) and their entries on specific leaderboards will not be publicly visible. However an untracked account still can enjoy the RetroAchievements and get the badges for completing games. This status was created so people can do whatever they want with their accounts (like cheating or sharing the account between friends/family) without messing with the fair competitive aspect of the global leaderboards. So, if you want to enjoy the RetroAchievements but not compete in the global leaderboard you can ask to have your account untracked. Just send a message to RAdmin requesting that. Not Allowed \u00b6 Do not use methods that circumvent achievement code to instantly unlock achievements. Do not earn achievements in a way that is unintended by the achievement developer. Do not use save files or passwords that are not your own or were made by under other conditions of play. Do not modify the game's file(s) or memory by any means. Do not use game files or programs known as \"trainers\". Do not use TAS (tool-assisted speedrunning), bots, or complex scripting to gain achievements. Do not allow other people to access your account and earn achievements for you. Do not be abusive to developers. Do not create or share cheating methods. Do not use in-game cheat codes unless it is specified as allowed by the developer. 1. Do not use methods that circumvent achievement code to instantly unlock achievements. \u00b6 Even if you \"should have\" unlocked the achievement. Even if the game is bugged. Even if the achievement is removed or broken entirely. When it's detected it will lead the account to be Untracked . In the cases where you should have unlocked the achievement but it didn't triggered or it didn't get registered in the site due to a network problem, you should follow the steps described in FAQ to request a manual unlock . NOTE : be sure you are using the latest release version of an approved supported emulator. 2. Do not earn achievements in a way that is unintended by the achievement developer. \u00b6 If you discover a back-door to an achievement this is a bug. Please report this bug using a ticket report. See also the allowed rule 2 . Examples: You unlock achievements for finishing levels via a level select cheat code, it's a bug and must be reported/fixed. You notice that if you go back and forth between two rooms you unlock achievements intended for progressing though the game. You've found a method of earning a damageless boss achievements while taking damage during the fights. 3. Do not use save files or passwords that are not your own or were made by under other conditions of play. \u00b6 Occasionally a developer might provide a save file or password for you to use to earn certain achievements. This is appropriate according to the judgement of the set developer. Examples : Downloading a clicker game save online. Begging a friend to send you his save file because your house burned down and you lost all your PC files. Loading a save file for Hardcore you created in a while playing on a non-RA emulator. Loading a save file for Hardcore you created in Softcore in order to gain Hardcore points. 4. Do not modify the game's file(s) or memory by any means. \u00b6 Examples : Opening up specific game files with a text/hex editor and changing values to what you want; editing properties such as \"read-only\" for game files; etc. Editing the stats or unlocks in a game, and then saving the data. 5. Do not use game files or programs known as \"trainers\". \u00b6 Programs which can boost your powers in games, unlock debug modes, speed the game up, modify game code, etc. Examples : Using a trainer program for anything. Using trained ROMs for any game (they will not be linked). Using unofficial/old mods/emulators that act as trainers or debug/cheat toolsets. Game Genie / Action Replay and other such similar cheat tools. 6. Do not use TAS (tool-assisted speedrunning), bots, or complex scripting to gain achievements. \u00b6 These are all advanced scripting of a game far beyond simple tasks (sometimes even synced to clockspeed) to allow complex, unique, and/or non-monotonous/non-repetitive sections of a game to be played without human interaction. Examples : using a TAS to complete a difficult speedrun or no-death achievement. using a complex script with advanced functionality. using complex scripts that complete entire games or large portions of games with no human input but requiring many unique actions. 7. Do not allow other users to access your account and earn achievements for you. \u00b6 Including your \"little brother\" or your \"cousin\". You must earn your achievements yourself. Letting people earn achievements on your account is not allowed in general and if anyone cheats or breaks the rules on your account, you will still be held accountable. Examples : Having a friend who is more skilled at a game complete a difficult section for you in a single-player game. Letting someone log into your RA account to beat a difficult part of a game for you. Letting your little brother work on a grindy achievement for you. 8. Do not be abusive to developers \u00b6 Via forums, PMs, discord, email, etc. You\u2019re allowed to complain, ask for changes, leave negative reviews/comments and other such respectful criticisms, but you give all of us in the achievement hunting community a really bad name when you harass/attack developers because of what they did to their game\u2019s achievements. Examples : Issuing threats or flagrant insults to devs because they added achievements to their game that you do not like; using extreme/excessive rudeness while demanding a developer remove or change achievements; etc. 9. Do not create or share cheating methods. \u00b6 Examples : Teaching someone how to use memory hacking tools. Posting on the forums to promote an egregious game file edit method. Sending someone a link to memory hacking tools or a trainer programs. Teaching someone how to hide cheating. Creating a non-allowed complex script and sharing it around even if you never use it yourself. 10. Do not use in-game cheat codes unless it is specified as allowed by the developer. \u00b6 The other side of the coin for allowed 2 . Cheat codes and debug modes are not allowed unless the developer has made note of which and when it is allowed. Even if the achievements are earnable with cheat codes this is usually unintended behavior, considered cheating if done intentionally, and should be reported as a bug via the ticket system. Allowed \u00b6 Fast-forward is allowed. When explicitly said in achievement's description , in-game cheat codes/modes and in-game debug tools are allowed. Making use of in-game glitches, in-game exploits, and \"cheesy\" tactics are allowed. Using online guides/walkthroughs is allowed. Playing co-op/competitive games with another player or players is allowed. Turbo is allowed. 1. Fast-forward is allowed. \u00b6 Even in hardcore mode fast-forward is allowed, as a modern convenience. It's almost a consensus that fast-forward offers no risk to the fairplay and then it's available for everyone to use it. NOTE : in softcore mode savestates, rewind and slow motion are also allowed, but expect to have some issues. Read in this link Why you shouldn't use the load state feature . 2. When explicitly said in achievement's description , in-game cheat codes/modes and in-game debug tools are allowed. \u00b6 This is a complement to the not allowed rule 2 . The achievement developer's are instructed to protect their work so the achievements can't be unlocked easily by simply using a cheat code . However, some cool and fun challenges can be created taking advantage of some cheats. In these specific cases, using in-game cheats are allowed. NOTE : if you find achievements unlockable by using in-game cheats with no pertinent description, consider opening a ticket and reporting it. Examples : In Tetris (Game Boy) you should activate the speed cheat to earn the Challenge of the Gods achievement, where you have to clear 20 lines on speed 19. In Guerrilla War (NES) you're allowed to use the \"level and difficulty select screen\" cheat to earn the achievements where you have to beat the stages without killing any hostages. 3. Making use of in-game glitches, in-game exploits, and \"cheesy\" tactics are allowed. \u00b6 In-game glitches/exploits/cheesy tactics are allowed, however developers can code their achievements to disallow them programatically. It's usually mentioned in the achievement's description. This does not include when there are flaws in the achievement developer's code. In such cases, please create a ticket report, and earn the achievement as intended by the developer. See also not allowed rule 2 . Examples : Breaking out out of normal bounds to avoid enemies. Doing something strange inside of a game to \"bug a game out\" so you become invincible. Accessing powerful items earlier than intended. Standing somewhere enemies can\u2019t hit you. Examples where developers disallow it : Megaman (NES) - beat bosses damageless without using the pause glitch. 4. Using online guides/walkthroughs is allowed. \u00b6 Examples : youtube video guides; GameFAQs; puzzle solutions; collectible lists; etc. A note on honesty : Using solvers for sudoku/picross is considered cheating. Unenforceable tolerated cheating but cheating nonetheless. 5. Playing co-op/competitive games with another player or players is allowed. \u00b6 Playing co-op is allowed, however developers can code their achievements to disallow them programatically. It's usually mentioned in the achievement's description. See also not allowed rule 2 . Examples : a skilled friend playing Streets of Rage or Goof Troop with you; etc. 6. Turbo is allowed. \u00b6 Turbo is where you hold a single button down and the button is automatically re-pressed again and again quickly. Turbo is either built into controllers, or into emulation software. In either case it is allowed. In cases where there is any more complex scripting than repeating the same button in quick succession, this is not allowed. See Not allowed 6 . Penalties for Cheating \u00b6 Upon cheating being detected, the account will be set as Untracked . There are some cases where the account will be banned. How to Clean and Appeal Cheating \u00b6 The fastest way: Reset all your points. If you've been previously untracked and would like it reversed please inform RAdmin of your action. WARNING : unlocking achievements using methods outside supported emulators results in having your account set as untracked. When this happens, the only way to be on the global leaderboard again is by doing a full reset of all achievements on your profile. There are no exceptions and no appeals. If you have ways to prove you played without cheating, send a message to RAdmin, but keep in mind that RA staff are all volunteers and it can take time to judge your case. If you wish to come forward and admit cheating, this will be greatly appreciated and taken into consideration during your appeal. If You Need Help \u00b6 If you ever have a question, comment, or suggestions - feel welcome to contact RAdmin or the RA staff ( @mods and @admins ) on our discord server. These rules will be amended from time to time as needed. Special Thanks \u00b6 This document is heavily based on the 100Pals Unified Achievement Hunting Rules . This version is trimmed down and tailored with topics that are relevant to the RetroAchievements context. The 100Pals is a community with experienced achievement hunters that exist since achievements were first released on Steam in 2007.","title":"Global Leaderboard and Achievement Hunting Rules"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#tldr-golden-rules","text":"Participants of the Global Leaderboard are required to earn their achievements fairly and legitimately. In general, a player must unlock achievements: using the latest release version of an approved supported emulator; inside of a game by in-game actions; by their own control; without outside-modifying game files or game code; without using another player\u2019s save files or passwords, and; without using outside cheat programs. These rules are designed to keep players honest in their gameplay and honest towards each other in Global Leaderboard competition.","title":"TL;DR - Golden Rules"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#table-of-contents","text":"Global Leaderboard Hardcore mode Untracked Not Allowed Allowed Penalties for Cheating How to Clean and Appeal Cheating If You Need Help Special Thanks","title":"Table of Contents"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#global-leaderboard","text":"The RetroAchievements global leaderboard is the main official community competition. This includes a unique site rank based on the sum of achievement points earned in comparison with every other ranked player. Each account with points greater than 0 is ranked by default. What is considered fair and legitimate play versus unfair (cheating) on the global leaderboard has been shaped continually by the community since it's inception. The rules below are what we expect from every player who would like to participate in the ranking system. Any indication of a player's failure to follow the rules herein may lose use of the global leaderboard, also known as Untracked status.","title":"Global Leaderboard"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#hardcore-mode","text":"Hardcore mode is a feature where the emulator disables all savestate ability, rewind and the slow motion. The fast-forward feature is the only accepted exception . When playing in hardcore mode the points you earn worth double the achievement's points. So if the achievement set worths 400 points and you complete it in hardcore mode you'll get 800 points. Users who take the global leaderboard seriously will most likely earn achievements in hardcore mode to get more points. NOTE : when playing with hardcore mode disabled (also known as \"softcore\"), expect to have some issues. Read in this link Why you shouldn't use the load state feature .","title":"Hardcore mode"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#untracked","text":"An untracked account doesn't appear in the global ranking, its activities do not appear in the feed, it's no longer listed among all other earners of each achievement (on the achievement page) and their entries on specific leaderboards will not be publicly visible. However an untracked account still can enjoy the RetroAchievements and get the badges for completing games. This status was created so people can do whatever they want with their accounts (like cheating or sharing the account between friends/family) without messing with the fair competitive aspect of the global leaderboards. So, if you want to enjoy the RetroAchievements but not compete in the global leaderboard you can ask to have your account untracked. Just send a message to RAdmin requesting that.","title":"Untracked"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#not-allowed","text":"Do not use methods that circumvent achievement code to instantly unlock achievements. Do not earn achievements in a way that is unintended by the achievement developer. Do not use save files or passwords that are not your own or were made by under other conditions of play. Do not modify the game's file(s) or memory by any means. Do not use game files or programs known as \"trainers\". Do not use TAS (tool-assisted speedrunning), bots, or complex scripting to gain achievements. Do not allow other people to access your account and earn achievements for you. Do not be abusive to developers. Do not create or share cheating methods. Do not use in-game cheat codes unless it is specified as allowed by the developer.","title":"Not Allowed"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#1-do-not-use-methods-that-circumvent-achievement-code-to-instantly-unlock-achievements","text":"Even if you \"should have\" unlocked the achievement. Even if the game is bugged. Even if the achievement is removed or broken entirely. When it's detected it will lead the account to be Untracked . In the cases where you should have unlocked the achievement but it didn't triggered or it didn't get registered in the site due to a network problem, you should follow the steps described in FAQ to request a manual unlock . NOTE : be sure you are using the latest release version of an approved supported emulator.","title":"1. Do not use methods that circumvent achievement code to instantly unlock achievements."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#2-do-not-earn-achievements-in-a-way-that-is-unintended-by-the-achievement-developer","text":"If you discover a back-door to an achievement this is a bug. Please report this bug using a ticket report. See also the allowed rule 2 . Examples: You unlock achievements for finishing levels via a level select cheat code, it's a bug and must be reported/fixed. You notice that if you go back and forth between two rooms you unlock achievements intended for progressing though the game. You've found a method of earning a damageless boss achievements while taking damage during the fights.","title":"2. Do not earn achievements in a way that is unintended by the achievement developer."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#3-do-not-use-save-files-or-passwords-that-are-not-your-own-or-were-made-by-under-other-conditions-of-play","text":"Occasionally a developer might provide a save file or password for you to use to earn certain achievements. This is appropriate according to the judgement of the set developer. Examples : Downloading a clicker game save online. Begging a friend to send you his save file because your house burned down and you lost all your PC files. Loading a save file for Hardcore you created in a while playing on a non-RA emulator. Loading a save file for Hardcore you created in Softcore in order to gain Hardcore points.","title":"3. Do not use save files or passwords that are not your own or were made by under other conditions of play."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#4-do-not-modify-the-games-files-or-memory-by-any-means","text":"Examples : Opening up specific game files with a text/hex editor and changing values to what you want; editing properties such as \"read-only\" for game files; etc. Editing the stats or unlocks in a game, and then saving the data.","title":"4. Do not modify the game's file(s) or memory by any means."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#5-do-not-use-game-files-or-programs-known-as-trainers","text":"Programs which can boost your powers in games, unlock debug modes, speed the game up, modify game code, etc. Examples : Using a trainer program for anything. Using trained ROMs for any game (they will not be linked). Using unofficial/old mods/emulators that act as trainers or debug/cheat toolsets. Game Genie / Action Replay and other such similar cheat tools.","title":"5. Do not use game files or programs known as \"trainers\"."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#6-do-not-use-tas-tool-assisted-speedrunning-bots-or-complex-scripting-to-gain-achievements","text":"These are all advanced scripting of a game far beyond simple tasks (sometimes even synced to clockspeed) to allow complex, unique, and/or non-monotonous/non-repetitive sections of a game to be played without human interaction. Examples : using a TAS to complete a difficult speedrun or no-death achievement. using a complex script with advanced functionality. using complex scripts that complete entire games or large portions of games with no human input but requiring many unique actions.","title":"6. Do not use TAS (tool-assisted speedrunning), bots, or complex scripting to gain achievements."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#7-do-not-allow-other-users-to-access-your-account-and-earn-achievements-for-you","text":"Including your \"little brother\" or your \"cousin\". You must earn your achievements yourself. Letting people earn achievements on your account is not allowed in general and if anyone cheats or breaks the rules on your account, you will still be held accountable. Examples : Having a friend who is more skilled at a game complete a difficult section for you in a single-player game. Letting someone log into your RA account to beat a difficult part of a game for you. Letting your little brother work on a grindy achievement for you.","title":"7. Do not allow other users to access your account and earn achievements for you."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#8-do-not-be-abusive-to-developers","text":"Via forums, PMs, discord, email, etc. You\u2019re allowed to complain, ask for changes, leave negative reviews/comments and other such respectful criticisms, but you give all of us in the achievement hunting community a really bad name when you harass/attack developers because of what they did to their game\u2019s achievements. Examples : Issuing threats or flagrant insults to devs because they added achievements to their game that you do not like; using extreme/excessive rudeness while demanding a developer remove or change achievements; etc.","title":"8. Do not be abusive to developers"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#9-do-not-create-or-share-cheating-methods","text":"Examples : Teaching someone how to use memory hacking tools. Posting on the forums to promote an egregious game file edit method. Sending someone a link to memory hacking tools or a trainer programs. Teaching someone how to hide cheating. Creating a non-allowed complex script and sharing it around even if you never use it yourself.","title":"9. Do not create or share cheating methods."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#10-do-not-use-in-game-cheat-codes-unless-it-is-specified-as-allowed-by-the-developer","text":"The other side of the coin for allowed 2 . Cheat codes and debug modes are not allowed unless the developer has made note of which and when it is allowed. Even if the achievements are earnable with cheat codes this is usually unintended behavior, considered cheating if done intentionally, and should be reported as a bug via the ticket system.","title":"10. Do not use in-game cheat codes unless it is specified as allowed by the developer."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#allowed","text":"Fast-forward is allowed. When explicitly said in achievement's description , in-game cheat codes/modes and in-game debug tools are allowed. Making use of in-game glitches, in-game exploits, and \"cheesy\" tactics are allowed. Using online guides/walkthroughs is allowed. Playing co-op/competitive games with another player or players is allowed. Turbo is allowed.","title":"Allowed"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#1-fast-forward-is-allowed","text":"Even in hardcore mode fast-forward is allowed, as a modern convenience. It's almost a consensus that fast-forward offers no risk to the fairplay and then it's available for everyone to use it. NOTE : in softcore mode savestates, rewind and slow motion are also allowed, but expect to have some issues. Read in this link Why you shouldn't use the load state feature .","title":"1. Fast-forward is allowed."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#2-when-explicitly-said-in-achievements-description-in-game-cheat-codesmodes-and-in-game-debug-tools-are-allowed","text":"This is a complement to the not allowed rule 2 . The achievement developer's are instructed to protect their work so the achievements can't be unlocked easily by simply using a cheat code . However, some cool and fun challenges can be created taking advantage of some cheats. In these specific cases, using in-game cheats are allowed. NOTE : if you find achievements unlockable by using in-game cheats with no pertinent description, consider opening a ticket and reporting it. Examples : In Tetris (Game Boy) you should activate the speed cheat to earn the Challenge of the Gods achievement, where you have to clear 20 lines on speed 19. In Guerrilla War (NES) you're allowed to use the \"level and difficulty select screen\" cheat to earn the achievements where you have to beat the stages without killing any hostages.","title":"2. When explicitly said in achievement's description, in-game cheat codes/modes and in-game debug tools are allowed."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#3-making-use-of-in-game-glitches-in-game-exploits-and-cheesy-tactics-are-allowed","text":"In-game glitches/exploits/cheesy tactics are allowed, however developers can code their achievements to disallow them programatically. It's usually mentioned in the achievement's description. This does not include when there are flaws in the achievement developer's code. In such cases, please create a ticket report, and earn the achievement as intended by the developer. See also not allowed rule 2 . Examples : Breaking out out of normal bounds to avoid enemies. Doing something strange inside of a game to \"bug a game out\" so you become invincible. Accessing powerful items earlier than intended. Standing somewhere enemies can\u2019t hit you. Examples where developers disallow it : Megaman (NES) - beat bosses damageless without using the pause glitch.","title":"3. Making use of in-game glitches, in-game exploits, and \"cheesy\" tactics are allowed."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#4-using-online-guideswalkthroughs-is-allowed","text":"Examples : youtube video guides; GameFAQs; puzzle solutions; collectible lists; etc. A note on honesty : Using solvers for sudoku/picross is considered cheating. Unenforceable tolerated cheating but cheating nonetheless.","title":"4. Using online guides/walkthroughs is allowed."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#5-playing-co-opcompetitive-games-with-another-player-or-players-is-allowed","text":"Playing co-op is allowed, however developers can code their achievements to disallow them programatically. It's usually mentioned in the achievement's description. See also not allowed rule 2 . Examples : a skilled friend playing Streets of Rage or Goof Troop with you; etc.","title":"5. Playing co-op/competitive games with another player or players is allowed."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#6-turbo-is-allowed","text":"Turbo is where you hold a single button down and the button is automatically re-pressed again and again quickly. Turbo is either built into controllers, or into emulation software. In either case it is allowed. In cases where there is any more complex scripting than repeating the same button in quick succession, this is not allowed. See Not allowed 6 .","title":"6. Turbo is allowed."},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#penalties-for-cheating","text":"Upon cheating being detected, the account will be set as Untracked . There are some cases where the account will be banned.","title":"Penalties for Cheating"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#how-to-clean-and-appeal-cheating","text":"The fastest way: Reset all your points. If you've been previously untracked and would like it reversed please inform RAdmin of your action. WARNING : unlocking achievements using methods outside supported emulators results in having your account set as untracked. When this happens, the only way to be on the global leaderboard again is by doing a full reset of all achievements on your profile. There are no exceptions and no appeals. If you have ways to prove you played without cheating, send a message to RAdmin, but keep in mind that RA staff are all volunteers and it can take time to judge your case. If you wish to come forward and admit cheating, this will be greatly appreciated and taken into consideration during your appeal.","title":"How to Clean and Appeal Cheating"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#if-you-need-help","text":"If you ever have a question, comment, or suggestions - feel welcome to contact RAdmin or the RA staff ( @mods and @admins ) on our discord server. These rules will be amended from time to time as needed.","title":"If You Need Help"},{"location":"guidelines/global-leaderboard-and-achievement-hunting-rules/#special-thanks","text":"This document is heavily based on the 100Pals Unified Achievement Hunting Rules . This version is trimmed down and tailored with topics that are relevant to the RetroAchievements context. The 100Pals is a community with experienced achievement hunters that exist since achievements were first released on Steam in 2007.","title":"Special Thanks"},{"location":"guidelines/overview/","text":"","title":"Overview"},{"location":"guidelines/ra-manifesto/","text":"This is the RetroAchievements Manifesto and every member of this community should be aware of this. Since the early days of RetroAchievements, this is what we have in our FAQ as the answer for What is RetroAchievements.org? RetroAchievements.org is a zero profit community who collaborate and compete to earn custom-made achievements in classic games through emulation. Achievements are made by and for the community. (...) In this manifesto we're going to go deeper into that answer. RetroAchievements.org is a zero profit community \u00b6 We do have a donation link on our frontpage, but we're still a zero profit community. The patrons contribute with literally one dollar per month, and fortunately we have enough patrons to pay the server without needing to rely on annoying adverts. However, we want to make very clear that getting donations is not our business model, exactly because RetroAchievements is not a business! Business organizations are always eager to get more customers. They do what they can to please the customers and keep getting more and more of them. But here, at RetroAchievements, we are not a business, we are a community . We don't have customers, we have community members. We are a bunch of people passionate about retrogames. And if you share the same passion, you're very welcome to join us. Although we're welcoming anyone, we're not desperately begging for more and more users. It's your call: if you like what we have to offer, pick your gamepad and let's play some classics! Achievements are made by and for the community. \u00b6 It's related to what was said above. We are not offering a service for outsiders. The things we create in this community are for this very same community. You're welcome to stay with us, but it's up to you to decide if you want to be part of it. And while being part of this community, always keep in mind the following statements: 1. The most important thing we have here are the achievements. 2. The most important people we have here are the achievement creators. What does that mean? The most important thing we have here are the achievements. \u00b6 We all love those badges on our profile page, right? Such attachment to that badge sometimes causes frustration when the respective achievement set get a revision. But it's important to keep in mind that this project is constantly evolving. We make achievement set revisions with quality in mind, and to show actual respect for the game. We also have respect for the awards you got, but improving the overall quality of the project has precedence over our individual profile pages and/or our amount of points. Also, if you're not able to master an achievement set it doesn't automatically mean that it needs to be nerfed/demoted/turned into a bonus set. If other players got that, it's probable you can get that too. But if you can't, it's OK too. You don't need to unlock every achievement to keep having fun with old games. If you still think the achievement set has unwelcome concepts , you can post your arguments in the game's forum topic. Just be sure to be respectful in your words. Which brings us to the next point... The most important people we have here are the achievement creators. \u00b6 Don't get it wrong! The RetroAchievements ecosystem has a lot of people, playing many different roles than creating achievements, and they are all important. But the achievement creators are the backbone of this project. Without them, this is just a buggy and old fashioned website. Achievement creation is a very time consuming activity. The people doing it dedicate a big portion of their free time producing content for the benefit of the whole community. Anyways, even if you're not able to/interested in creating achievements and just want to play, you're also important to us. In fact we have countless players that are very valuable members . The key point here is: get involved and be nice. The more you get involved, the more valuable you are to the community. Last but not least, if you have criticism about achievement creators' work, be respectful. Showing bitterness towards them is strongly frowned upon. Be disrespectful with them and you're definitely not welcome here.","title":"RetroAchievements Manifesto"},{"location":"guidelines/ra-manifesto/#retroachievementsorg-is-a-zero-profit-community","text":"We do have a donation link on our frontpage, but we're still a zero profit community. The patrons contribute with literally one dollar per month, and fortunately we have enough patrons to pay the server without needing to rely on annoying adverts. However, we want to make very clear that getting donations is not our business model, exactly because RetroAchievements is not a business! Business organizations are always eager to get more customers. They do what they can to please the customers and keep getting more and more of them. But here, at RetroAchievements, we are not a business, we are a community . We don't have customers, we have community members. We are a bunch of people passionate about retrogames. And if you share the same passion, you're very welcome to join us. Although we're welcoming anyone, we're not desperately begging for more and more users. It's your call: if you like what we have to offer, pick your gamepad and let's play some classics!","title":"RetroAchievements.org is a zero profit community"},{"location":"guidelines/ra-manifesto/#achievements-are-made-by-and-for-the-community","text":"It's related to what was said above. We are not offering a service for outsiders. The things we create in this community are for this very same community. You're welcome to stay with us, but it's up to you to decide if you want to be part of it. And while being part of this community, always keep in mind the following statements: 1. The most important thing we have here are the achievements. 2. The most important people we have here are the achievement creators. What does that mean?","title":"Achievements are made by and for the community."},{"location":"guidelines/ra-manifesto/#the-most-important-thing-we-have-here-are-the-achievements","text":"We all love those badges on our profile page, right? Such attachment to that badge sometimes causes frustration when the respective achievement set get a revision. But it's important to keep in mind that this project is constantly evolving. We make achievement set revisions with quality in mind, and to show actual respect for the game. We also have respect for the awards you got, but improving the overall quality of the project has precedence over our individual profile pages and/or our amount of points. Also, if you're not able to master an achievement set it doesn't automatically mean that it needs to be nerfed/demoted/turned into a bonus set. If other players got that, it's probable you can get that too. But if you can't, it's OK too. You don't need to unlock every achievement to keep having fun with old games. If you still think the achievement set has unwelcome concepts , you can post your arguments in the game's forum topic. Just be sure to be respectful in your words. Which brings us to the next point...","title":"The most important thing we have here are the achievements."},{"location":"guidelines/ra-manifesto/#the-most-important-people-we-have-here-are-the-achievement-creators","text":"Don't get it wrong! The RetroAchievements ecosystem has a lot of people, playing many different roles than creating achievements, and they are all important. But the achievement creators are the backbone of this project. Without them, this is just a buggy and old fashioned website. Achievement creation is a very time consuming activity. The people doing it dedicate a big portion of their free time producing content for the benefit of the whole community. Anyways, even if you're not able to/interested in creating achievements and just want to play, you're also important to us. In fact we have countless players that are very valuable members . The key point here is: get involved and be nice. The more you get involved, the more valuable you are to the community. Last but not least, if you have criticism about achievement creators' work, be respectful. Showing bitterness towards them is strongly frowned upon. Be disrespectful with them and you're definitely not welcome here.","title":"The most important people we have here are the achievement creators."},{"location":"guidelines/ticket-etiquette/","text":"test","title":"Ticket Etiquette"},{"location":"guidelines/user-coc/","text":"Mission Statement Rules Short Version Long Version Freedom of Speech How Moderation Works What to do if you think moderation is wrong Cheating FAQ Mission Statement \u00b6 The RetroAchievements project aims to provide tools for creating achievements for retrogames and ways to enjoy such creations. We strive to promote a healthy and collaborative community around this hobby. Everything we produce is made available for free and we will never profit from it. Rules \u00b6 There's a lot of retrogamers around the globe, spanning various different cultures, points of view, and opinions. Therefore, in order to provide a healthy environment for the community to share their passion for retrogames, we need some rules. Short Version \u00b6 This short version should be enough for most people: Don't be a jerk or generally obnoxious - nobody likes trolls. Don't use our website or Discord server to share copyrighted material or information about where they can be downloaded. Keep the Discord channels and forum threads on-topic (we do have a section for off-topic chatting, though). When a moderator/admin asks you to stop, you should stop. When in doubt, ask a @mod in Discord or send a message to RAdmin on the website. Long Version \u00b6 If the short version is not clear enough for you, here's a detailed one: Examples of expected behavior \u00b6 Focusing on what is best for the community. Showing empathy towards other community members. Being respectful when expressing your viewpoint. Gracefully accepting constructive and respectful criticism. Reporting to moderators/admins cases where these rules are being violated. Unacceptable social behavior \u00b6 Asking for or posting links to sites where others could download copyrighted material. Spamming messages or attempting to vandalize Discord or the website by any means. Advertising products, services, or other Discord servers without approval. Bigotry: This includes racism, sexism, elitism; intolerance regarding others' nationality, religion, sexual orientation, political beliefs, etc. Public or private harassment. Defamation, as in making false statements about a person that may injure their reputation. Threats of violence. Unwelcome sexual attention or advances towards others. Posting pornography, as in images or descriptions of erotic behavior intended to cause sexual excitement. Posting gruesome or gory images intended to cause disgust. Publishing others' private information, such as a photos of them or their physical or electronic address, without explicit permission. Behavior strongly frowned upon \u00b6 Heated public arguments. Excessive shitposting. Personal attacks, as in making abusive remarks on or relating to one's person, instead of providing evidence when examining another person's claims or comments. The moderators will step in to cool things down if arguments start getting out of hand. Check below how moderation works . Freedom of Speech \u00b6 If you just want to rant or dump derogatory comments about how we run things here, you're free to do that. But, as it's demotivating and wastes a lot of volunteers' time, we don't want it on our forums or Discord Server. There are plenty of options where you can do it around the Internet. Keep in mind that RetroAchievements.org is NOT a bastion of freedom of speech. If you have criticism, you're very welcome to say it, just be sure to be civil. How Moderation Works \u00b6 If you feel moderation is needed, ping the @mod role on our Discord server, or direct your issues to RAdmin , a shared mod-mail account. The moderation goal is to assure users adhere to the User's Code of Conduct. What a moderator should do after seeing a breach to the Code of Conduct: Formal and diplomatic warning (no sarcasm, no threatening tone). If the warning is ignored, the offender will be kicked from our Discord server. If the offender continues to ignore the moderation, they'll be banned from our Discord server. If the offender has the \"Developer\" role on the website, their privileges will be removed. Note : on the website there's no \"kick\". If the offender ignores the warning, the next step is a ban. If you've been banned and somehow want to appeal to have your access back, send an email to ramodmail@gmail.com or a Direct Message to RAdmin . What to do if you think moderation is wrong \u00b6 If you think moderators are not acting like described above, send a Direct Message to RAdmin or email ramodmail@gmail.com . This is a shared moderation account that all mods and admins see. The issue will be discussed and dealt with fairly. Admins/mods who do not follow or enforce this Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's administration. Cheating \u00b6 Check the Global Leaderboard and Achievement Hunting Rules . FAQ \u00b6 When a member gets banned from the Discord server, are they automatically banned from the website? I created a Discord server because I want more freedom than what I have on the RetroAchievements community. Can I promote my server here? Is it mandatory for achievement creators to join the Discord server? If an achievement creator is banned from Discord will they lose the \"Developer\" role on the website? If I'm banned from the Discord server but I still want to create achievements, what should I do? When a member gets banned from the Discord server, are they automatically banned from the website? \u00b6 No. The member will still be able to use our services to play retrogames with achievements. But if the disruptive behavior continues on the website, they'll be banned from there too. I created a Discord server because I want more freedom than what I have on the official RetroAchievements server. Can I promote my server here? \u00b6 No. Is it mandatory for achievement creators to join the Discord server? \u00b6 No. Joining our Discord server is optional. But if you're in the list of banned users there, you cannot have the \"Developer\" role on the website. If an achievement creator is banned from Discord will they lose the \"Developer\" role on the website? \u00b6 Yes. If I'm banned from the Discord server but I still want to create achievements, what should I do? \u00b6 Send your appeal to RAdmin or ramodmail@gmail.com to try and have your ban lifted. It doesn't really matter if you want to join the server or not, if you're in the list of banned users in our Discord server, you cannot have the \"Developer\" role on the website.","title":"Users Code of Conduct"},{"location":"guidelines/user-coc/#mission-statement","text":"The RetroAchievements project aims to provide tools for creating achievements for retrogames and ways to enjoy such creations. We strive to promote a healthy and collaborative community around this hobby. Everything we produce is made available for free and we will never profit from it.","title":"Mission Statement"},{"location":"guidelines/user-coc/#rules","text":"There's a lot of retrogamers around the globe, spanning various different cultures, points of view, and opinions. Therefore, in order to provide a healthy environment for the community to share their passion for retrogames, we need some rules.","title":"Rules"},{"location":"guidelines/user-coc/#short-version","text":"This short version should be enough for most people: Don't be a jerk or generally obnoxious - nobody likes trolls. Don't use our website or Discord server to share copyrighted material or information about where they can be downloaded. Keep the Discord channels and forum threads on-topic (we do have a section for off-topic chatting, though). When a moderator/admin asks you to stop, you should stop. When in doubt, ask a @mod in Discord or send a message to RAdmin on the website.","title":"Short Version"},{"location":"guidelines/user-coc/#long-version","text":"If the short version is not clear enough for you, here's a detailed one:","title":"Long Version"},{"location":"guidelines/user-coc/#examples-of-expected-behavior","text":"Focusing on what is best for the community. Showing empathy towards other community members. Being respectful when expressing your viewpoint. Gracefully accepting constructive and respectful criticism. Reporting to moderators/admins cases where these rules are being violated.","title":"Examples of expected behavior"},{"location":"guidelines/user-coc/#unacceptable-social-behavior","text":"Asking for or posting links to sites where others could download copyrighted material. Spamming messages or attempting to vandalize Discord or the website by any means. Advertising products, services, or other Discord servers without approval. Bigotry: This includes racism, sexism, elitism; intolerance regarding others' nationality, religion, sexual orientation, political beliefs, etc. Public or private harassment. Defamation, as in making false statements about a person that may injure their reputation. Threats of violence. Unwelcome sexual attention or advances towards others. Posting pornography, as in images or descriptions of erotic behavior intended to cause sexual excitement. Posting gruesome or gory images intended to cause disgust. Publishing others' private information, such as a photos of them or their physical or electronic address, without explicit permission.","title":"Unacceptable social behavior"},{"location":"guidelines/user-coc/#behavior-strongly-frowned-upon","text":"Heated public arguments. Excessive shitposting. Personal attacks, as in making abusive remarks on or relating to one's person, instead of providing evidence when examining another person's claims or comments. The moderators will step in to cool things down if arguments start getting out of hand. Check below how moderation works .","title":"Behavior strongly frowned upon"},{"location":"guidelines/user-coc/#freedom-of-speech","text":"If you just want to rant or dump derogatory comments about how we run things here, you're free to do that. But, as it's demotivating and wastes a lot of volunteers' time, we don't want it on our forums or Discord Server. There are plenty of options where you can do it around the Internet. Keep in mind that RetroAchievements.org is NOT a bastion of freedom of speech. If you have criticism, you're very welcome to say it, just be sure to be civil.","title":"Freedom of Speech"},{"location":"guidelines/user-coc/#how-moderation-works","text":"If you feel moderation is needed, ping the @mod role on our Discord server, or direct your issues to RAdmin , a shared mod-mail account. The moderation goal is to assure users adhere to the User's Code of Conduct. What a moderator should do after seeing a breach to the Code of Conduct: Formal and diplomatic warning (no sarcasm, no threatening tone). If the warning is ignored, the offender will be kicked from our Discord server. If the offender continues to ignore the moderation, they'll be banned from our Discord server. If the offender has the \"Developer\" role on the website, their privileges will be removed. Note : on the website there's no \"kick\". If the offender ignores the warning, the next step is a ban. If you've been banned and somehow want to appeal to have your access back, send an email to ramodmail@gmail.com or a Direct Message to RAdmin .","title":"How Moderation Works"},{"location":"guidelines/user-coc/#what-to-do-if-you-think-moderation-is-wrong","text":"If you think moderators are not acting like described above, send a Direct Message to RAdmin or email ramodmail@gmail.com . This is a shared moderation account that all mods and admins see. The issue will be discussed and dealt with fairly. Admins/mods who do not follow or enforce this Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's administration.","title":"What to do if you think moderation is wrong"},{"location":"guidelines/user-coc/#cheating","text":"Check the Global Leaderboard and Achievement Hunting Rules .","title":"Cheating"},{"location":"guidelines/user-coc/#faq","text":"When a member gets banned from the Discord server, are they automatically banned from the website? I created a Discord server because I want more freedom than what I have on the RetroAchievements community. Can I promote my server here? Is it mandatory for achievement creators to join the Discord server? If an achievement creator is banned from Discord will they lose the \"Developer\" role on the website? If I'm banned from the Discord server but I still want to create achievements, what should I do?","title":"FAQ"},{"location":"guidelines/user-coc/#when-a-member-gets-banned-from-the-discord-server-are-they-automatically-banned-from-the-website","text":"No. The member will still be able to use our services to play retrogames with achievements. But if the disruptive behavior continues on the website, they'll be banned from there too.","title":"When a member gets banned from the Discord server, are they automatically banned from the website?"},{"location":"guidelines/user-coc/#i-created-a-discord-server-because-i-want-more-freedom-than-what-i-have-on-the-official-retroachievements-server-can-i-promote-my-server-here","text":"No.","title":"I created a Discord server because I want more freedom than what I have on the official RetroAchievements server. Can I promote my server here?"},{"location":"guidelines/user-coc/#is-it-mandatory-for-achievement-creators-to-join-the-discord-server","text":"No. Joining our Discord server is optional. But if you're in the list of banned users there, you cannot have the \"Developer\" role on the website.","title":"Is it mandatory for achievement creators to join the Discord server?"},{"location":"guidelines/user-coc/#if-an-achievement-creator-is-banned-from-discord-will-they-lose-the-developer-role-on-the-website","text":"Yes.","title":"If an achievement creator is banned from Discord will they lose the \"Developer\" role on the website?"},{"location":"guidelines/user-coc/#if-im-banned-from-the-discord-server-but-i-still-want-to-create-achievements-what-should-i-do","text":"Send your appeal to RAdmin or ramodmail@gmail.com to try and have your ban lifted. It doesn't really matter if you want to join the server or not, if you're in the list of banned users in our Discord server, you cannot have the \"Developer\" role on the website.","title":"If I'm banned from the Discord server but I still want to create achievements, what should I do?"},{"location":"sort/badge-event-creation-policy/","text":"THIS IS ALL SUBJECT TO CHANGE PRETTY SOON - THESE ARE BASICALLY JUST RANDOM NOTES I HAD A \"Badge Event\" is any public competition or maintenance initiative that offers a badge as a site award. Examples of these are officially recognized events such as Achievement of the Week and the various Developer Events. There was even a hybrid of these in the form of the Set Rescoring Event. Eligibility \u00b6 In order for an event to be eligible for a badge, it must have: 1. Host(s): Either one or two hosts is fine, having a back-up is wise! 2. A Detailed Event Plan with: - Clear Goals: Month-long events should have either weekly goals or several overall goals. - The time required to perform given tasks should be fair and realistic. - Any RNG involved in the contest must be discussed beforehand. - Estimated Event Duration 3. A sign-up period: 7-10 days should suffice 4. Intentions to award a badge must be present at the start. A surprise announcement would not be well-received. 5. A minimum number of participants. 6. A scoreboard/leaderboard of some kind. What Is Expected of a Host or Hosts? \u00b6 Host(s) should be active on Discord as well as maintain a related forum post on the website. Event Plan Submission \u00b6 Only one event submission per host(s), unless a submitted plan is rejected or the event ends. Awarding Badges \u00b6 Host(s) will be responsible for all artwork/information used for the event entry. Badges should be awarded within two weeks of an event's end date. Event Calendar \u00b6 to be used to ensure there is no overlap between unofficial events. If there is an overlap, alternate date(s) can be negotiated. Reservation Examples: User1 hosts a badge event from January-March User2 submits an event plan and gets approved. Event duration is one month. User2 gets to host event in April, but is unable to. It is moved to May. User3 submits an event plan for a two-month event. April is available, but May is not. User3 gets to host event for June-July. No one-month event plans are submitted 7-10 days before April begins. April will not have an event.","title":"Badge Event Creation Policy"},{"location":"sort/badge-event-creation-policy/#eligibility","text":"In order for an event to be eligible for a badge, it must have: 1. Host(s): Either one or two hosts is fine, having a back-up is wise! 2. A Detailed Event Plan with: - Clear Goals: Month-long events should have either weekly goals or several overall goals. - The time required to perform given tasks should be fair and realistic. - Any RNG involved in the contest must be discussed beforehand. - Estimated Event Duration 3. A sign-up period: 7-10 days should suffice 4. Intentions to award a badge must be present at the start. A surprise announcement would not be well-received. 5. A minimum number of participants. 6. A scoreboard/leaderboard of some kind.","title":"Eligibility"},{"location":"sort/badge-event-creation-policy/#what-is-expected-of-a-host-or-hosts","text":"Host(s) should be active on Discord as well as maintain a related forum post on the website.","title":"What Is Expected of a Host or Hosts?"},{"location":"sort/badge-event-creation-policy/#event-plan-submission","text":"Only one event submission per host(s), unless a submitted plan is rejected or the event ends.","title":"Event Plan Submission"},{"location":"sort/badge-event-creation-policy/#awarding-badges","text":"Host(s) will be responsible for all artwork/information used for the event entry. Badges should be awarded within two weeks of an event's end date.","title":"Awarding Badges"},{"location":"sort/badge-event-creation-policy/#event-calendar","text":"to be used to ensure there is no overlap between unofficial events. If there is an overlap, alternate date(s) can be negotiated. Reservation Examples: User1 hosts a badge event from January-March User2 submits an event plan and gets approved. Event duration is one month. User2 gets to host event in April, but is unable to. It is moved to May. User3 submits an event plan for a two-month event. April is available, but May is not. User3 gets to host event for June-July. No one-month event plans are submitted 7-10 days before April begins. April will not have an event.","title":"Event Calendar"},{"location":"sort/cheevo-workshop/","text":"The Cheevo Workshop \u00b6 This page is a work in progress. Guidelines are not final; we're still getting kinks worked out. Details \u00b6 The Cheevo Workshop is an ongoing open achievement development project where anyone can get involved and everyone has a say in the creation of a chosen game's achievement set. The goal of the project is to promote collaboration between developers, help jr-devs raise their proficiency, motivate former/retired developers into becoming active again by taking on smaller roles, and to encourage users to try out achievement development. If you are not a developer, you can still contribute by submitting ideas, designing badges, testing for bugs in unofficial, etc. If you wish to participate in the workshop, request the @workshop role from an admin or a mod. Rules \u00b6 One set at a time! Adhere to the Developer's Code of Conduct. The game picked for each workshop cannot be reserved by a developer at the time it is chosen. Do not make yourself hard to work with. Go into the workshop with an open mind. Do not get greedy about credit and do not try to 'hog the set.' Once contribution credits are implemented, they will be put to good use here. In the meantime, specific credits will be stated on Discord and the game's forum thread. When and if you decide to participate, announce how you'd like to contribute and present your findings and progress. This is to prevent participants from overlapping on tasks. This is especially important for tasks where overwriting someone else's work can occur (i.e. code notes). A set lead should be voted on by workshop participants. The set lead is responsible for maintaining a development schedule (aka due dates). MIA users should not stall a set's progress. This is not a competition. Use the workshop to build a good set, to help others, and to learn. Workshop Checklist \u00b6 This is a general road map for a set's development cycle when being developed by the workshop. Whenever a step of the Workshop Checklist is underway, it should be represented in the topic of the #workshop channel. 1. Voting \u00b6 This is when a game undergoing the workshop treatment is decided on. * Announcements should be made in the #community-news channel and pinging the @event-news role. * The first ten suggestions will be put up for a vote. * Polls can be submitted in the #poll-me channel for the widest reach. * Allow a 24-hour voting period, but do not use timed polls until ghost voting can be dealt with. * Be sure to research each game, mostly to see if a set has already been reserved or not. 2. Team Building, Research, Digging, Planning \u00b6 Once a game has been selected, the workshop can begin their work immediately. The following should take place during this step: * Form a team. Someone may request to be the set lead to guide the development process. If there are disputes on who is the set lead, a vote among workshop participants shall decide who ultimately gets the role. * Edit the game page to make sure all information, screenshots, box art, etc. are accurate. * Set reservation on the game's forum thread. This post is to be made by CheevoWorkshop , so it will require an admin's approval. Participants should be listed. An example of a CheevoWorkshop post can be found here. * Check gamefaqs, tcrf.net, gamehacking.org, YouTube, etc. Present any interesting discoveries that can be utilized for the achievement set. * Take turns finding memory addresses and values for anything that's noteworthy. \"Taking turns\" should be stressed here. Announce on the #workshop channel that you will be doing some RAM digging and also announce when you finish or are taking a break. This will allow others to resume digging without saving over any of your findings. * As a group, brainstorm a potential achievement list. These can be kept track of by using Google Sheets, an up-to-date pinned message, etc. * Check to see if design ideas are possible. 3. Set Development \u00b6 Once an achievement list is created and a sufficient amount of addresses have been found, actual set development can occur. Consistency is very important here. Please note that nothing should be uploaded to Unofficial during this step. * The set lead may split the set up among the participating developers. * Agree on logic that is used. * Achievements should be tested locally. Issues that arise should be discussed in the #workshop channel. This will inform other participants of potential issues as well as lead to possible solutions. 4. Final Draft, Information, Protection, Badges \u00b6 Agree upon and post a final draft of the achievement plan. If applicable, decide how to split up the uploads into unofficial. A lot of 'obvious' achievements such as progress and collectibles can be split up between participants. The easiest way to do this is to split them up evenly, but if there's any left over, they can be uploaded by the CheevoWorkshop user or set lead. Come up with names, descriptions, and badges for each achievement. Properly allocate the points. Add password, cheat, and/or save protection. Add leaderboards and/or rich presence. 5. Unofficial, Testing, Fixes \u00b6 Push the set to Unofficial. Help each other test the achievements and find holes in the logic. Asking for volunteers who will play differently than the developers is not 100% necessary, but desirable. Improve stability. Editing another user's work must be announced beforehand with a screenshot of the work you intend to edit and why the edit is necessary. Verify alternate hashes, harmless hacks, etc. 6. Core, Tickets, Feedback, Cooldown \u00b6 Push the set to core and make an announcement. Whoever takes credit for an achievement will be responsible for potential tickets. Be sure to fix them. Announce fixes in #workshop in cases the fixes would apply to achievements uploaded by other users. There should be a cooldown period after each set. This is to deal with any initial tickets and to discuss potential submissions for the next workshop. Other Information \u00b6 This is the bot command that was used for the first poll (note there are only 8 because there were only 8 legit suggestions): !poll 'Please select one of the following for the workshop:' 'Pokemon Trading Card Game 2 (GBC) - <https://retroachievements.org/game/3692>' 'Kirby Tilt n Tumble (GBC) - <https://retroachievements.org/game/709>' 'Gekido Advance - Kintaros Revenge (GBA) - <https://retroachievements.org/game/7217>' 'Devil World (NES) - <https://retroachievements.org/game/4759>' 'James Pond - Underwater Agent (Mega Drive) - <https://retroachievements.org/game/2449>' 'Yu-Gi-Oh! Dungeon Dice Monsters (GBA) - <https://retroachievements.org/game/5537>' 'Glover (N64) - <https://retroachievements.org/game/10309>' 'ToeJam and Earl in Panic on Fonkotron (Mega Drive) <https://retroachievements.org/game/806>' An evolving badge is planned for all participants. The badge will detail how many workshops a user has participated in.","title":"The Cheevo Workshop"},{"location":"sort/cheevo-workshop/#the-cheevo-workshop","text":"This page is a work in progress. Guidelines are not final; we're still getting kinks worked out.","title":"The Cheevo Workshop"},{"location":"sort/cheevo-workshop/#details","text":"The Cheevo Workshop is an ongoing open achievement development project where anyone can get involved and everyone has a say in the creation of a chosen game's achievement set. The goal of the project is to promote collaboration between developers, help jr-devs raise their proficiency, motivate former/retired developers into becoming active again by taking on smaller roles, and to encourage users to try out achievement development. If you are not a developer, you can still contribute by submitting ideas, designing badges, testing for bugs in unofficial, etc. If you wish to participate in the workshop, request the @workshop role from an admin or a mod.","title":"Details"},{"location":"sort/cheevo-workshop/#rules","text":"One set at a time! Adhere to the Developer's Code of Conduct. The game picked for each workshop cannot be reserved by a developer at the time it is chosen. Do not make yourself hard to work with. Go into the workshop with an open mind. Do not get greedy about credit and do not try to 'hog the set.' Once contribution credits are implemented, they will be put to good use here. In the meantime, specific credits will be stated on Discord and the game's forum thread. When and if you decide to participate, announce how you'd like to contribute and present your findings and progress. This is to prevent participants from overlapping on tasks. This is especially important for tasks where overwriting someone else's work can occur (i.e. code notes). A set lead should be voted on by workshop participants. The set lead is responsible for maintaining a development schedule (aka due dates). MIA users should not stall a set's progress. This is not a competition. Use the workshop to build a good set, to help others, and to learn.","title":"Rules"},{"location":"sort/cheevo-workshop/#workshop-checklist","text":"This is a general road map for a set's development cycle when being developed by the workshop. Whenever a step of the Workshop Checklist is underway, it should be represented in the topic of the #workshop channel.","title":"Workshop Checklist"},{"location":"sort/cheevo-workshop/#1-voting","text":"This is when a game undergoing the workshop treatment is decided on. * Announcements should be made in the #community-news channel and pinging the @event-news role. * The first ten suggestions will be put up for a vote. * Polls can be submitted in the #poll-me channel for the widest reach. * Allow a 24-hour voting period, but do not use timed polls until ghost voting can be dealt with. * Be sure to research each game, mostly to see if a set has already been reserved or not.","title":"1. Voting"},{"location":"sort/cheevo-workshop/#2-team-building-research-digging-planning","text":"Once a game has been selected, the workshop can begin their work immediately. The following should take place during this step: * Form a team. Someone may request to be the set lead to guide the development process. If there are disputes on who is the set lead, a vote among workshop participants shall decide who ultimately gets the role. * Edit the game page to make sure all information, screenshots, box art, etc. are accurate. * Set reservation on the game's forum thread. This post is to be made by CheevoWorkshop , so it will require an admin's approval. Participants should be listed. An example of a CheevoWorkshop post can be found here. * Check gamefaqs, tcrf.net, gamehacking.org, YouTube, etc. Present any interesting discoveries that can be utilized for the achievement set. * Take turns finding memory addresses and values for anything that's noteworthy. \"Taking turns\" should be stressed here. Announce on the #workshop channel that you will be doing some RAM digging and also announce when you finish or are taking a break. This will allow others to resume digging without saving over any of your findings. * As a group, brainstorm a potential achievement list. These can be kept track of by using Google Sheets, an up-to-date pinned message, etc. * Check to see if design ideas are possible.","title":"2. Team Building, Research, Digging, Planning"},{"location":"sort/cheevo-workshop/#3-set-development","text":"Once an achievement list is created and a sufficient amount of addresses have been found, actual set development can occur. Consistency is very important here. Please note that nothing should be uploaded to Unofficial during this step. * The set lead may split the set up among the participating developers. * Agree on logic that is used. * Achievements should be tested locally. Issues that arise should be discussed in the #workshop channel. This will inform other participants of potential issues as well as lead to possible solutions.","title":"3. Set Development"},{"location":"sort/cheevo-workshop/#4-final-draft-information-protection-badges","text":"Agree upon and post a final draft of the achievement plan. If applicable, decide how to split up the uploads into unofficial. A lot of 'obvious' achievements such as progress and collectibles can be split up between participants. The easiest way to do this is to split them up evenly, but if there's any left over, they can be uploaded by the CheevoWorkshop user or set lead. Come up with names, descriptions, and badges for each achievement. Properly allocate the points. Add password, cheat, and/or save protection. Add leaderboards and/or rich presence.","title":"4. Final Draft, Information, Protection, Badges"},{"location":"sort/cheevo-workshop/#5-unofficial-testing-fixes","text":"Push the set to Unofficial. Help each other test the achievements and find holes in the logic. Asking for volunteers who will play differently than the developers is not 100% necessary, but desirable. Improve stability. Editing another user's work must be announced beforehand with a screenshot of the work you intend to edit and why the edit is necessary. Verify alternate hashes, harmless hacks, etc.","title":"5. Unofficial, Testing, Fixes"},{"location":"sort/cheevo-workshop/#6-core-tickets-feedback-cooldown","text":"Push the set to core and make an announcement. Whoever takes credit for an achievement will be responsible for potential tickets. Be sure to fix them. Announce fixes in #workshop in cases the fixes would apply to achievements uploaded by other users. There should be a cooldown period after each set. This is to deal with any initial tickets and to discuss potential submissions for the next workshop.","title":"6. Core, Tickets, Feedback, Cooldown"},{"location":"sort/cheevo-workshop/#other-information","text":"This is the bot command that was used for the first poll (note there are only 8 because there were only 8 legit suggestions): !poll 'Please select one of the following for the workshop:' 'Pokemon Trading Card Game 2 (GBC) - <https://retroachievements.org/game/3692>' 'Kirby Tilt n Tumble (GBC) - <https://retroachievements.org/game/709>' 'Gekido Advance - Kintaros Revenge (GBA) - <https://retroachievements.org/game/7217>' 'Devil World (NES) - <https://retroachievements.org/game/4759>' 'James Pond - Underwater Agent (Mega Drive) - <https://retroachievements.org/game/2449>' 'Yu-Gi-Oh! Dungeon Dice Monsters (GBA) - <https://retroachievements.org/game/5537>' 'Glover (N64) - <https://retroachievements.org/game/10309>' 'ToeJam and Earl in Panic on Fonkotron (Mega Drive) <https://retroachievements.org/game/806>' An evolving badge is planned for all participants. The badge will detail how many workshops a user has participated in.","title":"Other Information"},{"location":"sort/combining-flags/","text":"ResetIf and PauseIf can be applied to a condition following any number of Add Hits , Add Source , or Sub Source conditions. Going back to the Add Source example above, if ResetIf were applied to condition 2, the achievement would reset because 1 + 2 > 0 !","title":"Combining Flags"},{"location":"sort/contributing-with-the-docs/","text":"Summing up \u00b6 Log into your github account (or create an account if you don't have one)! Edit a page (or create a new one) on the RAwiki . You must use the Markdown markup language. Just check the Markdown caveats below . Sooner or later a maintainer will generate the pages for RAdocs . RAWiki and RADocs \u00b6 The RetroAchievements Documentation is divided into two parts: RetroAchievements wiki RetroAchievements docs The wiki is where these documents are created and edited. Anyone (with a github account) is able to edit the wiki's content. Then, if you have something to share, please edit the wiki! The RetroAchievements docs website has (almost) the same content as the wiki, but with a more pleasant look. The content of this website is generated by its maintainers using the wiki's content as input. When a change is made in the wiki this change is NOT instantaneously reflected in the docs. The conversion is performed by a maintainer from time to time. Markdown caveats \u00b6 Markdown is a lightweight and extremely easy to learn markup language with plain text formatting syntax. In order to contribute in our project you must know at least the basics of markdown. Here is a good one-page reference: http://commonmark.org/help/ , and here you can try a 10 minutes tutorial . Moreover, this wiki needs to be written in a certain format in order to convert cleanly to the pretty static pages. It's because we use mkdocs ) and it uses python markdown and github uses github flavoured markdown, so there are some minor issues of formatting that will need to be addressed. Headings \u00b6 The headings (defined by # ) should follow a natural progression of the hierarchy of the page contents. But you CANNOT have two title headings (those with only one # symbol). Otherwise they won't show up on the table of contents on the right side of the page E.G. # Title ## Main heading one ### Sub Heading one ### Sub heading two ## Main heading two etc. Links \u00b6 Links should follow this syntax [Link](path to link) Note : If it is a link to another wiki page it should be a relative path: [Tips and Tricks](Tips-and-Tricks) Do NOT use complete a full URL when linking to another wiki page, like this ( yeah, this is an example of you should NOT do ): [Tips and Tricks](https://github.com/RetroAchievements/docs/wiki/Tips-and-Tricks) Images \u00b6 Links to images should follow the same syntax as the example below: ![Image](http://url/a.png) Note: : In order to host images for this documentation project, you can post them in this issue thread here and use the github image hosting hack . Tables \u00b6 A simple table looks like this: First Header | Second Header | Third Header ------------ | ------------- | ------------ Content Cell | Content Cell | Content Cell Content Cell | Content Cell | Content Cell Content Cell | Content Cell | Content Cell It should render like this: First Header Second Header Third Header Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell You can specify alignment for each column by adding colons to separator lines: First Header | Second Header | Third Header :----------- |:-------------:| -----------: Left | Center | Right Left | Center | Right Left | Center | Right Results: First Header Second Header Third Header Left Center Right Left Center Right Left Center Right","title":"Contributing with the Docs"},{"location":"sort/contributing-with-the-docs/#summing-up","text":"Log into your github account (or create an account if you don't have one)! Edit a page (or create a new one) on the RAwiki . You must use the Markdown markup language. Just check the Markdown caveats below . Sooner or later a maintainer will generate the pages for RAdocs .","title":"Summing up"},{"location":"sort/contributing-with-the-docs/#rawiki-and-radocs","text":"The RetroAchievements Documentation is divided into two parts: RetroAchievements wiki RetroAchievements docs The wiki is where these documents are created and edited. Anyone (with a github account) is able to edit the wiki's content. Then, if you have something to share, please edit the wiki! The RetroAchievements docs website has (almost) the same content as the wiki, but with a more pleasant look. The content of this website is generated by its maintainers using the wiki's content as input. When a change is made in the wiki this change is NOT instantaneously reflected in the docs. The conversion is performed by a maintainer from time to time.","title":"RAWiki and RADocs"},{"location":"sort/contributing-with-the-docs/#markdown-caveats","text":"Markdown is a lightweight and extremely easy to learn markup language with plain text formatting syntax. In order to contribute in our project you must know at least the basics of markdown. Here is a good one-page reference: http://commonmark.org/help/ , and here you can try a 10 minutes tutorial . Moreover, this wiki needs to be written in a certain format in order to convert cleanly to the pretty static pages. It's because we use mkdocs ) and it uses python markdown and github uses github flavoured markdown, so there are some minor issues of formatting that will need to be addressed.","title":"Markdown caveats"},{"location":"sort/contributing-with-the-docs/#headings","text":"The headings (defined by # ) should follow a natural progression of the hierarchy of the page contents. But you CANNOT have two title headings (those with only one # symbol). Otherwise they won't show up on the table of contents on the right side of the page E.G. # Title ## Main heading one ### Sub Heading one ### Sub heading two ## Main heading two etc.","title":"Headings"},{"location":"sort/contributing-with-the-docs/#links","text":"Links should follow this syntax [Link](path to link) Note : If it is a link to another wiki page it should be a relative path: [Tips and Tricks](Tips-and-Tricks) Do NOT use complete a full URL when linking to another wiki page, like this ( yeah, this is an example of you should NOT do ): [Tips and Tricks](https://github.com/RetroAchievements/docs/wiki/Tips-and-Tricks)","title":"Links"},{"location":"sort/contributing-with-the-docs/#images","text":"Links to images should follow the same syntax as the example below: ![Image](http://url/a.png) Note: : In order to host images for this documentation project, you can post them in this issue thread here and use the github image hosting hack .","title":"Images"},{"location":"sort/contributing-with-the-docs/#tables","text":"A simple table looks like this: First Header | Second Header | Third Header ------------ | ------------- | ------------ Content Cell | Content Cell | Content Cell Content Cell | Content Cell | Content Cell Content Cell | Content Cell | Content Cell It should render like this: First Header Second Header Third Header Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell You can specify alignment for each column by adding colons to separator lines: First Header | Second Header | Third Header :----------- |:-------------:| -----------: Left | Center | Right Left | Center | Right Left | Center | Right Results: First Header Second Header Third Header Left Center Right Left Center Right Left Center Right","title":"Tables"},{"location":"sort/forum-labels/","text":"Every ROM that is linked to an achievement set should be clearly identified and labeled in the game entry's forum topic. These labels help players know which versions of a game are compatible as well as if there are any translation patches, bug fixes, cosmetic hacks, quality of life hacks, etc. that they can use. Info to Include \u00b6 The most important things to include in a forum label: - Group - No Intro, Redump, FB Neo, etc. Typically done by including one of the images in the chart below. - Filename - Filenames often include the game title, region, languages, and revision number. Each are extremely important, especially when there are multiple ROMs for a game. - RA Checksum: Check Game Identification to learn more about these. Additional info that may be included: - ROM Checksum - CRC32 Checksum - Links to patches, if applicable. (Add note about RAPatches later) Images \u00b6 Name Label Note Linked Files Optional header for the labels Main Sometimes used to show the primary ROM used by the set developer(s) No Intro The most common for cartridge-based games Redump The most common for disc-based games TOSEC FB Neo Used for Arcade Neo Kobe Mostly for PC-8001 and PC-8801 Atari Age Popular site for Homebrews itch.io Popular site for Homebrews MSU-1 Used to mark SNES ROMs with MSU-1 patches mamesl MAME Software List GoodTools NonGood Offline List Examples \u00b6 Deja Vu (NES) \u00b6 By looking at the label above, a player will know the following: - The standard US No Intro ROM is supported. - An Uncensored patch is available to use with the US ROM. - The Japanese No Intro ROM is supported. [img=https://retroachievements.org/Images/labels/nointro.png] [b]Deja Vu (USA).nes[/b] [i]RA Checksum:[/i] ed0a5c2ad1b301f1e29bf76223ec1053 [i]ROM Checksum:[/i] 8a4e0e04d747238454d620a80b22e7fa [i]CRC32 Checksum:[/i] A9613A33 + [b][url=https://www.romhacking.net/hacks/5880/]Deja Vu Uncensored[/url][/b] [i]RA Checksum:[/i] a62c5039182c50d566778e2496f10f84 [img=https://retroachievements.org/Images/labels/nointro.png] [b]Deja Vu - A Nightmare Comes True!! (Japan).nes[/b] [i]RA Checksum:[/i] d4dd255f241437c36476cf7ef5be5f15 [i]ROM Checksum:[/i] fd15b4c208dc9fa4dbea85ece75147c1 [i]CRC32 Checksum:[/i] 1AE28A7C Snatcher (Sega CD) \u00b6 [img=https://retroachievements.org/Images/labels/redump.png] [b]Snatcher (USA)[/b] [i]RA Checksum:[/i] 38318ed1f6f7732a3fa2495288f6da24 Parasite Eve (PlayStation) \u00b6 [img=https://retroachievements.org/Images/labels/redump.png] [b]Parasite Eve (USA) (Disc 1) [SLUS_006.62] [/b] [i]RA Checksum:[/i] 69562c06a66906577c780fefcb7af204 [b]Parasite Eve (USA) (Disc 2) [SLUS_006.68] [/b] [i]RA Checksum:[/i] a5fcf895126e392c5696bbb717c7165c + [b][url=https://tradusquare.es/ficha.php?parasite-eve]Spanish Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: cc280cc97864ea75741d06b3ab46cafb [i]RA Checksum:[/i] Disc 2: fd27243218b159fc9c6fd156f0135a6b + [b][url=https://traf.romhack.org/?p=patchs&pid=594]French Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: ec545832e4d41e959de21f6fe43c7174 [i]RA Checksum:[/i] Disc 2: a6ccb7f26e01d07742ad71ceadecc4bf + [b][url=https://github.com/RetroAchievements/RAPatches/raw/main/PS1/Translation/11277-ParasiteEvePortugueseTranslation.7z]PT-BR Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: 46c0374e9302fb7b2716e9761014995a [i]RA Checksum:[/i] Disc 2: cf5b687695aca7649c9f8b96213ac6de + [b][url=https://www.romhacking.net/translations/6089/]German Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: 622d3e46c5928ec93d1618faa1741dd4 [i]RA Checksum:[/i] Disc 2: 4aecf27624c44021c31f87f130e207f6 Legend of Heroes, The: Trails in the Sky FC (PlayStation Portable) \u00b6 [img=https://retroachievements.org/Images/labels/redump.png] [img=https://retroachievements.org/Images/labels/nointro.png] [b]Legend of Heroes, The - Trails in the Sky (USA).iso [/b] [i]RA Checksum:[/i] cff66ecd124db9624bfda5cd4cbb40a0 + [url=https://github.com/RetroAchievements/RAPatches/raw/main/PSP/Subset/11115-TrailsintheSky-Subset-NGNightmare.7z]NG Nightmare Subset Patch[/url] [i]RA Checksum:[/i] 907730169e7063d031c0934c5b7396a3 (will update to expand on all of this soon)","title":"Forum Labels"},{"location":"sort/forum-labels/#info-to-include","text":"The most important things to include in a forum label: - Group - No Intro, Redump, FB Neo, etc. Typically done by including one of the images in the chart below. - Filename - Filenames often include the game title, region, languages, and revision number. Each are extremely important, especially when there are multiple ROMs for a game. - RA Checksum: Check Game Identification to learn more about these. Additional info that may be included: - ROM Checksum - CRC32 Checksum - Links to patches, if applicable. (Add note about RAPatches later)","title":"Info to Include"},{"location":"sort/forum-labels/#images","text":"Name Label Note Linked Files Optional header for the labels Main Sometimes used to show the primary ROM used by the set developer(s) No Intro The most common for cartridge-based games Redump The most common for disc-based games TOSEC FB Neo Used for Arcade Neo Kobe Mostly for PC-8001 and PC-8801 Atari Age Popular site for Homebrews itch.io Popular site for Homebrews MSU-1 Used to mark SNES ROMs with MSU-1 patches mamesl MAME Software List GoodTools NonGood Offline List","title":"Images"},{"location":"sort/forum-labels/#examples","text":"","title":"Examples"},{"location":"sort/forum-labels/#deja-vu-nes","text":"By looking at the label above, a player will know the following: - The standard US No Intro ROM is supported. - An Uncensored patch is available to use with the US ROM. - The Japanese No Intro ROM is supported. [img=https://retroachievements.org/Images/labels/nointro.png] [b]Deja Vu (USA).nes[/b] [i]RA Checksum:[/i] ed0a5c2ad1b301f1e29bf76223ec1053 [i]ROM Checksum:[/i] 8a4e0e04d747238454d620a80b22e7fa [i]CRC32 Checksum:[/i] A9613A33 + [b][url=https://www.romhacking.net/hacks/5880/]Deja Vu Uncensored[/url][/b] [i]RA Checksum:[/i] a62c5039182c50d566778e2496f10f84 [img=https://retroachievements.org/Images/labels/nointro.png] [b]Deja Vu - A Nightmare Comes True!! (Japan).nes[/b] [i]RA Checksum:[/i] d4dd255f241437c36476cf7ef5be5f15 [i]ROM Checksum:[/i] fd15b4c208dc9fa4dbea85ece75147c1 [i]CRC32 Checksum:[/i] 1AE28A7C","title":"Deja Vu (NES)"},{"location":"sort/forum-labels/#snatcher-sega-cd","text":"[img=https://retroachievements.org/Images/labels/redump.png] [b]Snatcher (USA)[/b] [i]RA Checksum:[/i] 38318ed1f6f7732a3fa2495288f6da24","title":"Snatcher (Sega CD)"},{"location":"sort/forum-labels/#parasite-eve-playstation","text":"[img=https://retroachievements.org/Images/labels/redump.png] [b]Parasite Eve (USA) (Disc 1) [SLUS_006.62] [/b] [i]RA Checksum:[/i] 69562c06a66906577c780fefcb7af204 [b]Parasite Eve (USA) (Disc 2) [SLUS_006.68] [/b] [i]RA Checksum:[/i] a5fcf895126e392c5696bbb717c7165c + [b][url=https://tradusquare.es/ficha.php?parasite-eve]Spanish Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: cc280cc97864ea75741d06b3ab46cafb [i]RA Checksum:[/i] Disc 2: fd27243218b159fc9c6fd156f0135a6b + [b][url=https://traf.romhack.org/?p=patchs&pid=594]French Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: ec545832e4d41e959de21f6fe43c7174 [i]RA Checksum:[/i] Disc 2: a6ccb7f26e01d07742ad71ceadecc4bf + [b][url=https://github.com/RetroAchievements/RAPatches/raw/main/PS1/Translation/11277-ParasiteEvePortugueseTranslation.7z]PT-BR Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: 46c0374e9302fb7b2716e9761014995a [i]RA Checksum:[/i] Disc 2: cf5b687695aca7649c9f8b96213ac6de + [b][url=https://www.romhacking.net/translations/6089/]German Translation[/url][/b] [i]RA Checksum:[/i] Disc 1: 622d3e46c5928ec93d1618faa1741dd4 [i]RA Checksum:[/i] Disc 2: 4aecf27624c44021c31f87f130e207f6","title":"Parasite Eve (PlayStation)"},{"location":"sort/forum-labels/#legend-of-heroes-the-trails-in-the-sky-fc-playstation-portable","text":"[img=https://retroachievements.org/Images/labels/redump.png] [img=https://retroachievements.org/Images/labels/nointro.png] [b]Legend of Heroes, The - Trails in the Sky (USA).iso [/b] [i]RA Checksum:[/i] cff66ecd124db9624bfda5cd4cbb40a0 + [url=https://github.com/RetroAchievements/RAPatches/raw/main/PSP/Subset/11115-TrailsintheSky-Subset-NGNightmare.7z]NG Nightmare Subset Patch[/url] [i]RA Checksum:[/i] 907730169e7063d031c0934c5b7396a3 (will update to expand on all of this soon)","title":"Legend of Heroes, The: Trails in the Sky FC (PlayStation Portable)"},{"location":"sort/how-to-run-ralibretro-on-linux/","text":"Nerds","title":"RALib on Linux"},{"location":"sort/leaderboard-bug-list-and-improvement-ideas/","text":"Bugs \u00b6 Leaderboards only show the top 5 during the popup submit results, not your position (if you're not in the top 5). Show the player rank seems to be the right thing to do. Cancel only takes action on the first condition, everything else is ignored. Fix leaderboard order bug, the order specified by the dev is ignored instead displaying order of creation. Submission dates are not updating when an improved score is submitted. (The rank is updating) Improvement Ideas \u00b6 General \u00b6 Make all leaderboard submits hardcore only! Always cancel on reset. Add clone leaderboard button. Usurp leaderboard: Change it so when a player matches a score the most recent entry goes on top. Math and Syntax \u00b6 Add syntax for hits/add reset? Exponents syntax especially x^0. Order of operation calculation. Multiple start/submit conditions ie alts/ORs for start/cancel/submit Allow for the multiplication of two or more addresses Hidden Leaderboards and overlay \u00b6 Add an option to have hidden leaderboards - choose if visible. Add an option to hide cancel popup. Make submit box smaller? Add an option to be able to choose location in overlay. Add an option to display popup text that's not for any leaderboard. Allow for control of how long the popup will stay? Able to change overlay color. Idea for on screen notification and an expansion on the idea: \"Add an option to display popup text that's not for any leaderboard. Allow for control of how long the popup will stay\" The point is to help the player track their progress on certain types of achievements. Using something similar to the leaderboard, when selected by the developer, allow hits to be displayed on screen. It could perhaps show hits, or the sum of hits from multiple conditions. Also, maybe with a similar text info as rich presence, where on screen it would display 4/9 Goomba's stomped. or 20/100 seconds survived or 9 items collected, etc. Beyond that, achievements with this type OSD info built in, they could either be turned on and off individually from the overlay. )Where they would always be off if the achievement was complete.) OR have a manual start and stop similar to leaderboards. This could be used to display failed attempts. For example a ResetIf could be marked as a failstate, when the reset happens OSD would show Escaping the cave without being seen: failed.","title":"LB Bug and Improvement"},{"location":"sort/leaderboard-bug-list-and-improvement-ideas/#bugs","text":"Leaderboards only show the top 5 during the popup submit results, not your position (if you're not in the top 5). Show the player rank seems to be the right thing to do. Cancel only takes action on the first condition, everything else is ignored. Fix leaderboard order bug, the order specified by the dev is ignored instead displaying order of creation. Submission dates are not updating when an improved score is submitted. (The rank is updating)","title":"Bugs"},{"location":"sort/leaderboard-bug-list-and-improvement-ideas/#improvement-ideas","text":"","title":"Improvement Ideas"},{"location":"sort/leaderboard-bug-list-and-improvement-ideas/#general","text":"Make all leaderboard submits hardcore only! Always cancel on reset. Add clone leaderboard button. Usurp leaderboard: Change it so when a player matches a score the most recent entry goes on top.","title":"General"},{"location":"sort/leaderboard-bug-list-and-improvement-ideas/#math-and-syntax","text":"Add syntax for hits/add reset? Exponents syntax especially x^0. Order of operation calculation. Multiple start/submit conditions ie alts/ORs for start/cancel/submit Allow for the multiplication of two or more addresses","title":"Math and Syntax"},{"location":"sort/leaderboard-bug-list-and-improvement-ideas/#hidden-leaderboards-and-overlay","text":"Add an option to have hidden leaderboards - choose if visible. Add an option to hide cancel popup. Make submit box smaller? Add an option to be able to choose location in overlay. Add an option to display popup text that's not for any leaderboard. Allow for control of how long the popup will stay? Able to change overlay color. Idea for on screen notification and an expansion on the idea: \"Add an option to display popup text that's not for any leaderboard. Allow for control of how long the popup will stay\" The point is to help the player track their progress on certain types of achievements. Using something similar to the leaderboard, when selected by the developer, allow hits to be displayed on screen. It could perhaps show hits, or the sum of hits from multiple conditions. Also, maybe with a similar text info as rich presence, where on screen it would display 4/9 Goomba's stomped. or 20/100 seconds survived or 9 items collected, etc. Beyond that, achievements with this type OSD info built in, they could either be turned on and off individually from the overlay. )Where they would always be off if the achievement was complete.) OR have a manual start and stop similar to leaderboards. This could be used to display failed attempts. For example a ResetIf could be marked as a failstate, when the reset happens OSD would show Escaping the cave without being seen: failed.","title":"Hidden Leaderboards and overlay"},{"location":"sort/memory-searching-techniques/","text":"Know good techniques? Add to this page!","title":"Mem Searching Techniques"},{"location":"sort/newtest-overview/","text":"Welcome to RetroAchievements Documentation ! RetroAchievements Manifesto User Documentation Developer Documentation Other Contributor Documentation Events RANews RAGuides Discord Server RetroAchievements Manifesto \u00b6 RetroAchievements Manifesto User Documentation \u00b6 User's Code of Conduct Rules (Merge short version and long version?) Unacceptable Social Behavior Behavior Strongly Frowned Upon Freedom of Speech How Moderation Works What to do if you think moderation is wrong Cheating Global Leaderboard Hardcore Mode Untracked Status What Is and Isn't Allowed Cheating Reports Penalties for Cheating Appeals Further Information General Information About RetroAchievements Hardcore and Softcore modes Ways to contribute Report broken achievements Creating tickets Save states Become an achievement developer Suggesting achievements Make badges Site cleanup Help with documentation Participate in events Write for RANews Create RAGuides Become a Playtester Player Resources RAEmulators Overlay Themes Unlock Sounds Free Homebrews Useful Tools Player FAQ Where can I find ROMs? Which emulators and/or cores to use My game is not loading achievements \"Unsupported\" messages Manual Unlocks How do I make achievements? How do I request a set? Why can't I see my new profile picture? My welcome email has gone missing! What are the white points? How can I contribute? How do I suggest games to add to the database? When will RetroAchievements support this or that console? How do I reset my password? Player Tutorials Console Specific Arcade PSP Assets Using DLC How to configure OBS Studio to see the popups Multi-Disc Games Developer Documentation \u00b6 Developer Code of Conduct Rules Remaining in good standing Set Reservations Set Requirements Game Info, badges, content, etc. Unwelcome Concepts Revisions Inactivity Development Information Getting started Game identification Entries Patches The Junior Developer process New achievement set checklist Memory Inspector overview Asset List Asset Editor overview Achievement scoring Achievement Logic Features Leaderboards Rich Presence Development Resources Achievement Design Templates Development Roadmaps Dev Tips Case Studies Useful Tools Console-Specific Tips Dev Logs Emulator Support and Issues Development FAQs How do I know what version of the game I should use? What is RATools? Development Troubleshooting Development Tutorials Real Examples Making hash labels Other Contributor Documentation \u00b6 Artists Art Helpers and Requests Guidelines Game icons Badges Creation Tips Icon Gauntlet Rules How to create polls How to upload badges Writers Playtesters Events \u00b6 Current Events Past and Seasonal Events RANews \u00b6 RAGuides \u00b6 Discord Server \u00b6 Policies Channel Outline Roles Bots RABot Help! Commands spam&eggs Help! Commands Carl-bot Help! Commands","title":"New Test Overview"},{"location":"sort/newtest-overview/#retroachievements-manifesto","text":"RetroAchievements Manifesto","title":"RetroAchievements Manifesto"},{"location":"sort/newtest-overview/#user-documentation","text":"User's Code of Conduct Rules (Merge short version and long version?) Unacceptable Social Behavior Behavior Strongly Frowned Upon Freedom of Speech How Moderation Works What to do if you think moderation is wrong Cheating Global Leaderboard Hardcore Mode Untracked Status What Is and Isn't Allowed Cheating Reports Penalties for Cheating Appeals Further Information General Information About RetroAchievements Hardcore and Softcore modes Ways to contribute Report broken achievements Creating tickets Save states Become an achievement developer Suggesting achievements Make badges Site cleanup Help with documentation Participate in events Write for RANews Create RAGuides Become a Playtester Player Resources RAEmulators Overlay Themes Unlock Sounds Free Homebrews Useful Tools Player FAQ Where can I find ROMs? Which emulators and/or cores to use My game is not loading achievements \"Unsupported\" messages Manual Unlocks How do I make achievements? How do I request a set? Why can't I see my new profile picture? My welcome email has gone missing! What are the white points? How can I contribute? How do I suggest games to add to the database? When will RetroAchievements support this or that console? How do I reset my password? Player Tutorials Console Specific Arcade PSP Assets Using DLC How to configure OBS Studio to see the popups Multi-Disc Games","title":"User Documentation"},{"location":"sort/newtest-overview/#developer-documentation","text":"Developer Code of Conduct Rules Remaining in good standing Set Reservations Set Requirements Game Info, badges, content, etc. Unwelcome Concepts Revisions Inactivity Development Information Getting started Game identification Entries Patches The Junior Developer process New achievement set checklist Memory Inspector overview Asset List Asset Editor overview Achievement scoring Achievement Logic Features Leaderboards Rich Presence Development Resources Achievement Design Templates Development Roadmaps Dev Tips Case Studies Useful Tools Console-Specific Tips Dev Logs Emulator Support and Issues Development FAQs How do I know what version of the game I should use? What is RATools? Development Troubleshooting Development Tutorials Real Examples Making hash labels","title":"Developer Documentation"},{"location":"sort/newtest-overview/#other-contributor-documentation","text":"Artists Art Helpers and Requests Guidelines Game icons Badges Creation Tips Icon Gauntlet Rules How to create polls How to upload badges Writers Playtesters","title":"Other Contributor Documentation"},{"location":"sort/newtest-overview/#events","text":"Current Events Past and Seasonal Events","title":"Events"},{"location":"sort/newtest-overview/#ranews","text":"","title":"RANews"},{"location":"sort/newtest-overview/#raguides","text":"","title":"RAGuides"},{"location":"sort/newtest-overview/#discord-server","text":"Policies Channel Outline Roles Bots RABot Help! Commands spam&eggs Help! Commands Carl-bot Help! Commands","title":"Discord Server"},{"location":"sort/other-home/","text":"Pages in this category are scrap from the RADocs wiki","title":"Other Home"},{"location":"sort/ra-in-review/","text":"Logging things to be mentioned in the next \"year in review\" article! 2021 \u00b6 January \u00b6 Added Intellivision support (credits? Jamiras?). RAPatches repository - televandalist April \u00b6 Watara Supervision support QA Team created Any admin can deploy documentation website May \u00b6 Updated Code of Conduct Server comments logging changes in the Leaderboards - Searo Previous Years \u00b6 2020: https://retroachievements.org/viewtopic.php?t=12239 2019: https://retroachievements.org/viewtopic.php?t=9929 2018: https://retroachievements.org/viewtopic.php?t=8060 and https://retroachievements.org/viewtopic.php?t=8099 2017: https://retroachievements.org/viewtopic.php?t=6081","title":"RA In Review"},{"location":"sort/ra-in-review/#2021","text":"","title":"2021"},{"location":"sort/ra-in-review/#january","text":"Added Intellivision support (credits? Jamiras?). RAPatches repository - televandalist","title":"January"},{"location":"sort/ra-in-review/#april","text":"Watara Supervision support QA Team created Any admin can deploy documentation website","title":"April"},{"location":"sort/ra-in-review/#may","text":"Updated Code of Conduct Server comments logging changes in the Leaderboards - Searo","title":"May"},{"location":"sort/ra-in-review/#previous-years","text":"2020: https://retroachievements.org/viewtopic.php?t=12239 2019: https://retroachievements.org/viewtopic.php?t=9929 2018: https://retroachievements.org/viewtopic.php?t=8060 and https://retroachievements.org/viewtopic.php?t=8099 2017: https://retroachievements.org/viewtopic.php?t=6081","title":"Previous Years"},{"location":"sort/ra-trackers/","text":"Achievement Trackers \u00b6 Retro Achievement Tracker \u00b6 Developer: RetroS3xual \ud83d\udce5 Download \ud83c\udfa5 Tutorial Custom Layout: YES Game Information: YES User Information: YES Maintained: YES Retreon \u00b6 Developer: glacia \ud83d\udce5 Download Custom Layout: YES Game Information: YES User Information: NO Maintained: NO Missing Tracker \u00b6 If you have made or use a tracker which is not listed here you can contact the moderation team on the RetroAchievements Discord Server or send a private message to RAdmin including the name of the tracker and the creator of it!","title":"RA-Trackers"},{"location":"sort/ra-trackers/#achievement-trackers","text":"","title":"Achievement Trackers"},{"location":"sort/ra-trackers/#retro-achievement-tracker","text":"Developer: RetroS3xual \ud83d\udce5 Download \ud83c\udfa5 Tutorial Custom Layout: YES Game Information: YES User Information: YES Maintained: YES","title":"Retro Achievement Tracker"},{"location":"sort/ra-trackers/#retreon","text":"Developer: glacia \ud83d\udce5 Download Custom Layout: YES Game Information: YES User Information: NO Maintained: NO","title":"Retreon"},{"location":"sort/ra-trackers/#missing-tracker","text":"If you have made or use a tracker which is not listed here you can contact the moderation team on the RetroAchievements Discord Server or send a private message to RAdmin including the name of the tracker and the creator of it!","title":"Missing Tracker"},{"location":"sort/regional-compatibility/","text":"Adding Regional Compatibility \u00b6 If you would like to add support for another region (e.g. adding support for a European ROM when the set was made with the USA ROM) to a set, please note the following: * For the majority of consoles, PAL-region games run at 50hz whereas NTSC runs at 60hz. Without a 60Hz patch, some achievements could be easier to obtain due to the decreased frame-rate. This is especially important for achievements that use frames-as-time in their logic and for leaderboards in general. * Some regions have different cheats. There are many cases where cheat codes were altered or removed upon localization. These should be accounted for! * If there are enough differences between versions, an entirely separate set might be the best option. For more information on this, please see localization differences .","title":"Regional Compatibility"},{"location":"sort/regional-compatibility/#adding-regional-compatibility","text":"If you would like to add support for another region (e.g. adding support for a European ROM when the set was made with the USA ROM) to a set, please note the following: * For the majority of consoles, PAL-region games run at 50hz whereas NTSC runs at 60hz. Without a 60Hz patch, some achievements could be easier to obtain due to the decreased frame-rate. This is especially important for achievements that use frames-as-time in their logic and for leaderboards in general. * Some regions have different cheats. There are many cases where cheat codes were altered or removed upon localization. These should be accounted for! * If there are enough differences between versions, an entirely separate set might be the best option. For more information on this, please see localization differences .","title":"Adding Regional Compatibility"},{"location":"sort/reporting-a-broken-achievement/","text":"Reporting Broken Achievements \u00b6 To report a broken achievement, go to the achievement's page. Directly under the players won statistic, you'll see a link reading \"Report an issue for this achievement.\" Click that link to take you to the \"Report Broken Achievement\" form! Report Broken Achievement Form \u00b6 When reporting a broken achievement, please fill out all the fields to the best of your ability. The more information we have on the issue, the better our chances of figuring out what went wrong. Issue \u00b6 Select either \"Triggered at wrong time\" or \"Doesn't trigger.\" These are the only two valid reasons for submitting a ticket. If you have criticisms about an achievement, you can post those in the comments. Please Note: If you're submitting a manual unlock request for a network error, there's no need to file a ticket at all. Message RAdmin or post your request in the #Manual-Unlocks channel of our discord, specify that it was a network error and no actual problem with the achievement and we will take care of it for you. Triggered at wrong time: Select this option if an achievement popped at a time when it shouldn't have. Doesn't trigger: Select this option if you completed the requirements listed in the description but the achievement didn't trigger. Emulator \u00b6 Select the emulator used in this drop-down menu. If using RetroArch or RALibRetro please also include information about the core used while playing. Checksum: Select your game's checksum here. \"But I don know dis.\" It's very simple. The checksum is like your game's signature. It's how the emulator determines what game and what version of the game you're using. When you have it, you should find it on this drop-down menu. This can be extremely important when looking into a problem so please always try to include this information. To find your Checksum in RetroArch: Go to the Quick Menu, and scroll down to \"Information.\" Under Information, you should see a line reading \"RetroAchievements Hash.\" That long list of numbers and letters you see is your Checksum. To find your Checksum in RALibRetro or other RA standalone emulators: Under the \"RetroAchievements\" menu, the very last item on the list is \"Get ROM Checksum.\" Simply click that and it will spit it out at you clear as day. Description \u00b6 This is the most important field of all. Tell us what happened in as much detail as you possibly can. The less information provided here, the more difficult it is for us to figure out what went wrong. Even details that might seem insignificant to you could be very significant to us. The more you can tell us, the better our chances of being able to figure out why it happened. In other words, \"Dis no werk!\" isn't much help to us in figuring out what the problem was.","title":"Reporting Broken Shit"},{"location":"sort/reporting-a-broken-achievement/#reporting-broken-achievements","text":"To report a broken achievement, go to the achievement's page. Directly under the players won statistic, you'll see a link reading \"Report an issue for this achievement.\" Click that link to take you to the \"Report Broken Achievement\" form!","title":"Reporting Broken Achievements"},{"location":"sort/reporting-a-broken-achievement/#report-broken-achievement-form","text":"When reporting a broken achievement, please fill out all the fields to the best of your ability. The more information we have on the issue, the better our chances of figuring out what went wrong.","title":"Report Broken Achievement Form"},{"location":"sort/reporting-a-broken-achievement/#issue","text":"Select either \"Triggered at wrong time\" or \"Doesn't trigger.\" These are the only two valid reasons for submitting a ticket. If you have criticisms about an achievement, you can post those in the comments. Please Note: If you're submitting a manual unlock request for a network error, there's no need to file a ticket at all. Message RAdmin or post your request in the #Manual-Unlocks channel of our discord, specify that it was a network error and no actual problem with the achievement and we will take care of it for you. Triggered at wrong time: Select this option if an achievement popped at a time when it shouldn't have. Doesn't trigger: Select this option if you completed the requirements listed in the description but the achievement didn't trigger.","title":"Issue"},{"location":"sort/reporting-a-broken-achievement/#emulator","text":"Select the emulator used in this drop-down menu. If using RetroArch or RALibRetro please also include information about the core used while playing. Checksum: Select your game's checksum here. \"But I don know dis.\" It's very simple. The checksum is like your game's signature. It's how the emulator determines what game and what version of the game you're using. When you have it, you should find it on this drop-down menu. This can be extremely important when looking into a problem so please always try to include this information. To find your Checksum in RetroArch: Go to the Quick Menu, and scroll down to \"Information.\" Under Information, you should see a line reading \"RetroAchievements Hash.\" That long list of numbers and letters you see is your Checksum. To find your Checksum in RALibRetro or other RA standalone emulators: Under the \"RetroAchievements\" menu, the very last item on the list is \"Get ROM Checksum.\" Simply click that and it will spit it out at you clear as day.","title":"Emulator"},{"location":"sort/reporting-a-broken-achievement/#description","text":"This is the most important field of all. Tell us what happened in as much detail as you possibly can. The less information provided here, the more difficult it is for us to figure out what went wrong. Even details that might seem insignificant to you could be very significant to us. The more you can tell us, the better our chances of being able to figure out why it happened. In other words, \"Dis no werk!\" isn't much help to us in figuring out what the problem was.","title":"Description"},{"location":"sort/scrape/","text":"This is a fast and easy method to scrape all Achievements, Descriptions or other useful information from RetroAchievements into a CSV format which can be posted in Forums and Discord for sharing Rescore and Revision Update plans. Download the Chrome Extension from https://simplescraper.io Browse to the Game Page you want to Scrape the Achievement List from (example: https://retroachievements.org/game/11256 ) Click on ' Launch Simple Scraper ' and choose ' Scrape this website ' Choose ' Add a property ' Now you can select what information you want to scrape, click on the Achievements The number of selected items must match the number of Achievements on the Site (!) you can change the scraping content manually in the appearing box below 'propertyName1'. For Rescoring Updates - scrape Achievements only \u00b6 div.achievemententry div.achievementdata a .achievementdata a For Revision Updates - scrape Achievements and Descriptions \u00b6 div.achievemententry div.achievementdata .achievementdata Click on the checkmark to confirm the selection and choose 'View Results' A new tab should open, now click on CSV to download the Achievement List Upload the downloaded CSV file to Google Drive and open it with Google Sheets (!) Scraped Achievements with Descriptions can be seperated by splitting the columns with '\\n'. Upload and split into columns in Google Sheets \u00b6 In Google Sheets, select A (must be marked) and choose ' Data ' then ' Split text to columns ', ' custom ' and insert \\n . Please check Achievement-Set-Revisions for more information regards Recore and Revision Updates.","title":"Scraping Lists"},{"location":"sort/scrape/#for-rescoring-updates-scrape-achievements-only","text":"div.achievemententry div.achievementdata a .achievementdata a","title":"For Rescoring Updates - scrape Achievements only"},{"location":"sort/scrape/#for-revision-updates-scrape-achievements-and-descriptions","text":"div.achievemententry div.achievementdata .achievementdata Click on the checkmark to confirm the selection and choose 'View Results' A new tab should open, now click on CSV to download the Achievement List Upload the downloaded CSV file to Google Drive and open it with Google Sheets (!) Scraped Achievements with Descriptions can be seperated by splitting the columns with '\\n'.","title":"For Revision Updates - scrape Achievements and Descriptions"},{"location":"sort/scrape/#upload-and-split-into-columns-in-google-sheets","text":"In Google Sheets, select A (must be marked) and choose ' Data ' then ' Split text to columns ', ' custom ' and insert \\n . Please check Achievement-Set-Revisions for more information regards Recore and Revision Updates.","title":"Upload and split into columns in Google Sheets"},{"location":"sort/site-change-log/","text":"22-December-2017 \u00b6 Site update \u00b6 Untracked status has been added as a possible user status. Untracked players do not show up in the global ranking. Instead of banning players who are found to be cheating they can be given the status of untracked. Also players who don't want to show up in the global rankings can also request this status, given by admin! 16-December-2017 \u00b6 Emulators Update [v0.068] \u00b6 For RANes, RAGens, RAVBA, and RASnes9x General Changes \u00b6 Game Titles with special characters such as ~ or [ no long appear at the start of the entry database but at the end. Rich Presence: Parse Rich Presence has been changed into Rich Presence monitor. This will actively display rich presence The Rich Presence Monitor also supports much more unicode Rich presence is displayed every 2 minutes instead of every 10. Linking: Only Developers and Admin are allowed to link ROMs to game entries. This is to prevent unsupported ROM versions which will cause achievement errors and to prevent some forms of cheating. Developer Changes \u00b6 Achievement Sets Window: \u00b6 Button layout reworked and compressed Activate All has been added to Local Achievements Buttons removed: Vote Up, Vote Down, Goto Web page, Close Renames: \u00b6 Fetch Latest \u21d2 Refresh from Server Reset Achieved Status, Activate \u21d2 Activate Selected Save Local \u21d2 Save All Local Achievement Processing Active? \u21d2 Processing Active Achievements found \u21d2 Num Achievements Found In local Commit Selected \u21d2 Promote to Unofficial Bugs Fixes: \u00b6 Changing the points value of an achievement even after it's been updated the points value in the Achievements window does not update. Activating an achievement and then making changes to it changes it's active status display from Yes to No even though it is still active. After committing a change and then fetching latest or reloading the rom the changes made are no longer visible. Other \"under the hood\" bug fixes. 1-December-2017 \u00b6 Emulators Update [v0.067] \u00b6 For RANes, RAGens, RAVBA, and RASnes9x Developer Changes \u00b6 Memory Inspector: You can now scroll with your mouse-wheel in the memory viewport. The memory viewer cursor no longer defaults to line 5, instead you are allowed to move it within a current viewport freely. When you move past the top or bottom the view will scroll up or down and keep the cursor position on the top most or bottom most line. In the memory viewport hitting page down will go down 1 page depending on how many addresses you have in view. Previously it would only go down 5 lines. In the memory viewport while selecting an address from the \"Watching\" it will put the selected address in focus on the center of the viewport relative to the length of the viewport. While putting values into the Mem Viewport you can wrap around the right side instead of getting stopped at 0xf of that line. This allows for quicker corrupting, which can sometimes be useful for finding addresses. When deleting a note in the Mem Viewport the selected stays at current address instead of going to 0x0. Notes window has been extended to 5 from 3 lines. Notes window now has word wrap and accept line returns greater than 3. View Notes Button has been added below Delete. Memory Search Range has been added allowing for Custom Range System RAM and Game RAM. Searching for hex values in Given Value is allowed with the prefix 0x. Achievement Editor: \"Clone selected\" achievement has been replaced with \"Copy\" and \"Paste\" buttons. You are now able to copy and paste multiple selected requirements within an achievement, to an alt group or to another achievement! \"Delete Selected\" will now delete ALL selected achievements instead of just one at a time.(edited) Rich Presence: No longer displays \"Unknown\". It just leaves a blank non-space. Devs this means you don't need to sweat as much about about those knowing every value state of an address in RPS. If someone is playing a set without achievement or a Rich Presence script it the Rich Presence will say \"Playing [game name]\". 7-November-2017 \u00b6 Site Update \u00b6 Time stamps on user, game pages and in many places now show the year. Emulators Update [v0.066] \u00b6 For RANes, RAGens, RAVBA, and RASnes9x General Changes \u00b6 More anti-cheat measures were included. Soft IPS patching is removed in the listed emulators. Caused some incompatibilities. Issue with leaderboards popping twice is resolved. Developer Changes \u00b6 Achievement Editor window is slightly extended. Scroll bar retains position when editing longer achievements. Issue with uploading broken badges is fixed. 30-October-2017 \u00b6 Site Update \u00b6 Password Reset is fixed and working. Now if you forget your password you can have a password reset link emailed to you: http://retroachievements.org/resetPassword.php 6-October-2017 \u00b6 Site Update \u00b6 Started the log Rich Presence has been fixed: Now online shows all online players. Developers are able to create, edit and save rich presence. Number of currently online is no long visible by online players. Active players shows a time stamp of last updated.","title":"Site Change Log"},{"location":"sort/site-change-log/#22-december-2017","text":"","title":"22-December-2017"},{"location":"sort/site-change-log/#site-update","text":"Untracked status has been added as a possible user status. Untracked players do not show up in the global ranking. Instead of banning players who are found to be cheating they can be given the status of untracked. Also players who don't want to show up in the global rankings can also request this status, given by admin!","title":"Site update"},{"location":"sort/site-change-log/#16-december-2017","text":"","title":"16-December-2017"},{"location":"sort/site-change-log/#emulators-update-v0068","text":"For RANes, RAGens, RAVBA, and RASnes9x","title":"Emulators Update [v0.068]"},{"location":"sort/site-change-log/#general-changes","text":"Game Titles with special characters such as ~ or [ no long appear at the start of the entry database but at the end. Rich Presence: Parse Rich Presence has been changed into Rich Presence monitor. This will actively display rich presence The Rich Presence Monitor also supports much more unicode Rich presence is displayed every 2 minutes instead of every 10. Linking: Only Developers and Admin are allowed to link ROMs to game entries. This is to prevent unsupported ROM versions which will cause achievement errors and to prevent some forms of cheating.","title":"General Changes"},{"location":"sort/site-change-log/#developer-changes","text":"","title":"Developer Changes"},{"location":"sort/site-change-log/#achievement-sets-window","text":"Button layout reworked and compressed Activate All has been added to Local Achievements Buttons removed: Vote Up, Vote Down, Goto Web page, Close","title":"Achievement Sets Window:"},{"location":"sort/site-change-log/#renames","text":"Fetch Latest \u21d2 Refresh from Server Reset Achieved Status, Activate \u21d2 Activate Selected Save Local \u21d2 Save All Local Achievement Processing Active? \u21d2 Processing Active Achievements found \u21d2 Num Achievements Found In local Commit Selected \u21d2 Promote to Unofficial","title":"Renames:"},{"location":"sort/site-change-log/#bugs-fixes","text":"Changing the points value of an achievement even after it's been updated the points value in the Achievements window does not update. Activating an achievement and then making changes to it changes it's active status display from Yes to No even though it is still active. After committing a change and then fetching latest or reloading the rom the changes made are no longer visible. Other \"under the hood\" bug fixes.","title":"Bugs Fixes:"},{"location":"sort/site-change-log/#1-december-2017","text":"","title":"1-December-2017"},{"location":"sort/site-change-log/#emulators-update-v0067","text":"For RANes, RAGens, RAVBA, and RASnes9x","title":"Emulators Update [v0.067]"},{"location":"sort/site-change-log/#developer-changes_1","text":"Memory Inspector: You can now scroll with your mouse-wheel in the memory viewport. The memory viewer cursor no longer defaults to line 5, instead you are allowed to move it within a current viewport freely. When you move past the top or bottom the view will scroll up or down and keep the cursor position on the top most or bottom most line. In the memory viewport hitting page down will go down 1 page depending on how many addresses you have in view. Previously it would only go down 5 lines. In the memory viewport while selecting an address from the \"Watching\" it will put the selected address in focus on the center of the viewport relative to the length of the viewport. While putting values into the Mem Viewport you can wrap around the right side instead of getting stopped at 0xf of that line. This allows for quicker corrupting, which can sometimes be useful for finding addresses. When deleting a note in the Mem Viewport the selected stays at current address instead of going to 0x0. Notes window has been extended to 5 from 3 lines. Notes window now has word wrap and accept line returns greater than 3. View Notes Button has been added below Delete. Memory Search Range has been added allowing for Custom Range System RAM and Game RAM. Searching for hex values in Given Value is allowed with the prefix 0x. Achievement Editor: \"Clone selected\" achievement has been replaced with \"Copy\" and \"Paste\" buttons. You are now able to copy and paste multiple selected requirements within an achievement, to an alt group or to another achievement! \"Delete Selected\" will now delete ALL selected achievements instead of just one at a time.(edited) Rich Presence: No longer displays \"Unknown\". It just leaves a blank non-space. Devs this means you don't need to sweat as much about about those knowing every value state of an address in RPS. If someone is playing a set without achievement or a Rich Presence script it the Rich Presence will say \"Playing [game name]\".","title":"Developer Changes"},{"location":"sort/site-change-log/#7-november-2017","text":"","title":"7-November-2017"},{"location":"sort/site-change-log/#site-update_1","text":"Time stamps on user, game pages and in many places now show the year.","title":"Site Update"},{"location":"sort/site-change-log/#emulators-update-v0066","text":"For RANes, RAGens, RAVBA, and RASnes9x","title":"Emulators Update [v0.066]"},{"location":"sort/site-change-log/#general-changes_1","text":"More anti-cheat measures were included. Soft IPS patching is removed in the listed emulators. Caused some incompatibilities. Issue with leaderboards popping twice is resolved.","title":"General Changes"},{"location":"sort/site-change-log/#developer-changes_2","text":"Achievement Editor window is slightly extended. Scroll bar retains position when editing longer achievements. Issue with uploading broken badges is fixed.","title":"Developer Changes"},{"location":"sort/site-change-log/#30-october-2017","text":"","title":"30-October-2017"},{"location":"sort/site-change-log/#site-update_2","text":"Password Reset is fixed and working. Now if you forget your password you can have a password reset link emailed to you: http://retroachievements.org/resetPassword.php","title":"Site Update"},{"location":"sort/site-change-log/#6-october-2017","text":"","title":"6-October-2017"},{"location":"sort/site-change-log/#site-update_3","text":"Started the log Rich Presence has been fixed: Now online shows all online players. Developers are able to create, edit and save rich presence. Number of currently online is no long visible by online players. Active players shows a time stamp of last updated.","title":"Site Update"},{"location":"sort/systems-memory-mapping/","text":"Work in Progress \u00b6 This page details how the memory of each supported system is mapped! Memory banks as registered in the RA emulators are defined here . NES \u00b6 Reference: https://wiki.nesdev.com/w/index.php/CPU_memory_map Bank Offset Length Description 0 0x0000 0x0800 2KB internal RAM 1 0x0800 0x0800 Mirror of 0000- 0000- 07FF 2 0x1000 0x0800 Mirror of 0000- 0000- 07FF 3 0x1800 0x0800 Mirror of 0000- 0000- 07FF 4 0x2000 0x0008 PPU registers 5 0x2008 0x1FF8 Mirrors of 2000- 2000- 2008 6 0x4000 0x0018 APU and I/O registers 7 0x4018 0x0008 APU and I/O test registers 8 0x4020 0x1FE0 Cartridge data 9 0x6000 0x2000 Cartridge RAM 10 0x8000 0x8000 Cartridge ROM SNES \u00b6 https://en.wikibooks.org/wiki/Super_NES_Programming/SNES_memory_map N64 \u00b6 https://raw.githubusercontent.com/mikeryan/n64dev/master/docs/n64ops/n64ops%23h.txt GB \u00b6 Reference: http://gameboy.mongenel.com/dmg The memory map reflects the CPU memory space. GBC \u00b6 The memory map is identical to the Game Boy's, with the exception of banked work RAM. The first bank is mapped to its usual location in CPU space, while banks 2-7 are appended to the end of the memory map, in the 0x10000-0x15FFF region. GBA \u00b6 https://www.coranac.com/tonc/text/hardware.htm#sec-memory VirtualBoy \u00b6 Master System \u00b6 Reference: http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html TODO : find a more reliable source. Offset Length Description 0x0C000 0x02000 RAM MegaDrive (Genesis) \u00b6 https://en.wikibooks.org/wiki/Genesis_Programming https://wiki.megadrive.org/index.php?title=Main_68k_memory_map see also Jamiras comment here: https://github.com/RetroAchievements/RALibretro/issues/47#issuecomment-455374796 GameGear \u00b6 Atari 2600 \u00b6 Reference: http://www.randomterrain.com/atari-2600-memories-tutorial-andrew-davie-05.html#summary Offset Length Description 0x080 0x080 RAM Atari 7800 \u00b6 Atari Lynx \u00b6 ColecoVision \u00b6 NeoGeo Pocket \u00b6 PCEngine (TurboGrafx16) \u00b6 PCEngine CD \u00b6 Arcade \u00b6 PC-8001 / PC-8801 \u00b6 Reference: http://www.maroon.dti.ne.jp/youkan/pc88/memmap.html The memory map is based on the PC-8801 layout, but excludes graphics VRAM and extended RAM. PC-8801 \u00b6 Bank Offset Length Description 0 0x00000 0x10000 Main RAM 1 0x10000 0x1000 Text VRAM Text VRAM is also known as high-speed RAM, and is used as a main RAM area in some titles. PC-8001 \u00b6 Reference: http://www.cyross.com/pc8801wiki The entire memory space is mapped in the PC-8801 main RAM bank, but only RAM is exposed, so most of the mapped space will remain uninitialized. Offset Length Description 0x08000 0x08000 RAM Apple II \u00b6 Reference: http://apple2.guidero.us/doku.php/mg_notes/general/mem_map The memory map consists of both main and auxiliary RAM banks. Rather than mapping the CPU-accessible memory space, which can flicker at high frequencies, the RAM banks are mapped consecutively. Auxiliary RAM is only available on systems with 128KB of RAM (Apple IIe and up), so it will remain uninitialized on 64KB systems or when running titles that are not designed to make use of auxiliary RAM. Bank Offset Length Description 0 0x00000 0x10000 Main RAM 1 0x10000 0x10000 Auxiliary RAM","title":"System Memory Mapping"},{"location":"sort/systems-memory-mapping/#work-in-progress","text":"This page details how the memory of each supported system is mapped! Memory banks as registered in the RA emulators are defined here .","title":"Work in Progress"},{"location":"sort/systems-memory-mapping/#nes","text":"Reference: https://wiki.nesdev.com/w/index.php/CPU_memory_map Bank Offset Length Description 0 0x0000 0x0800 2KB internal RAM 1 0x0800 0x0800 Mirror of 0000- 0000- 07FF 2 0x1000 0x0800 Mirror of 0000- 0000- 07FF 3 0x1800 0x0800 Mirror of 0000- 0000- 07FF 4 0x2000 0x0008 PPU registers 5 0x2008 0x1FF8 Mirrors of 2000- 2000- 2008 6 0x4000 0x0018 APU and I/O registers 7 0x4018 0x0008 APU and I/O test registers 8 0x4020 0x1FE0 Cartridge data 9 0x6000 0x2000 Cartridge RAM 10 0x8000 0x8000 Cartridge ROM","title":"NES"},{"location":"sort/systems-memory-mapping/#snes","text":"https://en.wikibooks.org/wiki/Super_NES_Programming/SNES_memory_map","title":"SNES"},{"location":"sort/systems-memory-mapping/#n64","text":"https://raw.githubusercontent.com/mikeryan/n64dev/master/docs/n64ops/n64ops%23h.txt","title":"N64"},{"location":"sort/systems-memory-mapping/#gb","text":"Reference: http://gameboy.mongenel.com/dmg The memory map reflects the CPU memory space.","title":"GB"},{"location":"sort/systems-memory-mapping/#gbc","text":"The memory map is identical to the Game Boy's, with the exception of banked work RAM. The first bank is mapped to its usual location in CPU space, while banks 2-7 are appended to the end of the memory map, in the 0x10000-0x15FFF region.","title":"GBC"},{"location":"sort/systems-memory-mapping/#gba","text":"https://www.coranac.com/tonc/text/hardware.htm#sec-memory","title":"GBA"},{"location":"sort/systems-memory-mapping/#virtualboy","text":"","title":"VirtualBoy"},{"location":"sort/systems-memory-mapping/#master-system","text":"Reference: http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html TODO : find a more reliable source. Offset Length Description 0x0C000 0x02000 RAM","title":"Master System"},{"location":"sort/systems-memory-mapping/#megadrive-genesis","text":"https://en.wikibooks.org/wiki/Genesis_Programming https://wiki.megadrive.org/index.php?title=Main_68k_memory_map see also Jamiras comment here: https://github.com/RetroAchievements/RALibretro/issues/47#issuecomment-455374796","title":"MegaDrive (Genesis)"},{"location":"sort/systems-memory-mapping/#gamegear","text":"","title":"GameGear"},{"location":"sort/systems-memory-mapping/#atari-2600","text":"Reference: http://www.randomterrain.com/atari-2600-memories-tutorial-andrew-davie-05.html#summary Offset Length Description 0x080 0x080 RAM","title":"Atari 2600"},{"location":"sort/systems-memory-mapping/#atari-7800","text":"","title":"Atari 7800"},{"location":"sort/systems-memory-mapping/#atari-lynx","text":"","title":"Atari Lynx"},{"location":"sort/systems-memory-mapping/#colecovision","text":"","title":"ColecoVision"},{"location":"sort/systems-memory-mapping/#neogeo-pocket","text":"","title":"NeoGeo Pocket"},{"location":"sort/systems-memory-mapping/#pcengine-turbografx16","text":"","title":"PCEngine (TurboGrafx16)"},{"location":"sort/systems-memory-mapping/#pcengine-cd","text":"","title":"PCEngine CD"},{"location":"sort/systems-memory-mapping/#arcade","text":"","title":"Arcade"},{"location":"sort/systems-memory-mapping/#pc-8001-pc-8801","text":"Reference: http://www.maroon.dti.ne.jp/youkan/pc88/memmap.html The memory map is based on the PC-8801 layout, but excludes graphics VRAM and extended RAM.","title":"PC-8001 / PC-8801"},{"location":"sort/systems-memory-mapping/#pc-8801","text":"Bank Offset Length Description 0 0x00000 0x10000 Main RAM 1 0x10000 0x1000 Text VRAM Text VRAM is also known as high-speed RAM, and is used as a main RAM area in some titles.","title":"PC-8801"},{"location":"sort/systems-memory-mapping/#pc-8001","text":"Reference: http://www.cyross.com/pc8801wiki The entire memory space is mapped in the PC-8801 main RAM bank, but only RAM is exposed, so most of the mapped space will remain uninitialized. Offset Length Description 0x08000 0x08000 RAM","title":"PC-8001"},{"location":"sort/systems-memory-mapping/#apple-ii","text":"Reference: http://apple2.guidero.us/doku.php/mg_notes/general/mem_map The memory map consists of both main and auxiliary RAM banks. Rather than mapping the CPU-accessible memory space, which can flicker at high frequencies, the RAM banks are mapped consecutively. Auxiliary RAM is only available on systems with 128KB of RAM (Apple IIe and up), so it will remain uninitialized on 64KB systems or when running titles that are not designed to make use of auxiliary RAM. Bank Offset Length Description 0 0x00000 0x10000 Main RAM 1 0x10000 0x10000 Auxiliary RAM","title":"Apple II"},{"location":"sort/testing-for-demo-mode/","text":"Link to original post on RetroAchievements One of the more annoying things that can happen is if you leave your game running, and the game awards you achievements for reaching levels you haven't reached yet. This is fairly common, as many games of the 16-bit era still had 'attract modes', and is usually a pretty easy thing to fix with the achievements! We are looking in the game to find something that is set when the game is in a demo mode. Either a small piece of memory set to 0 , or 1 , or 0xff . It could be anything really. To start it will help to play through the game a little, and set a few save states throughout different levels of the game. And then to begin finding this 'is demo mode active' memory, we should first reset the game and wait for the demo to play. During when the game plays the first demo, use the Memory Inspector to start a new 8-bit test, (click New 8-bit test ), and set the filter value to be equal to the last known value (under Filter values: , set to == ), and press Filter! a few times. With each press, you should see the number of matches slowly become fewer, but not by much. Next wait til the game starts playing another demo but on a different level. When the next demo is playing, press Filter a few more times, and you'll see the candidates get smaller again. Continue to do this until you've eliminated as many candidates as you can. IMPORTANT : Don't forget, you only want to press filter when the game is DEFINITELY in the demo. If you press when it's on the title screen, or playing a movie, or even when fading in or out, the value might not be set. There's no real way to know; we are assuming that it will be set (or unset) when the demo itself is playing, which itself is only a fairly likely assumption. After viewing some or all of the demos, you will probably still have TONS of potential memory values. Here's the juicy part, that should eliminate a ton of candidates at once. Load up one of your save states where you are definitely in-game, playing and NOT in a demo. Now we will be filtering for \"I am NOT in a demo\". Set your filter value to not-equal != , and hit Filter ONLY ONCE . At this point, the set of candidates now represent memory values that are \"values different to when a demo was playing\". Switch back to equal (=), and hit Filter a few more times (because we are saying 'whatever values we have, they are the same as the ones just now. The 'is demo mode' value will still be equivalent to whatever it was just now). It might help to move the character around the screen, or perform a few actions, between hitting the Filter button. Next, load up your next save state, and perform the same routine. Your number of candidates should reduce further, until you have less than 100 remaining. By now if you should have only a few candidates remaining. Likely values for the candidate will be 0, 1 or 0xff. If it is something else I'd recommend ignoring it, as it's not likely to be what we're looking for (but still, not impossible). For example, in Sonic the Hedgehog (Mega Drive) , the address is 0xfff0, and the value is 01 when a demo is active. Our next step will be to verify our find. Pick one of these values and restart the game, keeping an eye on this value as the game plays the demos. Then load through each of your save states and see if it changes as you expect it to. Perhaps start a brand new game and see if it matches up correctly to the value it is when the other save states are active. Make a note of the value it is when the game is active. Let's say we are pretty confident we've found the memory used to say 'game is in demo mode'. We'll save this to CodeNotes by adding a description in the Memory Inspector, then clicking Add Note . Next we will use the Achievements dialog to find all the achievements that could unlock during the demos (probably all the level-based achievements), and add a new requirement to these achievements. Add it alongside the existing requirements. For this new requirement, set the address to the 'demo mode active' memory we found, set the mem size to 8-bit, and set the value we require to be equal to the value when the game is active. That's it! Now the achievement will only trigger if the player is on a certain level, AND that the game is not in a demo mode! Before we commit this back to the server, it's a good idea to test out this to see if it worked. Press ESC on the game to bring up the overlay and pause the game. Then click 'Reset Achieved Status' on this achievement in the 'Achievements' dialog, and confirm the prompt. Finally, click back in the game and press TAB to reset the game, and ESC to dismiss the overlay. Press F4 a few times to increase the speed of the game, and watch to ensure the achievement doesn't trigger. If it still triggers, it sounds like something went wrong. Try and check the requirements are entered correctly ('is demo mode' comparison probably needs to be '8-bit'), check that you reset the right achievement, and finally watch the value of the 'is demo mode' flag in the memory inspector. If it worked correctly, select the achievement in the Achievements dialog, hit 'Commit Selected', confirm the dialog and you're done! There are many alternative methods for getting the 'is demo mode' flag, but unfortunately none of them are guarantees. All I can do is suggest methods I've found in existing games. To start with, I'll suggest Castlevania: Bloodlines (Mega Drive) , and the achievement Watery Grave (5) . There is a mild cheat-protection in these requirements, but I'll just focus on the 'demo mode' part. Castlevania treats every screen as a type of 'screen mode'. To test for this, I started the game, and at the sega logo, I started an 8-bit test. I then assumed that the 'screen mode' would have changed by the time it was playing the 'intro movie', so I did a 'not equal', then an 'equal' filter to suggest that I only want candidates that have changed. I did this again at the 'press start' screen, then at the options screen, then the password screen, character select screen, and finally ingame. By this point I had 10 matches. I mentally eliminated anything where the surrounding values were very random - this data is likely to be graphic or sound data, and won't be much use for us. After having repeated the test and watching each of these 10 values, I also eliminated a few more, as some of these appeared to change while I was still on the same screen. This left me with three values, 0x9002 , 0x9004 and 0x905e . After going into game and playing for a few seconds, I could tell that 0x905e was changing while I was still ingame. I opted to use 0x9002 , as it was located fairly close to clean boundary ( 0x9000 ). Also values like this are likely to be in the second half of RAM (between 0x8000 and 0xffff ) as they are easier for developers to address.","title":"Testing for Demo Mode"},{"location":"sort/useful-links/","text":"https://gamefaqs.gamespot.com/ \u00b6 Great place to find game guides, finding almost all you could want to know about game content, find cheat codes, for development utility and also for making proper protections against the codes. https://www.vgmaps.com/ \u00b6 Thousands of maps/screenshots of your favourite video games! https://tcrf.net/ \u00b6 It is a site dedicated to unearthing and researching unused and cut content from video games. From debug menus, to unused music, graphics, enemies, or levels, many games have content never meant to be seen by anybody but the developers \u2014 or even meant for everybody, but cut due to time/budget constraints. Cumulative Probability Calculator \u00b6 When working with achievements with an RNG factor you will often want to know the probability of success for players given a number of attempts. (see unwelcome concepts, achievements with low odds ). Use it to calculate P(X>=1), assuming the player needs to succeed only once across several attempts, to estimate how many attempts an might require for less lucky players. https://www.zapstudio.net/framecalc/ \u00b6 Simple utility to calculate frames out of time given and the other way around. https://www.romhacking.net \u00b6 The biggest repository of patches to hack ROMs. http://datacrystal.romhacking.net/wiki/Hashes \u00b6 Explains what hashes are. If you don't know what they are you should probably read this. https://emn178.github.io/online-tools/crc32_checksum.html \u00b6 Drag and drop checksum checker utility. You can also get the checksum from the rom you have loaded from the retroachievements menu in the emulators. http://www.marcrobledo.com/RomPatcher.js \u00b6 An online ROM patcher utility. http://jsonviewer.stack.hu \u00b6 Excellent for viewing raw achievements http://gamehacking.org \u00b6 Provides many Pro Action, Game Genie, and Game Shark codes which can be converted to RAW addresses on the site.","title":"Useful Links"},{"location":"sort/useful-links/#httpsgamefaqsgamespotcom","text":"Great place to find game guides, finding almost all you could want to know about game content, find cheat codes, for development utility and also for making proper protections against the codes.","title":"https://gamefaqs.gamespot.com/"},{"location":"sort/useful-links/#httpswwwvgmapscom","text":"Thousands of maps/screenshots of your favourite video games!","title":"https://www.vgmaps.com/"},{"location":"sort/useful-links/#httpstcrfnet","text":"It is a site dedicated to unearthing and researching unused and cut content from video games. From debug menus, to unused music, graphics, enemies, or levels, many games have content never meant to be seen by anybody but the developers \u2014 or even meant for everybody, but cut due to time/budget constraints.","title":"https://tcrf.net/"},{"location":"sort/useful-links/#cumulative-probability-calculator","text":"When working with achievements with an RNG factor you will often want to know the probability of success for players given a number of attempts. (see unwelcome concepts, achievements with low odds ). Use it to calculate P(X>=1), assuming the player needs to succeed only once across several attempts, to estimate how many attempts an might require for less lucky players.","title":"Cumulative Probability Calculator"},{"location":"sort/useful-links/#httpswwwzapstudionetframecalc","text":"Simple utility to calculate frames out of time given and the other way around.","title":"https://www.zapstudio.net/framecalc/"},{"location":"sort/useful-links/#httpswwwromhackingnet","text":"The biggest repository of patches to hack ROMs.","title":"https://www.romhacking.net"},{"location":"sort/useful-links/#httpdatacrystalromhackingnetwikihashes","text":"Explains what hashes are. If you don't know what they are you should probably read this.","title":"http://datacrystal.romhacking.net/wiki/Hashes"},{"location":"sort/useful-links/#httpsemn178githubioonline-toolscrc32_checksumhtml","text":"Drag and drop checksum checker utility. You can also get the checksum from the rom you have loaded from the retroachievements menu in the emulators.","title":"https://emn178.github.io/online-tools/crc32_checksum.html"},{"location":"sort/useful-links/#httpwwwmarcrobledocomrompatcherjs","text":"An online ROM patcher utility.","title":"http://www.marcrobledo.com/RomPatcher.js"},{"location":"sort/useful-links/#httpjsonviewerstackhu","text":"Excellent for viewing raw achievements","title":"http://jsonviewer.stack.hu"},{"location":"sort/useful-links/#httpgamehackingorg","text":"Provides many Pro Action, Game Genie, and Game Shark codes which can be converted to RAW addresses on the site.","title":"http://gamehacking.org"},{"location":"sort/using-a-conditional-reset/","text":"Real Example document structure: Brief explanation... Addresses 0x123 : Note about the address 0x456 : another note Conditions Explaining each requirement in the achievement's logic. Explanation of requirement 2. Explanation of requirement 3...","title":"Conditional Resets"},{"location":"support/a-message-for-achievement-hunters-and-completionists-about-revisions/","text":"Let's start jumping directly to the conclusion: If you mastered a game and then it received a revision, don't feel frustrated! Keep in mind that changes come for a better quality. Now let's elaborate why we are saying that! RetroAchievements is a \"young\" project and is constantly evolving. It was launched in the late 2012, and in the early days the emulators and the site (database stuff, PHP, HTML, CSS, JavaScript, etc.) were developed by a single person: Scott . Therefore the evolution occurred slowly. Another thing that was occurring very slowly in the early days was the diffusion of knowledge about achievement creation. Specially about good practices when creating achievements. There wasn't documentation at that time (RADocs only started in November/2017). People were learning to create achievements by sharing knowledge on forum threads and/or by personal messages. In the early days the community didn't have a very clear a concept of what a good achievement design is. And it resulted in many poorly designed sets compared to our current standards (e.g. sets with only progress-based achievements). We also didn't have much experience of how achievements could be protected against in-game cheats or battery save abusing. That's why from time to time some achievement sets receive revisions. We make set revisions with quality in mind, and to show actual respect for the game . When a revision is going to happen, we try to involve the community by discussing on our forums (usually the official game's topic) and/or on our discord server. We are aware that this is insufficient to reach all interested people, but it is the way we are currently using. We are working on new ways to discuss revisions with the community by implementing some new social features on the RA website, but while those features are not implemented, we'll keep using the forums and discord. If you would like to propose new methods for discussing revisions, we are open to suggestions.","title":"A Message for Achievement Hunters and Completionists About Revisions"},{"location":"support/editingdocs/","text":"How 2 Docs \u00b6 I'm feeling good about this.","title":"Editing Docs"},{"location":"support/editingdocs/#how-2-docs","text":"I'm feeling good about this.","title":"How 2 Docs"},{"location":"support/faq/","text":"Frequently Asked Questions \u00b6 What is RetroAchievements.org? What is HARDCORE mode? Which emulator do I need to use? Official RetroAchievements.org emulators What is the Achievement Overlay and how do I access it? RetroArch emulators Which RetroArch core should I use? How can I see the badge when I earn an achievement on RetroArch? What are the white points? Why can't I see my new profile picture? My welcome email has gone missing! Where can I find ROMs? Why is my game not loading up achievements? Why do I get a message that some achievements are unsupported? RetroArch/RALibretro doesn't launch my arcade game. What should I do? Will RetroAchievements support this or that console? How do I request an achievement set? What do I do when the achievement isn't working right? How do I report a broken achievement? What details I have to add to a broken achievement report? What details should I add to a broken achievement report? What is an RA hash? How do I check the RA hash of the game I'm playing? How can I get credit for an achievement I earned but wasn't awarded? In short how to request a manual unlock In detail how to request a manual unlock What if I got an achievement I didn't earn? How do I reset achievements? Am I the only one with an issue? What's considered cheating (for HARDCORE)? What if I find evidence of a cheater? I want to make achievements! How do I reset my password? (If I don't remember my password) Will I have any privilege if I become a patron? Is RetroAchievements profiting off of emulation? I was using the site and it crashed (403 error), what happened? What is RetroAchievements.org? \u00b6 RetroAchievements.org is a zero profit community who collaborate and compete to earn custom-made achievements in classic games through emulation. Achievements are made by and for the community. We provide various custom-built emulators for you to use which will detect when you have completed various challenges. Once logged in, the emulators will post the achievements you've completed back to the site, so you can check and compare your progress to your friends. Here's an example of RAGens, playing Streets of Rage 2. You will see two leaderboard attempt counters (bottom-right), one achievement popping and finally the Achievement Overlay (press ESC ): What is HARDCORE mode? \u00b6 HARDCORE mode is an additional feature to separate out the good gamers from the great gamers: HARDCORE mode disables all savestate ability in the emulator: you would not be able to save and reload at any time. You would have to complete the game and get the achievements first time, just like it were on the original console. In reward for this, you will earn both the standard and the HARDCORE achievement, in effect earning double points! A regular game worth 400 points, is now worth 800 if you complete it fully on HARDCORE! For example: if you complete the game fully for 400 points, you then have the opportunity to earn another 400 on HARDCORE. Note : If you want to play with the HARDCORE mode disabled (also known as \"softcore\"), expect to have some issues. Read in this link Why you shouldn't use the load state feature . Which emulator do I need to use? \u00b6 The official RetroAchievements.org emulators are all Windows-based. For other operating systems you can use RetroArch. More information below: Official RetroAchievements.org emulators \u00b6 Please download the emulator of your choice from the download page , log in using your username and password (yeah, you need to create an account first), then load a ROM and play! What is the Achievement Overlay and how do I access it? \u00b6 The Achievement Overlay is a built-in RetroAchievements screen that shows the achievements you can earn and their descriptions of what is required, which achievements you have earned, your achievement score, details on high score leaderboard scores, and more. Normally, to access it, this will be set up on ESC keyboard key, or the pause function in the game. In most emulators, a game must be active for it to be functional. Some of the emulators should already be setup assigning a controller button to view the achievement overlay. Generally ESC on the keyboard should activate it, but if you want to assign it to a controller, here are some tricks for some of the official emulators: For RAVBA, go to Tools \u21d2 Key Shortcuts \u21d2 Emulation, select \"Pause\", set \"shortcut key\" to a button and click \"Assign\" For RASNES, go to Input \u21d2 Customize Hotkeys and change Pause/Overlay on page 1. For RANES, Config \u21d2 Map Hotkeys and change Pause to a button ( Note : this can crash the emulator, do it without a rom loaded for better chances). RetroArch emulators \u00b6 For non-Windows operating systems you need to use RetroArch . Currently you can earn achievements via RetroArch on the following platforms: Windows Linux Mac Android (yes! you can earn achievements on-the-go with your Android phone!) PlayStation Vita (needs to be hacked with HENkaku ) PlayStation 3 Playstation 4 Wii U Nintendo 3DS Nintendo Switch Raspberry Pi (recommended systems: RetroPie , lakka and RecalBox ) Full list of Retroarch supported platforms is in this link. You can get RetroArch on the following links: stable nightly Once you installed and did the initial configuration, follow this guide to setup Achievements: https://docs.libretro.com/guides/retroachievements/ Which RetroArch core should I use? \u00b6 Keep in mind that not every RetroArch core is compatible with RetroAchievements. Check this list to see which one to choose . How can I see the badge when I earn an achievement on RetroArch? \u00b6 This feature was implemented in RetroArch 1.7.7 (May/2019), however there are some platforms where it still doesn't work. You just need to assure the Menu Widget option enabled (and it's usually enabled by default). What are the white points? \u00b6 White points, known as Retro Ratio points, are secondary points based on how hard an achievement is, however this feature is not very accurate currently . Explained here in detail . My welcome email has gone missing! \u00b6 Unfortunately sometimes the welcome email has been known to go missing. If this happens, please log in with your username/password you registered with, then visit your settings page. At the top you'll find the option to resend your registration email! Why can't I see my new profile picture? \u00b6 Press Ctrl + F5 (on most browsers). Sometimes after you've changed your profile picture (also known as avatar or user pic) and you need to refresh your browser cache; in most browsers Ctrl + F5 is the quickest way to do it. Where can I find ROMs? \u00b6 Not here. It is illegal to host or distribute copyrighted ROMs. However we have a page about Free Games where you can find some really cool homebrews. Why is my game not loading up achievements? \u00b6 Either: It doesn't have achievements. You have the incorrect rom. A good practice is to check the official game's forum topic. If you still don't have an answer check this page here for more details: My game is not loading achievements . Why do I get a message that some achievements are unsupported? \u00b6 This message informs the user that some achievements cannot be activated either because their version of RetroArch and/or the core being used does not support some newer logic features, or because required areas of the RAM are not exposed for achievement processing. In most cases updating to the lastest version of RetroArch will correct the problem, alternately updating or using a different supported core will resolve the problem. RetroArch/RALibretro doesn't launch my arcade game. What should I do? \u00b6 First things first : be sure you're using the correct RetroArch core. Check here which core you should use to get the RetroAchievements feature for arcade games . Second thing : Arcade ROMs are more complicated than console ROMs. There are a few concepts and terminology you need to understand and then it will start to make sense. Here is a good text on this matter: Demystifying MAME ROMs . Pro tip : use your favorite websearch engine and look for a \"reference set\" (using ROMs randomly obtained from different sources is a \"trial and error\" method and will most likely lead you to a lot of frustration). Will RetroAchievements support this or that console? \u00b6 Short answer: Yes, it will. Long answer: The only correct answer to this question is \"Whenever someone with the skills and desire to code support, does just that.\" - Everyone here is a volunteer so additional support and features happen when they happen. In many cases support for a console is dictated by the emulator(core) developer and is outside of Retroachievement's control. For more information on specific consoles you can check here: System X When? How do I request an achievement set? \u00b6 On each game's page there is a link to \"Request Set\". Clicking this will add your name to the list of users who have requested a set for the game. Clicking again will withdraw the request. To see other users who have requested the set, click on the \"Set Requestors for this game\" link in the \"More Info\" section at bottom of the game page. The total number of requests are tallied and displayed on the Most Requested Sets page which can also be sorted by console. If and when a set is created the user request will be automatically returned to use for another game. The number of requests available to a user is determined as follows: 1 for every year you've had your account 1 for reaching 2500, 5k, 10k, 15k, 20k 1 for every 10k from 20k-180k 1 for every 20k thereafter Note : All achievement developers are volunteers, requesting a set gives no guarantee that achievements will be made. The purpose of the request feature is to give developers visibility to what players want most. You might also consider making achievement suggestions on a game's forum page to help get a set off the ground. What do I do when the achievement isn't working right? \u00b6 When problems with achievements occur, either where the achievement wasn't awarded to you or it was awarded at the wrong time, there are solutions to get the problems fixed and for proper credit to be given to you! First you'll want to report the broken achievement . (This is an excellent way to contribute to the betterment of the community!) It creates a ticket report for the achievement developers who will then review the problem and look for a solution. If the achievement wasn't awarded, you can request a manual-unlock . You'll need to report the broken achievement and provide proof of completion . How do I report a broken achievement? \u00b6 There are two ways to report broken achievements. In the emulator title bar go to RetroAchievements \u21d2 Report Broken Achievements : For Official RetroAchevement emulators only: . For RetroArch users you can submit the report directly via website. On every achievement's page you'll see a link saying Report an issue for this achievement , like in the image below: If you use the Official RetroAchevement emulators you can also report problems from the website achievement page, but it is preferred that you use the method built into the emulators. What details I have to add to a broken achievement report? \u00b6 You have to add those information in order for a developer to recognise an issue: Type of issue (doesn't trigger or triggers at the wrong time) Emulator you were using (and core if using RALib/Retroarch) RA hash (checksum) to recognise a version of the game What details should I add to a broken achievement report? \u00b6 If possible, in the broken achievement report Comment paste a link to a screenshot or video (even better) of where the problem occurred. It's recommended to post screenshots on imgur and videos on YouTube . Also add details like: when it was/wasn't awarded; what game mode (HARDCORE/softcore); what difficulty level or other settings you've selected; how long you were playing; when you most recently died or continued; what you think the problem might be or any details you think could be helpful. This is necessary so the achievement developers know where the problem is. What is an RA hash? \u00b6 RA hash is an unique string of 32 hexadecimal numbers, to distinguish different games and versions of them, all of them have one. How do I check the RA hash of the game I'm playing? \u00b6 For Retroarch - Quick Menu \u21d2 Information, then at the bottom there is \"RetroAchievements Hash\" which is, in fact an RA hash For Standalones/RaLibretro - RetroAchievement tab at the top \u21d2 Get ROM Checksum, and it shows the RA hash How can I get credit for an achievement I earned but wasn't awarded? \u00b6 In short how to request a manual unlock \u00b6 If you use Discord Post in the #manual-unlock channel a request that looks similar to one of these: @manual-unlock http://retroachievements.org/ticketmanager.php?i=9577 HARDCORE Proof: https://youtu.be/uqD-GTkZbLo @manual-unlock http://retroachievements.org/ticketmanager.php?i=16705 softcore Proof: https://i.imgur.com/83bJE43.png If you don't use Discord While signed into RetroAchievments.org send a private message to the RAdmin user with the title: Manual Unlock Request and a description that looks similar to this: Hi. I'm requesting a manual unlock. http://retroachievements.org/ticketmanager.php?i=9577 HARDCORE Proof: https://youtu.be/uqD-GTkZbLo In detail how to request a manual unlock \u00b6 Open a ticket describing with details the problem you had with the achievement. ( How do I report a broken achievement? ) If the achievement wasn't registered on the site due to a network problem, you don't need to open a ticket. Get a proof/evidence that you completed the achievement. Acceptable proofs : Screenshots that show that one is playing in HARDCORE and have completed the achievement. Video of such (even better) ( perfect example of ideal proof provided by gr1nya ). Examples of achievements you've earned that prove you've earned this achievement. Example: You got the achievement for 10k points but the one for 5k points wasn't awarded to you. If you're on our discord server, send a message on the #manual-unlock channel tagging the @manual-unlock role; if you're not on Discord, send a private message message to the RAdmin user. Your message must have: The link to the ticket url. You can find the ticket here: http://retroachievements.org/ticketmanager.php What mode you were playing (HARDCORE/softcore) Link to your qualified proof of completion. Include proof that the achievement was earned in HARDCORE, if you were playing in HARDCORE. Previous request examples: https://discord.com/channels/310192285306454017/453242743292952578/803985066300145715 https://discord.com/channels/310192285306454017/692553884320923759/782277827512762368 https://discord.com/channels/310192285306454017/310195854642249728/713399944618180629 Note: Manual unlocks are intended for players with proof of earning achievements that did not trigger on site due to a bug or network issue. They are not indented for, and will not be awarded to players who have played the game prior to a set being available, or on an another inherently unsupported platform (original hardware for example). What if I got an achievement I didn't earn? \u00b6 Same with not getting it when you should in most cases you'll want to create a ticket report , leaving an explanation of what went wrong. You'll also want to reset these achievements from your earn history so you can get the satisfaction of truly earning them. How do I reset achievements? \u00b6 There are three ways to do this: On the achievement page: On the game page (when you want or need to reset all earns in a game): Near the bottom of your user settings page: Am I the only one with an issue? \u00b6 If an achievement doesn't work correctly for you, there is a very good chance it doesn't work for other people. You can check in the achievement's page and look for where it says 'The achievement has 'X' open tickets': If the game has tickets, click on the 'open tickets' link. There will be a list to show any reports of broken achievements. You can comment on these to add helpful details or say you have a problem with this achievement too. What's considered cheating (for HARDCORE)? What if I find evidence of a cheater? \u00b6 Users are required to earn their achievements fairly and legitimately. In general, a player must unlock achievements: using the latest release version of an approved supported emulator; inside of a game by in-game actions; by their own control; without outside-modifying game files or game code; without using another player\u2019s save file, and; without using outside cheat programs. If this is not clear enough and you need an in-depth ruleset to understand what is cheating, check the Global Leaderboard and Achievement Hunting Rules . We live by an honor code most of all. If you find an evidence of a cheater, send the evidence to RAdmin or email to RAmodmail@gmail.com . I want to make achievements! \u00b6 Good to hear! The best place to start is here: Getting Started as an Achievement Developer . Once you're familiar with the Memory Inspector and the other Achievements related dialogs, you can go to other Developer Docs . Please don't hesitate to ask if you need help, don't struggle! The most important thing is to make sure you're enjoying whatever it is you're doing. If you're not having fun, don't do it. But if you get frustrated and want to persist, just drop a message on the forums or in Discord server and someone will get back to you shortly. How do I reset my password? (If I don't remember my password) \u00b6 Right Here: https://retroachievements.org/resetPassword.php On Site, front page, while not logged in: Will I have any privilege if I become a patron? \u00b6 On the website you'll have a badge to mean \"I helped fund RA!\". On the discord server you'll have access to a dedicated channel. Although we are all immensely grateful for the contributions of the patrons , there is no other bonus besides those ones. Thanks to the Patreon contributions the RetroAchievements project can pay for a decent server to run the website, run the discord bot and also have periodic backups (to recover data in the event of a disaster), and all this with an ad-free experience. The whole community owe a big thank you to the patrons. Is RetroAchievements profiting off of emulation? \u00b6 No. RetroAchievements is a community of devoted fans who want to pay tribute to their favorite games by creating and playing achievements! While we do accept donations through Patreon all of the money donated is given to fund server expenses and keeping the website completely ad-free. All programmers, achievement creators and staff members give their time the betterment of the community at their own expense. I was using the site and it crashed (403 error), what happened? \u00b6 It happened because you typed one of following words on the site: select union update delete insert table from ascii hex unhex drop and also some special characters like \"%\" will cause it This is because the site lacks a proper framework, so in order to make the database safe the protection was added, removing ability to type those words. This issue is temporary and will be resolved when the site gets a proper framework later at some point. The best work around is to copy the text into clipboard before posting it, to ensure that you won't lose anything if it breaks.","title":"FAQ"},{"location":"support/faq/#frequently-asked-questions","text":"What is RetroAchievements.org? What is HARDCORE mode? Which emulator do I need to use? Official RetroAchievements.org emulators What is the Achievement Overlay and how do I access it? RetroArch emulators Which RetroArch core should I use? How can I see the badge when I earn an achievement on RetroArch? What are the white points? Why can't I see my new profile picture? My welcome email has gone missing! Where can I find ROMs? Why is my game not loading up achievements? Why do I get a message that some achievements are unsupported? RetroArch/RALibretro doesn't launch my arcade game. What should I do? Will RetroAchievements support this or that console? How do I request an achievement set? What do I do when the achievement isn't working right? How do I report a broken achievement? What details I have to add to a broken achievement report? What details should I add to a broken achievement report? What is an RA hash? How do I check the RA hash of the game I'm playing? How can I get credit for an achievement I earned but wasn't awarded? In short how to request a manual unlock In detail how to request a manual unlock What if I got an achievement I didn't earn? How do I reset achievements? Am I the only one with an issue? What's considered cheating (for HARDCORE)? What if I find evidence of a cheater? I want to make achievements! How do I reset my password? (If I don't remember my password) Will I have any privilege if I become a patron? Is RetroAchievements profiting off of emulation? I was using the site and it crashed (403 error), what happened?","title":"Frequently Asked Questions"},{"location":"support/faq/#what-is-retroachievementsorg","text":"RetroAchievements.org is a zero profit community who collaborate and compete to earn custom-made achievements in classic games through emulation. Achievements are made by and for the community. We provide various custom-built emulators for you to use which will detect when you have completed various challenges. Once logged in, the emulators will post the achievements you've completed back to the site, so you can check and compare your progress to your friends. Here's an example of RAGens, playing Streets of Rage 2. You will see two leaderboard attempt counters (bottom-right), one achievement popping and finally the Achievement Overlay (press ESC ):","title":"What is RetroAchievements.org?"},{"location":"support/faq/#what-is-hardcore-mode","text":"HARDCORE mode is an additional feature to separate out the good gamers from the great gamers: HARDCORE mode disables all savestate ability in the emulator: you would not be able to save and reload at any time. You would have to complete the game and get the achievements first time, just like it were on the original console. In reward for this, you will earn both the standard and the HARDCORE achievement, in effect earning double points! A regular game worth 400 points, is now worth 800 if you complete it fully on HARDCORE! For example: if you complete the game fully for 400 points, you then have the opportunity to earn another 400 on HARDCORE. Note : If you want to play with the HARDCORE mode disabled (also known as \"softcore\"), expect to have some issues. Read in this link Why you shouldn't use the load state feature .","title":"What is HARDCORE mode?"},{"location":"support/faq/#which-emulator-do-i-need-to-use","text":"The official RetroAchievements.org emulators are all Windows-based. For other operating systems you can use RetroArch. More information below:","title":"Which emulator do I need to use?"},{"location":"support/faq/#official-retroachievementsorg-emulators","text":"Please download the emulator of your choice from the download page , log in using your username and password (yeah, you need to create an account first), then load a ROM and play!","title":"Official RetroAchievements.org emulators"},{"location":"support/faq/#what-is-the-achievement-overlay-and-how-do-i-access-it","text":"The Achievement Overlay is a built-in RetroAchievements screen that shows the achievements you can earn and their descriptions of what is required, which achievements you have earned, your achievement score, details on high score leaderboard scores, and more. Normally, to access it, this will be set up on ESC keyboard key, or the pause function in the game. In most emulators, a game must be active for it to be functional. Some of the emulators should already be setup assigning a controller button to view the achievement overlay. Generally ESC on the keyboard should activate it, but if you want to assign it to a controller, here are some tricks for some of the official emulators: For RAVBA, go to Tools \u21d2 Key Shortcuts \u21d2 Emulation, select \"Pause\", set \"shortcut key\" to a button and click \"Assign\" For RASNES, go to Input \u21d2 Customize Hotkeys and change Pause/Overlay on page 1. For RANES, Config \u21d2 Map Hotkeys and change Pause to a button ( Note : this can crash the emulator, do it without a rom loaded for better chances).","title":"What is the Achievement Overlay and how do I access it?"},{"location":"support/faq/#retroarch-emulators","text":"For non-Windows operating systems you need to use RetroArch . Currently you can earn achievements via RetroArch on the following platforms: Windows Linux Mac Android (yes! you can earn achievements on-the-go with your Android phone!) PlayStation Vita (needs to be hacked with HENkaku ) PlayStation 3 Playstation 4 Wii U Nintendo 3DS Nintendo Switch Raspberry Pi (recommended systems: RetroPie , lakka and RecalBox ) Full list of Retroarch supported platforms is in this link. You can get RetroArch on the following links: stable nightly Once you installed and did the initial configuration, follow this guide to setup Achievements: https://docs.libretro.com/guides/retroachievements/","title":"RetroArch emulators"},{"location":"support/faq/#which-retroarch-core-should-i-use","text":"Keep in mind that not every RetroArch core is compatible with RetroAchievements. Check this list to see which one to choose .","title":"Which RetroArch core should I use?"},{"location":"support/faq/#how-can-i-see-the-badge-when-i-earn-an-achievement-on-retroarch","text":"This feature was implemented in RetroArch 1.7.7 (May/2019), however there are some platforms where it still doesn't work. You just need to assure the Menu Widget option enabled (and it's usually enabled by default).","title":"How can I see the badge when I earn an achievement on RetroArch?"},{"location":"support/faq/#what-are-the-white-points","text":"White points, known as Retro Ratio points, are secondary points based on how hard an achievement is, however this feature is not very accurate currently . Explained here in detail .","title":"What are the white points?"},{"location":"support/faq/#my-welcome-email-has-gone-missing","text":"Unfortunately sometimes the welcome email has been known to go missing. If this happens, please log in with your username/password you registered with, then visit your settings page. At the top you'll find the option to resend your registration email!","title":"My welcome email has gone missing!"},{"location":"support/faq/#why-cant-i-see-my-new-profile-picture","text":"Press Ctrl + F5 (on most browsers). Sometimes after you've changed your profile picture (also known as avatar or user pic) and you need to refresh your browser cache; in most browsers Ctrl + F5 is the quickest way to do it.","title":"Why can't I see my new profile picture?"},{"location":"support/faq/#where-can-i-find-roms","text":"Not here. It is illegal to host or distribute copyrighted ROMs. However we have a page about Free Games where you can find some really cool homebrews.","title":"Where can I find ROMs?"},{"location":"support/faq/#why-is-my-game-not-loading-up-achievements","text":"Either: It doesn't have achievements. You have the incorrect rom. A good practice is to check the official game's forum topic. If you still don't have an answer check this page here for more details: My game is not loading achievements .","title":"Why is my game not loading up achievements?"},{"location":"support/faq/#why-do-i-get-a-message-that-some-achievements-are-unsupported","text":"This message informs the user that some achievements cannot be activated either because their version of RetroArch and/or the core being used does not support some newer logic features, or because required areas of the RAM are not exposed for achievement processing. In most cases updating to the lastest version of RetroArch will correct the problem, alternately updating or using a different supported core will resolve the problem.","title":"Why do I get a message that some achievements are unsupported?"},{"location":"support/faq/#retroarchralibretro-doesnt-launch-my-arcade-game-what-should-i-do","text":"First things first : be sure you're using the correct RetroArch core. Check here which core you should use to get the RetroAchievements feature for arcade games . Second thing : Arcade ROMs are more complicated than console ROMs. There are a few concepts and terminology you need to understand and then it will start to make sense. Here is a good text on this matter: Demystifying MAME ROMs . Pro tip : use your favorite websearch engine and look for a \"reference set\" (using ROMs randomly obtained from different sources is a \"trial and error\" method and will most likely lead you to a lot of frustration).","title":"RetroArch/RALibretro doesn't launch my arcade game. What should I do?"},{"location":"support/faq/#will-retroachievements-support-this-or-that-console","text":"Short answer: Yes, it will. Long answer: The only correct answer to this question is \"Whenever someone with the skills and desire to code support, does just that.\" - Everyone here is a volunteer so additional support and features happen when they happen. In many cases support for a console is dictated by the emulator(core) developer and is outside of Retroachievement's control. For more information on specific consoles you can check here: System X When?","title":"Will RetroAchievements support this or that console?"},{"location":"support/faq/#how-do-i-request-an-achievement-set","text":"On each game's page there is a link to \"Request Set\". Clicking this will add your name to the list of users who have requested a set for the game. Clicking again will withdraw the request. To see other users who have requested the set, click on the \"Set Requestors for this game\" link in the \"More Info\" section at bottom of the game page. The total number of requests are tallied and displayed on the Most Requested Sets page which can also be sorted by console. If and when a set is created the user request will be automatically returned to use for another game. The number of requests available to a user is determined as follows: 1 for every year you've had your account 1 for reaching 2500, 5k, 10k, 15k, 20k 1 for every 10k from 20k-180k 1 for every 20k thereafter Note : All achievement developers are volunteers, requesting a set gives no guarantee that achievements will be made. The purpose of the request feature is to give developers visibility to what players want most. You might also consider making achievement suggestions on a game's forum page to help get a set off the ground.","title":"How do I request an achievement set?"},{"location":"support/faq/#what-do-i-do-when-the-achievement-isnt-working-right","text":"When problems with achievements occur, either where the achievement wasn't awarded to you or it was awarded at the wrong time, there are solutions to get the problems fixed and for proper credit to be given to you! First you'll want to report the broken achievement . (This is an excellent way to contribute to the betterment of the community!) It creates a ticket report for the achievement developers who will then review the problem and look for a solution. If the achievement wasn't awarded, you can request a manual-unlock . You'll need to report the broken achievement and provide proof of completion .","title":"What do I do when the achievement isn't working right?"},{"location":"support/faq/#how-do-i-report-a-broken-achievement","text":"There are two ways to report broken achievements. In the emulator title bar go to RetroAchievements \u21d2 Report Broken Achievements : For Official RetroAchevement emulators only: . For RetroArch users you can submit the report directly via website. On every achievement's page you'll see a link saying Report an issue for this achievement , like in the image below: If you use the Official RetroAchevement emulators you can also report problems from the website achievement page, but it is preferred that you use the method built into the emulators.","title":"How do I report a broken achievement?"},{"location":"support/faq/#what-details-i-have-to-add-to-a-broken-achievement-report","text":"You have to add those information in order for a developer to recognise an issue: Type of issue (doesn't trigger or triggers at the wrong time) Emulator you were using (and core if using RALib/Retroarch) RA hash (checksum) to recognise a version of the game","title":"What details I have to add to a broken achievement report?"},{"location":"support/faq/#what-details-should-i-add-to-a-broken-achievement-report","text":"If possible, in the broken achievement report Comment paste a link to a screenshot or video (even better) of where the problem occurred. It's recommended to post screenshots on imgur and videos on YouTube . Also add details like: when it was/wasn't awarded; what game mode (HARDCORE/softcore); what difficulty level or other settings you've selected; how long you were playing; when you most recently died or continued; what you think the problem might be or any details you think could be helpful. This is necessary so the achievement developers know where the problem is.","title":"What details should I add to a broken achievement report?"},{"location":"support/faq/#what-is-an-ra-hash","text":"RA hash is an unique string of 32 hexadecimal numbers, to distinguish different games and versions of them, all of them have one.","title":"What is an RA hash?"},{"location":"support/faq/#how-do-i-check-the-ra-hash-of-the-game-im-playing","text":"For Retroarch - Quick Menu \u21d2 Information, then at the bottom there is \"RetroAchievements Hash\" which is, in fact an RA hash For Standalones/RaLibretro - RetroAchievement tab at the top \u21d2 Get ROM Checksum, and it shows the RA hash","title":"How do I check the RA hash of the game I'm playing?"},{"location":"support/faq/#how-can-i-get-credit-for-an-achievement-i-earned-but-wasnt-awarded","text":"","title":"How can I get credit for an achievement I earned but wasn't awarded?"},{"location":"support/faq/#in-short-how-to-request-a-manual-unlock","text":"If you use Discord Post in the #manual-unlock channel a request that looks similar to one of these: @manual-unlock http://retroachievements.org/ticketmanager.php?i=9577 HARDCORE Proof: https://youtu.be/uqD-GTkZbLo @manual-unlock http://retroachievements.org/ticketmanager.php?i=16705 softcore Proof: https://i.imgur.com/83bJE43.png If you don't use Discord While signed into RetroAchievments.org send a private message to the RAdmin user with the title: Manual Unlock Request and a description that looks similar to this: Hi. I'm requesting a manual unlock. http://retroachievements.org/ticketmanager.php?i=9577 HARDCORE Proof: https://youtu.be/uqD-GTkZbLo","title":"In short how to request a manual unlock"},{"location":"support/faq/#in-detail-how-to-request-a-manual-unlock","text":"Open a ticket describing with details the problem you had with the achievement. ( How do I report a broken achievement? ) If the achievement wasn't registered on the site due to a network problem, you don't need to open a ticket. Get a proof/evidence that you completed the achievement. Acceptable proofs : Screenshots that show that one is playing in HARDCORE and have completed the achievement. Video of such (even better) ( perfect example of ideal proof provided by gr1nya ). Examples of achievements you've earned that prove you've earned this achievement. Example: You got the achievement for 10k points but the one for 5k points wasn't awarded to you. If you're on our discord server, send a message on the #manual-unlock channel tagging the @manual-unlock role; if you're not on Discord, send a private message message to the RAdmin user. Your message must have: The link to the ticket url. You can find the ticket here: http://retroachievements.org/ticketmanager.php What mode you were playing (HARDCORE/softcore) Link to your qualified proof of completion. Include proof that the achievement was earned in HARDCORE, if you were playing in HARDCORE. Previous request examples: https://discord.com/channels/310192285306454017/453242743292952578/803985066300145715 https://discord.com/channels/310192285306454017/692553884320923759/782277827512762368 https://discord.com/channels/310192285306454017/310195854642249728/713399944618180629 Note: Manual unlocks are intended for players with proof of earning achievements that did not trigger on site due to a bug or network issue. They are not indented for, and will not be awarded to players who have played the game prior to a set being available, or on an another inherently unsupported platform (original hardware for example).","title":"In detail how to request a manual unlock"},{"location":"support/faq/#what-if-i-got-an-achievement-i-didnt-earn","text":"Same with not getting it when you should in most cases you'll want to create a ticket report , leaving an explanation of what went wrong. You'll also want to reset these achievements from your earn history so you can get the satisfaction of truly earning them.","title":"What if I got an achievement I didn't earn?"},{"location":"support/faq/#how-do-i-reset-achievements","text":"There are three ways to do this: On the achievement page: On the game page (when you want or need to reset all earns in a game): Near the bottom of your user settings page:","title":"How do I reset achievements?"},{"location":"support/faq/#am-i-the-only-one-with-an-issue","text":"If an achievement doesn't work correctly for you, there is a very good chance it doesn't work for other people. You can check in the achievement's page and look for where it says 'The achievement has 'X' open tickets': If the game has tickets, click on the 'open tickets' link. There will be a list to show any reports of broken achievements. You can comment on these to add helpful details or say you have a problem with this achievement too.","title":"Am I the only one with an issue?"},{"location":"support/faq/#whats-considered-cheating-for-hardcore-what-if-i-find-evidence-of-a-cheater","text":"Users are required to earn their achievements fairly and legitimately. In general, a player must unlock achievements: using the latest release version of an approved supported emulator; inside of a game by in-game actions; by their own control; without outside-modifying game files or game code; without using another player\u2019s save file, and; without using outside cheat programs. If this is not clear enough and you need an in-depth ruleset to understand what is cheating, check the Global Leaderboard and Achievement Hunting Rules . We live by an honor code most of all. If you find an evidence of a cheater, send the evidence to RAdmin or email to RAmodmail@gmail.com .","title":"What's considered cheating (for HARDCORE)? What if I find evidence of a cheater?"},{"location":"support/faq/#i-want-to-make-achievements","text":"Good to hear! The best place to start is here: Getting Started as an Achievement Developer . Once you're familiar with the Memory Inspector and the other Achievements related dialogs, you can go to other Developer Docs . Please don't hesitate to ask if you need help, don't struggle! The most important thing is to make sure you're enjoying whatever it is you're doing. If you're not having fun, don't do it. But if you get frustrated and want to persist, just drop a message on the forums or in Discord server and someone will get back to you shortly.","title":"I want to make achievements!"},{"location":"support/faq/#how-do-i-reset-my-password-if-i-dont-remember-my-password","text":"Right Here: https://retroachievements.org/resetPassword.php On Site, front page, while not logged in:","title":"How do I reset my password? (If I don't remember my password)"},{"location":"support/faq/#will-i-have-any-privilege-if-i-become-a-patron","text":"On the website you'll have a badge to mean \"I helped fund RA!\". On the discord server you'll have access to a dedicated channel. Although we are all immensely grateful for the contributions of the patrons , there is no other bonus besides those ones. Thanks to the Patreon contributions the RetroAchievements project can pay for a decent server to run the website, run the discord bot and also have periodic backups (to recover data in the event of a disaster), and all this with an ad-free experience. The whole community owe a big thank you to the patrons.","title":"Will I have any privilege if I become a patron?"},{"location":"support/faq/#is-retroachievements-profiting-off-of-emulation","text":"No. RetroAchievements is a community of devoted fans who want to pay tribute to their favorite games by creating and playing achievements! While we do accept donations through Patreon all of the money donated is given to fund server expenses and keeping the website completely ad-free. All programmers, achievement creators and staff members give their time the betterment of the community at their own expense.","title":"Is RetroAchievements profiting off of emulation?"},{"location":"support/faq/#i-was-using-the-site-and-it-crashed-403-error-what-happened","text":"It happened because you typed one of following words on the site: select union update delete insert table from ascii hex unhex drop and also some special characters like \"%\" will cause it This is because the site lacks a proper framework, so in order to make the database safe the protection was added, removing ability to type those words. This issue is temporary and will be resolved when the site gets a proper framework later at some point. The best work around is to copy the text into clipboard before posting it, to ensure that you won't lose anything if it breaks.","title":"I was using the site and it crashed (403 error), what happened?"},{"location":"support/how-to-configure-obs-studio-to-see-the-popups/","text":"In \"Window Capture\" mode, OBS Studio will not capture the popups. The popups are rendered using a \"Layered Window\", and OBS Studio removed support for capturing layered windows If you want to include the popups in your stream, you have two options: change to \"Display Capture\" mode, or add a second \"Window Capture\" for the \"TransparentOverlayWindow\". This page will attempt to walk you through doing the second! Add a second \"Window Capture\" source to the Scene. In the popup dialog, select the \"TransparentOverlayWindow\". You'll probably notice the window is pink. Add a filter to the second \"Window Capture\" Add a \"Color Key\" filter, set the Key Color Type to \"Custom Color\", then use the Select Color dialog to enter #FF01FE as the color. Decrease the similarity to 1 and the opacity to 90. Finally, if you still have a bit of a pink border showing up, enable a Scale Filter. They all seem to eliminate the remnant, so choose whichever you like best.","title":"How to configure OBS Studio to see the popups"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/","text":"Even if you don't know how to create achievements there are many ways to contribute with the RetroAchievements community. Here are some examples. Report broken achievements \u00b6 If an achievement triggered at a wrong time or didn't trigger at all, please report it. We know that many users love free points, but please, even if an achievement triggered at a wrong time, report it! Another important situation that needs to be reported is a cheevo triggering by using some kind of cheat in the game (e.g. stage select code), or by loading a saved game! There are two ways to report a broken cheevo: directly in the emulator or via website. On both cases, add details of the state of your game, when it triggered/didn't trigger, what game mode, where you were when it happened/didn't happen, if you had reset the game recently, anything else you think may be relevant to the achievement. This is necessary for our system so the devs know where there is a problem. Reporting via emulator \u00b6 Go to RetroAchievements -> Report Broken Achievements, this feature is only available on official emulators (not on RetroArch). See this example: . Report via website \u00b6 On every achievement's page you see a link saying Report an issue for this achievement , like in the image below: Suggest cool achievements/challenges \u00b6 If you know a game very well, you probably can have some cool ideas of challenges for the game. Post your ideas on the forum topic related to the game. We have a guide on how to think about and design good achievements , not the technical side but the conceptual. Then even non-developers can get some inspiration from that info. Feedback is always welcome \u00b6 Give feedback in the forums about what you like or dislike about the achievements sets. Be specific and leave details. Make badges for achievements \u00b6 If you like to play with graphics you can create some art for the achievements badges or icons for the games. Using the screenshot feature from the emulator itself can help with this, and then you can edit to make something cool. You can see more info about it on the Badge and Icon Creation page . Help with the documentation \u00b6 If you have a github account and know the basics of Markdown, you can help with the documentation. Fixing typos, grammar or inaccurate information. Take a look at this page to know the details: Contributing with the docs Participate in community events \u00b6 Such as Achievement of the Week, Leaderboard of the Week or other events that happens on our discord server .","title":"How to Contribute if You Are Not a Developer"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#report-broken-achievements","text":"If an achievement triggered at a wrong time or didn't trigger at all, please report it. We know that many users love free points, but please, even if an achievement triggered at a wrong time, report it! Another important situation that needs to be reported is a cheevo triggering by using some kind of cheat in the game (e.g. stage select code), or by loading a saved game! There are two ways to report a broken cheevo: directly in the emulator or via website. On both cases, add details of the state of your game, when it triggered/didn't trigger, what game mode, where you were when it happened/didn't happen, if you had reset the game recently, anything else you think may be relevant to the achievement. This is necessary for our system so the devs know where there is a problem.","title":"Report broken achievements"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#reporting-via-emulator","text":"Go to RetroAchievements -> Report Broken Achievements, this feature is only available on official emulators (not on RetroArch). See this example: .","title":"Reporting via emulator"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#report-via-website","text":"On every achievement's page you see a link saying Report an issue for this achievement , like in the image below:","title":"Report via website"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#suggest-cool-achievementschallenges","text":"If you know a game very well, you probably can have some cool ideas of challenges for the game. Post your ideas on the forum topic related to the game. We have a guide on how to think about and design good achievements , not the technical side but the conceptual. Then even non-developers can get some inspiration from that info.","title":"Suggest cool achievements/challenges"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#feedback-is-always-welcome","text":"Give feedback in the forums about what you like or dislike about the achievements sets. Be specific and leave details.","title":"Feedback is always welcome"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#make-badges-for-achievements","text":"If you like to play with graphics you can create some art for the achievements badges or icons for the games. Using the screenshot feature from the emulator itself can help with this, and then you can edit to make something cool. You can see more info about it on the Badge and Icon Creation page .","title":"Make badges for achievements"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#help-with-the-documentation","text":"If you have a github account and know the basics of Markdown, you can help with the documentation. Fixing typos, grammar or inaccurate information. Take a look at this page to know the details: Contributing with the docs","title":"Help with the documentation"},{"location":"support/how-to-contribute-if-you-are-not-a-developer/#participate-in-community-events","text":"Such as Achievement of the Week, Leaderboard of the Week or other events that happens on our discord server .","title":"Participate in community events"},{"location":"support/multi-disc-games-tutorial/","text":"m3u files \u00b6 Changing discs on Playstation requires creating a playlist file (.m3u) for your discs. This may sound intimidating but it's actually very simple! Step 1: Place your .bin and .cue files in the desired location. Step 2: Open Notepad Step 3: Type the names of your .cue files exactly as they're named on your files. When you're finished your text document should look something like this: When you're finished save the text document in the same location as your game discs with whatever name you like. Step 4: Rename the document, changing the extension from .txt to .m3u NOTE: If you can't see the .txt extension at the end of your text document title you need to change your settings to show known file extensions. In Windows 10 it's very simple, you can find that on your folder under 'View' and a checkbox reading 'File name extensions' Now you're done! Simple, huh? From here on out, when you start the game, load it using the .m3u file you've just created. NOTE: If you have already played the first disc of a game and find your saves no longer there, you can retrieve them by navigating to your emulators 'saves' folder, finding the save for your first disc and renaming it to match the .m3u you've created. for example: 'Metal Gear Solid (v1.1) (Disc 1).mcr' > 'Metal Gear Solid (v1.1).mcr' Changing Discs in RAlibretro \u00b6 To change discs on RAlibretro, when the game prompts you, go to the file menu and follow these steps Step 1: File > CD-ROM > Open Tray Step 2: File > CD-ROM > Desired Disc Step 3: File > CD-ROM > Close Tray And that's it! Changing Discs in Retroarch \u00b6 You'll find the option in Retroarch under 'Quick Menu > Disk Control' Step 1: Select 'Disk Cycle Tray Status' (Note: If you have the 'Pause when menu activated' option on, you'll need to turn the menu off and on again so that the game knows the disc tray has been opened) Step 2: Select 'Disk Index' (Left and right to change discs) Step 3: Select 'Disk Cycle Tray Status' again And you're done!","title":"Multi Disc Games Tutorial"},{"location":"support/multi-disc-games-tutorial/#m3u-files","text":"Changing discs on Playstation requires creating a playlist file (.m3u) for your discs. This may sound intimidating but it's actually very simple! Step 1: Place your .bin and .cue files in the desired location. Step 2: Open Notepad Step 3: Type the names of your .cue files exactly as they're named on your files. When you're finished your text document should look something like this: When you're finished save the text document in the same location as your game discs with whatever name you like. Step 4: Rename the document, changing the extension from .txt to .m3u NOTE: If you can't see the .txt extension at the end of your text document title you need to change your settings to show known file extensions. In Windows 10 it's very simple, you can find that on your folder under 'View' and a checkbox reading 'File name extensions' Now you're done! Simple, huh? From here on out, when you start the game, load it using the .m3u file you've just created. NOTE: If you have already played the first disc of a game and find your saves no longer there, you can retrieve them by navigating to your emulators 'saves' folder, finding the save for your first disc and renaming it to match the .m3u you've created. for example: 'Metal Gear Solid (v1.1) (Disc 1).mcr' > 'Metal Gear Solid (v1.1).mcr'","title":"m3u files"},{"location":"support/multi-disc-games-tutorial/#changing-discs-in-ralibretro","text":"To change discs on RAlibretro, when the game prompts you, go to the file menu and follow these steps Step 1: File > CD-ROM > Open Tray Step 2: File > CD-ROM > Desired Disc Step 3: File > CD-ROM > Close Tray And that's it!","title":"Changing Discs in RAlibretro"},{"location":"support/multi-disc-games-tutorial/#changing-discs-in-retroarch","text":"You'll find the option in Retroarch under 'Quick Menu > Disk Control' Step 1: Select 'Disk Cycle Tray Status' (Note: If you have the 'Pause when menu activated' option on, you'll need to turn the menu off and on again so that the game knows the disc tray has been opened) Step 2: Select 'Disk Index' (Left and right to change discs) Step 3: Select 'Disk Cycle Tray Status' again And you're done!","title":"Changing Discs in Retroarch"},{"location":"support/my-game-is-not-loading-achievements/","text":"My game is not loading achievements \u00b6 Maybe you loaded up your game but you see a popup: Then you check the overlay (typically ESC) and see: Or maybe you got these messages: and When any of these situations happens, either your game doesn't have achievements yet or more likely you have the incorrect ROM! Just to be sure, search for the game name and check matching results. If your game has achievements but your ROM isn't in our system either you'll need to find the correct ROM or get support for your ROM. How do I know if my ROM is compatible? \u00b6 If your ROM has the same checksum/hash as those linked to the website, then it is compatible. Note : a \"checksum\" or \"hash\" is a number used to confirm if two copies of a file are identical. On RA we use it to assure the player is using the same ROM as the achievement developer. There are two ways of checking what checksums/hashes are linked to a game: Check the Linked Hashes page associated with the game \u00b6 Example for Super Mario Bros. NOTE: You must be logged in to view linked hashes. You can access this page by clicking the \"Hashes linked to this game\" button in the \"More Info\" section on the game page. It takes you to a page like this: Check the top post of the official game's forum thread \u00b6 The link for it can be found at the bottom of the achievement list on game pages OR in the More Info section. Example for Super Mario Bros. : The first post of the official game's forum thread usually has a list of valid ROMs for the respective game and also the checksum of the ROMs. If your ROMs name and checksum aren't listed yet, then you'll need to ask for it ( please, do NOT ask for links to download the ROM , only the filename and the checksum). You can request it in the game's forum page or ask for help in Discord or on the site chat on the front page. Once you make a request, a developer will review it and make sure it works. Then they will add the hash to the 'compatible hashes page.' How to find the checksum of your ROM: \u00b6 In the menu bar RetroAchievements > Get ROM Checksum For more details about checksum and hashes, read here: https://datacrystal.romhacking.net/wiki/Hashes Comprehensive lists of most of the games in RetroAchievements database \u00b6 The user caricatur did a great job by compiling some lists of ROMs linked to games we have at RetroAchievements database. Here are the links to the respective forum posts: Mega Drive/Genesis Master System PC Engine Gameboy Gameboy Color Gameboy Advance NES SNES Nintendo 64","title":"My Game Is Not Loading Achievements"},{"location":"support/my-game-is-not-loading-achievements/#my-game-is-not-loading-achievements","text":"Maybe you loaded up your game but you see a popup: Then you check the overlay (typically ESC) and see: Or maybe you got these messages: and When any of these situations happens, either your game doesn't have achievements yet or more likely you have the incorrect ROM! Just to be sure, search for the game name and check matching results. If your game has achievements but your ROM isn't in our system either you'll need to find the correct ROM or get support for your ROM.","title":"My game is not loading achievements"},{"location":"support/my-game-is-not-loading-achievements/#how-do-i-know-if-my-rom-is-compatible","text":"If your ROM has the same checksum/hash as those linked to the website, then it is compatible. Note : a \"checksum\" or \"hash\" is a number used to confirm if two copies of a file are identical. On RA we use it to assure the player is using the same ROM as the achievement developer. There are two ways of checking what checksums/hashes are linked to a game:","title":"How do I know if my ROM is compatible?"},{"location":"support/my-game-is-not-loading-achievements/#check-the-linked-hashes-page-associated-with-the-game","text":"Example for Super Mario Bros. NOTE: You must be logged in to view linked hashes. You can access this page by clicking the \"Hashes linked to this game\" button in the \"More Info\" section on the game page. It takes you to a page like this:","title":"Check the Linked Hashes page associated with the game"},{"location":"support/my-game-is-not-loading-achievements/#check-the-top-post-of-the-official-games-forum-thread","text":"The link for it can be found at the bottom of the achievement list on game pages OR in the More Info section. Example for Super Mario Bros. : The first post of the official game's forum thread usually has a list of valid ROMs for the respective game and also the checksum of the ROMs. If your ROMs name and checksum aren't listed yet, then you'll need to ask for it ( please, do NOT ask for links to download the ROM , only the filename and the checksum). You can request it in the game's forum page or ask for help in Discord or on the site chat on the front page. Once you make a request, a developer will review it and make sure it works. Then they will add the hash to the 'compatible hashes page.'","title":"Check the top post of the official game's forum thread"},{"location":"support/my-game-is-not-loading-achievements/#how-to-find-the-checksum-of-your-rom","text":"In the menu bar RetroAchievements > Get ROM Checksum For more details about checksum and hashes, read here: https://datacrystal.romhacking.net/wiki/Hashes","title":"How to find the checksum of your ROM:"},{"location":"support/my-game-is-not-loading-achievements/#comprehensive-lists-of-most-of-the-games-in-retroachievements-database","text":"The user caricatur did a great job by compiling some lists of ROMs linked to games we have at RetroAchievements database. Here are the links to the respective forum posts: Mega Drive/Genesis Master System PC Engine Gameboy Gameboy Color Gameboy Advance NES SNES Nintendo 64","title":"Comprehensive lists of most of the games in RetroAchievements database"},{"location":"support/system-x-wen/","text":"This article was originally published in the RANews - November/2020 Intro \u00b6 There seems to be a lot of speculation on what the next available systems to support achievements will be. With the recent announcement of a PS2 core , there have been a lot of questions regarding if/when it will be supported. If you're only interested in the answer to that question, skip to the end of this article . But if you want to understand what exactly is needed to add support for a new system, keep reading! Requirements \u00b6 These are the things that are required in order to add RetroAchievements support for a new system: Emulation (preferably a libretro core). The core must expose memory. The core must function in RALibretro. Unique identification of games. Server support. Step 1: Emulation \u00b6 The first step is, obviously, to have an emulator for the system to be supported. In the early days of RetroAchievements we used standalone emulators - one for each system. Keeping all those emulators bug-free and up-to-date requires a lot of effort and we don't have enough programmers involved on this front. It's currently preferred to use a libretro core for emulation. This way the core developers can push new features and we can focus only on the achievement functionality. Cores can be updated and released without any additional effort for us. Another big advantage is that libretro cores also function in RetroArch , which allows RetroAchievements to be earned on many platforms (the standalone emulators were all Windows-only applications). Managed by : libretro core developers. Step 1a: Exposed Memory \u00b6 As achievement triggers are a series of conditions that watch for things that happen in the emulated RAM, another requirement is access to the system's RAM. Without exposed memory, the Memory Inspector appears blank and achievement creators are unable to create achievements. Additionally, as RetroAchievements only reads the memory once per frame, some systems which heavily leverage paged memory have to provide some way to access the entire memory, not just the current page of memory. Managed by : libretro core developers with some interaction with RetroAchievements developers. Step 1b: RALibretro \u00b6 The core must function in RALibretro, as that is where the achievement developers will identify the important pieces of memory and create the achievements. This is usually only an issue if the core relies on some functionality not yet implemented in RALibretro (like the recently added keyboard and OpenGL 3D support), but some issues are caused by the RALibretro implementation being sufficiently different from the RetroArch implementation. Unless the core can be modified to not require the missing functionality, it cannot be supported until RALibretro is updated. This page lists the status of each core the last time they were tested. Managed by : RetroAchievements Step 2: Game Identification \u00b6 We must be able to uniquely identify the games for the system. We use a method called MD5 , which scans the game's file and generates a number that we usually call as \"hash\". With this number it's possible to confirm if two copies of a file are identical, which makes it possible to ensure the player is using a ROM that the achievements were designed or tested against. For most systems, we are able to just hash the entire ROM file, minus any header information. For larger games (particularly those on CD or DVD) we only hash what we consider to be the most important data to minimize load times. More information on how we identify games can be found here . For systems with writable media (mostly home computers), we have to make sure that we don't hash any files that may be modified by the game itself. Systems that write to the game file must treat the original disk file as readonly and only write changes to a copy of the disk. If the core/emulator modifies the disk file, it can no longer be identified and cannot be considered viable for achievements. Managed by : RetroAchievements Step 3: Configure the Web Server \u00b6 In order to support a new system, the RetroAchievements web server must be properly configured to accept new game and achievement entries for that system. Managed by : RetroAchievements When will RA support PlayStation 2? \u00b6 Regarding PS2 support on RetroAchievements, the libretro team is still working on the PCSX2 core . It seems that they're progressing quite well but it's still a work in progress. Given the requirements described above, we're still on step 1. Therefore, there is still a lot of work to be done before making it possible to support PS2 on RetroAchievements. So a realistic answer for \"PS2 when?\" would be \"not so soon\". When will RA support System X? \u00b6 This page lists the status of each core the last time they were tested.","title":"System X Wen"},{"location":"support/system-x-wen/#intro","text":"There seems to be a lot of speculation on what the next available systems to support achievements will be. With the recent announcement of a PS2 core , there have been a lot of questions regarding if/when it will be supported. If you're only interested in the answer to that question, skip to the end of this article . But if you want to understand what exactly is needed to add support for a new system, keep reading!","title":"Intro"},{"location":"support/system-x-wen/#requirements","text":"These are the things that are required in order to add RetroAchievements support for a new system: Emulation (preferably a libretro core). The core must expose memory. The core must function in RALibretro. Unique identification of games. Server support.","title":"Requirements"},{"location":"support/system-x-wen/#step-1-emulation","text":"The first step is, obviously, to have an emulator for the system to be supported. In the early days of RetroAchievements we used standalone emulators - one for each system. Keeping all those emulators bug-free and up-to-date requires a lot of effort and we don't have enough programmers involved on this front. It's currently preferred to use a libretro core for emulation. This way the core developers can push new features and we can focus only on the achievement functionality. Cores can be updated and released without any additional effort for us. Another big advantage is that libretro cores also function in RetroArch , which allows RetroAchievements to be earned on many platforms (the standalone emulators were all Windows-only applications). Managed by : libretro core developers.","title":"Step 1: Emulation"},{"location":"support/system-x-wen/#step-1a-exposed-memory","text":"As achievement triggers are a series of conditions that watch for things that happen in the emulated RAM, another requirement is access to the system's RAM. Without exposed memory, the Memory Inspector appears blank and achievement creators are unable to create achievements. Additionally, as RetroAchievements only reads the memory once per frame, some systems which heavily leverage paged memory have to provide some way to access the entire memory, not just the current page of memory. Managed by : libretro core developers with some interaction with RetroAchievements developers.","title":"Step 1a: Exposed Memory"},{"location":"support/system-x-wen/#step-1b-ralibretro","text":"The core must function in RALibretro, as that is where the achievement developers will identify the important pieces of memory and create the achievements. This is usually only an issue if the core relies on some functionality not yet implemented in RALibretro (like the recently added keyboard and OpenGL 3D support), but some issues are caused by the RALibretro implementation being sufficiently different from the RetroArch implementation. Unless the core can be modified to not require the missing functionality, it cannot be supported until RALibretro is updated. This page lists the status of each core the last time they were tested. Managed by : RetroAchievements","title":"Step 1b: RALibretro"},{"location":"support/system-x-wen/#step-2-game-identification","text":"We must be able to uniquely identify the games for the system. We use a method called MD5 , which scans the game's file and generates a number that we usually call as \"hash\". With this number it's possible to confirm if two copies of a file are identical, which makes it possible to ensure the player is using a ROM that the achievements were designed or tested against. For most systems, we are able to just hash the entire ROM file, minus any header information. For larger games (particularly those on CD or DVD) we only hash what we consider to be the most important data to minimize load times. More information on how we identify games can be found here . For systems with writable media (mostly home computers), we have to make sure that we don't hash any files that may be modified by the game itself. Systems that write to the game file must treat the original disk file as readonly and only write changes to a copy of the disk. If the core/emulator modifies the disk file, it can no longer be identified and cannot be considered viable for achievements. Managed by : RetroAchievements","title":"Step 2: Game Identification"},{"location":"support/system-x-wen/#step-3-configure-the-web-server","text":"In order to support a new system, the RetroAchievements web server must be properly configured to accept new game and achievement entries for that system. Managed by : RetroAchievements","title":"Step 3: Configure the Web Server"},{"location":"support/system-x-wen/#when-will-ra-support-playstation-2","text":"Regarding PS2 support on RetroAchievements, the libretro team is still working on the PCSX2 core . It seems that they're progressing quite well but it's still a work in progress. Given the requirements described above, we're still on step 1. Therefore, there is still a lot of work to be done before making it possible to support PS2 on RetroAchievements. So a realistic answer for \"PS2 when?\" would be \"not so soon\".","title":"When will RA support PlayStation 2?"},{"location":"support/system-x-wen/#when-will-ra-support-system-x","text":"This page lists the status of each core the last time they were tested.","title":"When will RA support System X?"},{"location":"support/why-you-should-not-use-the-load-state-feature/","text":"Note : currently the issue described here happens only on DuckStation standalone and RetroArch versions older than 1.9.1. Hardcore/Softcore \u00b6 Some users like to use the save/load state feature to save their progress in a game. As you may know, this feature isn't allowed when playing with hardcore mode. But some users aren't hardcore gamers and prefer to keep hardcore mode disabled (let's call this mode softcore)! From time to time some users report that an achievement isn't triggering, and when asked they say they were playing in softcore. One thing you all have to keep in mind is: If you use the load state feature expect to have issues of cheevos not triggering when they are expected to trigger. Here we'll try to explain to those who don't know the details of achievements development why this kind of issue happens. Basic concept behind an achievement \u00b6 Technically an achievement is a group of conditions that must be met in a particular frame of the video game. When you launch a game using an emulator with the RetroAchievements feature, the emulator is always checking if those conditions are met in the current frame. When all conditions for a particular achievement are met, it is awarded and the emulator stops checking the conditions for that achievement. Examples of conditions: health bar is full health bar decreased have 9 lives currently on stage 3 at the title screen of the game starting the boss fight the game is paused The problem with softcore is that when you load a saved state you can ruin the logic behind an achievement. Examples \u00b6 Example 1: Beat the game without passwords \u00b6 Imagine a game with 5 stages and with the password feature. Some probable conditions to trigger the \"Beat the game without passwords\" achievement are (in a real cheevo there will be more conditions, but for this explanation let's consider only these ones): be at stage 1 (and memorize this event as something that happened) be at stage 2 (memorize it) be at stage 3 (memorize it) be at stage 4 (memorize it) be at stage 5 (memorize it) finish stage 5 So to get this achievement you have to pass through all stages and then beat the game. When you are at stage 1, the emulator memorizes it, the same thing for all other stages. And when you finish stage 5 (beat the game) you get the achievement. Now imagine this scenario: a softcore player started the game and played stages 1, 2 and 3 they needed to stop playing when at stage 4 and then they saved a state to continue later they closed the emulator later they could play again, started the game, and loaded the state they saved played stages 4, 5 and beat the game In this scenario, the achievement won't trigger. After closing the emulator it \"forgets\" that you passed through stages 1, 2, and 3. When you run the emulator/game again and load the state being on stage 4, the emulator won't detect that you passed through the previous stages. Then the achievement won't trigger. Example 2: Defeat boss X without taking damage \u00b6 Most likely the conditions to be met in a frame to make this achievement trigger are: entered the boss room (and memorize this event as something that happened). if the player takes any damage, forget they entered the boss room. beat the boss. In other words: to get this achievement the emulator must \"know\" that you entered the boss room, didn't take any damage, and beat the boss. The important detail to pay attention to here: when you take any damage, the emulator \"forgets\" that you entered the boss room. Then even if you load a state to a point where you didn't take any damage but already entered the room, the emulator won't detect that you entered the room. And then the achievement won't trigger. Final Words \u00b6 When reporting a broken achievement give as many details as possible, and don't forget to mention if you are playing on hardcore mode or not . If you want to request an admin to manually award you an achievement that didn't trigger, be sure to provide qualified proof. Especially for achievements like those in the examples above (no damage, no passwords, no death, etc).","title":"Why You Should Not Use the Load State Feature"},{"location":"support/why-you-should-not-use-the-load-state-feature/#hardcoresoftcore","text":"Some users like to use the save/load state feature to save their progress in a game. As you may know, this feature isn't allowed when playing with hardcore mode. But some users aren't hardcore gamers and prefer to keep hardcore mode disabled (let's call this mode softcore)! From time to time some users report that an achievement isn't triggering, and when asked they say they were playing in softcore. One thing you all have to keep in mind is: If you use the load state feature expect to have issues of cheevos not triggering when they are expected to trigger. Here we'll try to explain to those who don't know the details of achievements development why this kind of issue happens.","title":"Hardcore/Softcore"},{"location":"support/why-you-should-not-use-the-load-state-feature/#basic-concept-behind-an-achievement","text":"Technically an achievement is a group of conditions that must be met in a particular frame of the video game. When you launch a game using an emulator with the RetroAchievements feature, the emulator is always checking if those conditions are met in the current frame. When all conditions for a particular achievement are met, it is awarded and the emulator stops checking the conditions for that achievement. Examples of conditions: health bar is full health bar decreased have 9 lives currently on stage 3 at the title screen of the game starting the boss fight the game is paused The problem with softcore is that when you load a saved state you can ruin the logic behind an achievement.","title":"Basic concept behind an achievement"},{"location":"support/why-you-should-not-use-the-load-state-feature/#examples","text":"","title":"Examples"},{"location":"support/why-you-should-not-use-the-load-state-feature/#example-1-beat-the-game-without-passwords","text":"Imagine a game with 5 stages and with the password feature. Some probable conditions to trigger the \"Beat the game without passwords\" achievement are (in a real cheevo there will be more conditions, but for this explanation let's consider only these ones): be at stage 1 (and memorize this event as something that happened) be at stage 2 (memorize it) be at stage 3 (memorize it) be at stage 4 (memorize it) be at stage 5 (memorize it) finish stage 5 So to get this achievement you have to pass through all stages and then beat the game. When you are at stage 1, the emulator memorizes it, the same thing for all other stages. And when you finish stage 5 (beat the game) you get the achievement. Now imagine this scenario: a softcore player started the game and played stages 1, 2 and 3 they needed to stop playing when at stage 4 and then they saved a state to continue later they closed the emulator later they could play again, started the game, and loaded the state they saved played stages 4, 5 and beat the game In this scenario, the achievement won't trigger. After closing the emulator it \"forgets\" that you passed through stages 1, 2, and 3. When you run the emulator/game again and load the state being on stage 4, the emulator won't detect that you passed through the previous stages. Then the achievement won't trigger.","title":"Example 1: Beat the game without passwords"},{"location":"support/why-you-should-not-use-the-load-state-feature/#example-2-defeat-boss-x-without-taking-damage","text":"Most likely the conditions to be met in a frame to make this achievement trigger are: entered the boss room (and memorize this event as something that happened). if the player takes any damage, forget they entered the boss room. beat the boss. In other words: to get this achievement the emulator must \"know\" that you entered the boss room, didn't take any damage, and beat the boss. The important detail to pay attention to here: when you take any damage, the emulator \"forgets\" that you entered the boss room. Then even if you load a state to a point where you didn't take any damage but already entered the room, the emulator won't detect that you entered the room. And then the achievement won't trigger.","title":"Example 2: Defeat boss X without taking damage"},{"location":"support/why-you-should-not-use-the-load-state-feature/#final-words","text":"When reporting a broken achievement give as many details as possible, and don't forget to mention if you are playing on hardcore mode or not . If you want to request an admin to manually award you an achievement that didn't trigger, be sure to provide qualified proof. Especially for achievements like those in the examples above (no damage, no passwords, no death, etc).","title":"Final Words"},{"location":"support/working-with-dlc-for-the-playstation-portable/","text":"Various games for the PlayStation Portable support DLC content. Depending on the game, this may come in different formats with different processes for installation! Standard \u00b6 Traditional (generally paid) DLC was installed by the Playstation Store into game directories. Most of the time this will consist of one or more edat files and a param.pbp. Sometimes more files or directories are needed as well. If you already have decrypted DLC in this format, place it in saves/PSP/GAME/<game_id>/ in the exact format it came in. The game ID -must- match the region of the game you're playing. For example, Dissidia 012 will use ULUS10566 for the US version and ULES01505 for the EU version. For users dumping data from real hardware, you'll need to use custom firmware and the npdecrypter plugin to decrypt your DLC to a format usable by PPSSPP. Further information can be found in the plugin's readme. Save File \u00b6 A number of games distributed (generally free) DLC as extra save files for the games. These will have their own specifically-named directories which are placed alongside your game savedata in saves/PSP/SAVEDATA/. In a few rare cases, there may be multiple sets of DLC that cannot be installed simultaneously for games using this method. For users dumping data from real hardware, just copy it to the same location from the memory stick. Nice and simple. Despite the free nature of this DLC, we don't believe we have the legal rights to distribute it ourselves, so please don't ask. Updates \u00b6 These can be a bit complicated. Currently the only way to apply updates tends to be by patching the update into the iso itself, after decrypting it on real hardware. This is messy and suboptimal, but there isn't a way around it right now. You'll need to open the iso in a tool like UMDGen and insert/replace the updated files in usrdir. Exact per-game instructions on doing so are outside the scope of this guide. Of note, this will be required to be able to use the DLC for Little Big Planet and Bleach: Heat the Soul 7, and may be necessary for other games as well. In the future, this step hopefully can be skipped. Further information: https://github.com/hrydgard/ppsspp/issues/12344 Killzone Liberation \u00b6 This game's final chapter is only available as DLC. This specific game had a very strange DLC configuration, requiring downloading a free \"game\" through the PSP's browser, running it to unpack the DLC file, then leaving the second \"game\" present while playing the real one. Unfortunately, it uses a wide variety of kernel calls unique to this game that aren't emulated yet. Even with the DLC in its post-extraction state, it just causes the game to freeze when present. There's no way to emulate the game's final chapter at this time. Further information: https://github.com/hrydgard/ppsspp/issues/12343 Note \u00b6 While links to github issues are provided here, please refrain from commenting on them unless you have constructive information to provide about the issues at hand. A simple supportive thumbs up to indicate interest in an issue is sufficient.","title":"Working with DLC for the PlayStation Portable"},{"location":"support/working-with-dlc-for-the-playstation-portable/#standard","text":"Traditional (generally paid) DLC was installed by the Playstation Store into game directories. Most of the time this will consist of one or more edat files and a param.pbp. Sometimes more files or directories are needed as well. If you already have decrypted DLC in this format, place it in saves/PSP/GAME/<game_id>/ in the exact format it came in. The game ID -must- match the region of the game you're playing. For example, Dissidia 012 will use ULUS10566 for the US version and ULES01505 for the EU version. For users dumping data from real hardware, you'll need to use custom firmware and the npdecrypter plugin to decrypt your DLC to a format usable by PPSSPP. Further information can be found in the plugin's readme.","title":"Standard"},{"location":"support/working-with-dlc-for-the-playstation-portable/#save-file","text":"A number of games distributed (generally free) DLC as extra save files for the games. These will have their own specifically-named directories which are placed alongside your game savedata in saves/PSP/SAVEDATA/. In a few rare cases, there may be multiple sets of DLC that cannot be installed simultaneously for games using this method. For users dumping data from real hardware, just copy it to the same location from the memory stick. Nice and simple. Despite the free nature of this DLC, we don't believe we have the legal rights to distribute it ourselves, so please don't ask.","title":"Save File"},{"location":"support/working-with-dlc-for-the-playstation-portable/#updates","text":"These can be a bit complicated. Currently the only way to apply updates tends to be by patching the update into the iso itself, after decrypting it on real hardware. This is messy and suboptimal, but there isn't a way around it right now. You'll need to open the iso in a tool like UMDGen and insert/replace the updated files in usrdir. Exact per-game instructions on doing so are outside the scope of this guide. Of note, this will be required to be able to use the DLC for Little Big Planet and Bleach: Heat the Soul 7, and may be necessary for other games as well. In the future, this step hopefully can be skipped. Further information: https://github.com/hrydgard/ppsspp/issues/12344","title":"Updates"},{"location":"support/working-with-dlc-for-the-playstation-portable/#killzone-liberation","text":"This game's final chapter is only available as DLC. This specific game had a very strange DLC configuration, requiring downloading a free \"game\" through the PSP's browser, running it to unpack the DLC file, then leaving the second \"game\" present while playing the real one. Unfortunately, it uses a wide variety of kernel calls unique to this game that aren't emulated yet. Even with the DLC in its post-extraction state, it just causes the game to freeze when present. There's no way to emulate the game's final chapter at this time. Further information: https://github.com/hrydgard/ppsspp/issues/12343","title":"Killzone Liberation"},{"location":"support/working-with-dlc-for-the-playstation-portable/#note","text":"While links to github issues are provided here, please refrain from commenting on them unless you have constructive information to provide about the issues at hand. A simple supportive thumbs up to indicate interest in an issue is sufficient.","title":"Note"}]}